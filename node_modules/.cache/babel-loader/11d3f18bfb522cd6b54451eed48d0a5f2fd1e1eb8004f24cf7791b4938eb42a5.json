{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { dagMap } from \"./dagen\";\nconst dagen = [\"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\", \"zo\"];\nconst shifts = [1, 2];\nconst buildPdfBody = (medewerkers, planning, beschikbaarheid, shiftCountPerMedewerker) => {\n  const body = [];\n  medewerkers.forEach(m => {\n    var _m$maxShifts, _m$leeftijd;\n    const naam = m.naam;\n    const count = shiftCountPerMedewerker[naam] || 0;\n    const max = (_m$maxShifts = m.maxShifts) !== null && _m$maxShifts !== void 0 ? _m$maxShifts : \"?\";\n    const leeftijd = (_m$leeftijd = m.leeftijd) !== null && _m$leeftijd !== void 0 ? _m$leeftijd : \"?\";\n    const row = {\n      Naam: `${naam.split(\" \").map((part, i) => i === 0 ? part : part.charAt(0).toUpperCase() + part.slice(1)).join(\" \")} [${leeftijd}] (${count}/${max})`\n    };\n    dagen.forEach(dag => {\n      shifts.forEach(shift => {\n        var _planning$naam, _planning$naam$dag, _beschikbaarheid$naam, _beschikbaarheid$naam2;\n        const key = `${dag} ${shift}`;\n        const entry = (_planning$naam = planning[naam]) === null || _planning$naam === void 0 ? void 0 : (_planning$naam$dag = _planning$naam[dag]) === null || _planning$naam$dag === void 0 ? void 0 : _planning$naam$dag[shift];\n        const naamKey = naam === null || naam === void 0 ? void 0 : naam.toLowerCase();\n        const beschikbaar = beschikbaarheid === null || beschikbaarheid === void 0 ? void 0 : (_beschikbaarheid$naam = beschikbaarheid[naamKey]) === null || _beschikbaarheid$naam === void 0 ? void 0 : (_beschikbaarheid$naam2 = _beschikbaarheid$naam[dagMap[dag]]) === null || _beschikbaarheid$naam2 === void 0 ? void 0 : _beschikbaarheid$naam2[shift];\n        if (entry) {\n          var _labelMap$entry$funct;\n          const labelMap = {\n            schepper: {\n              vast: \"schep\",\n              standby: \"schep(s)\",\n              laat: \"schep(l)\"\n            },\n            ijsbereider: {\n              vast: \"bereider\",\n              standby: \"bereider(s)\",\n              laat: \"bereider(l)\"\n            },\n            ijsvoorbereider: {\n              vast: \"prep\",\n              standby: \"prep(s)\",\n              laat: \"prep(l)\"\n            }\n          };\n          row[key] = ((_labelMap$entry$funct = labelMap[entry.functie]) === null || _labelMap$entry$funct === void 0 ? void 0 : _labelMap$entry$funct[entry.soort]) || `${entry.functie} (${entry.soort})`;\n        } else if (beschikbaar) {\n          row[key] = \"✓\";\n        } else {\n          row[key] = \"\";\n        }\n      });\n    });\n    body.push(row);\n  });\n  return body;\n};\nfunction addLoonkostenTabel(doc, medewerkers, planning, loonkostenPerUur) {\n  const kolommen = [\"Dag\", ...dagen.flatMap(dag => shifts.map(s => `${dag} shift ${s}`))];\n  const loonkostenPerShift = {};\n  const telling = {\n    ijsbereider: {},\n    ijsvoorbereider: {},\n    schepper: {}\n  };\n  dagen.forEach(dag => {\n    shifts.forEach(shift => {\n      const key = `${dag} shift ${shift}`;\n      loonkostenPerShift[key] = 0;\n      telling.ijsbereider[key] = 0;\n      telling.ijsvoorbereider[key] = 0;\n      telling.schepper[key] = 0;\n      medewerkers.forEach(m => {\n        var _planning$m$naam, _planning$m$naam$dag;\n        const entry = (_planning$m$naam = planning[m.naam]) === null || _planning$m$naam === void 0 ? void 0 : (_planning$m$naam$dag = _planning$m$naam[dag]) === null || _planning$m$naam$dag === void 0 ? void 0 : _planning$m$naam$dag[shift];\n        if (entry) {\n          var _loonkostenPerUur$m$l;\n          let uren = 6;\n          if (entry.soort === \"standby\") uren = 4;else if (entry.soort === \"laat\") uren = 4;\n          const uurloon = (_loonkostenPerUur$m$l = loonkostenPerUur[m.leeftijd]) !== null && _loonkostenPerUur$m$l !== void 0 ? _loonkostenPerUur$m$l : 15;\n          loonkostenPerShift[key] += uren * uurloon;\n          if (telling[entry.functie]) telling[entry.functie][key]++;\n        }\n      });\n    });\n  });\n  const body = [[\"Loonkosten\", ...kolommen.slice(1).map(key => `€ ${Math.round(loonkostenPerShift[key] || 0)}`)], [\"Bereiders\", ...kolommen.slice(1).map(key => telling.ijsbereider[key] || 0)], [\"Voorbereiders\", ...kolommen.slice(1).map(key => telling.ijsvoorbereider[key] || 0)], [\"Scheppers\", ...kolommen.slice(1).map(key => telling.schepper[key] || 0)], [\"Totaal\", ...kolommen.slice(1).map(key => {\n    const a = telling.ijsbereider[key] || 0;\n    const b = telling.ijsvoorbereider[key] || 0;\n    const c = telling.schepper[key] || 0;\n    return a + b + c;\n  })]];\n  const startY = doc.lastAutoTable.finalY + 20;\n  autoTable(doc, {\n    startY,\n    head: [kolommen],\n    body,\n    styles: {\n      fontSize: 8,\n      halign: 'center',\n      valign: 'middle',\n      cellPadding: 2,\n      lineWidth: 0.1,\n      lineColor: [0, 0, 0]\n    },\n    headStyles: {\n      fillColor: [100, 149, 237],\n      textColor: 255\n    },\n    columnStyles: {\n      0: {\n        fontStyle: 'bold',\n        halign: 'left'\n      }\n    }\n  });\n}\nfunction addLegenda(doc) {\n  var _doc$lastAutoTable;\n  const functies = [[{\n    kleur: [30, 58, 138],\n    label: \"Bereider\"\n  }, {\n    kleur: [96, 165, 250],\n    label: \"Bereider(s)\"\n  }, {\n    kleur: [167, 139, 250],\n    label: \"Bereider(l)\"\n  }], [{\n    kleur: [191, 219, 254],\n    label: \"Prep\"\n  }, {\n    kleur: [219, 234, 254],\n    label: \"Prep(s)\"\n  }, {\n    kleur: [196, 181, 253],\n    label: \"Prep(l)\"\n  }], [{\n    kleur: [250, 204, 21],\n    label: \"Schep\"\n  }, {\n    kleur: [254, 240, 138],\n    label: \"Schep(s)\"\n  }, {\n    kleur: [243, 244, 246],\n    label: \"Schep(l)\"\n  }]];\n  const beschikbaar = {\n    kleur: [144, 238, 144],\n    label: \"Beschikbaar\"\n  };\n  const kolombreedte = 70;\n  const rijenPerKolom = functies[0].length;\n  const totaalHoogte = rijenPerKolom * 7 + 10 + 10; // legenda + kopje + beschikbaar\n\n  let startY = ((_doc$lastAutoTable = doc.lastAutoTable) === null || _doc$lastAutoTable === void 0 ? void 0 : _doc$lastAutoTable.finalY) + 10 || 160;\n\n  // ✅ Als niet alles past, voeg een pagina toe\n  const ruimteNodig = startY + totaalHoogte;\n  if (ruimteNodig > doc.internal.pageSize.getHeight() - 20) {\n    doc.addPage();\n    startY = 20;\n  }\n  doc.setFontSize(8);\n  doc.text(\"Legenda:\", 40, startY);\n  const kolomX = [40, 40 + kolombreedte, 40 + kolombreedte * 2];\n  for (let i = 0; i < 3; i++) {\n    functies[i].forEach((item, j) => {\n      const x = kolomX[i];\n      const y = startY + 10 + j * 7;\n      doc.setFillColor(...item.kleur);\n      doc.rect(x, y - 5, 5, 5, \"F\");\n      doc.text(item.label, x + 8, y);\n    });\n  }\n  const beschikbaarY = startY + 10 + rijenPerKolom * 7 + 5;\n  doc.setFillColor(...beschikbaar.kleur);\n  doc.rect(40, beschikbaarY - 5, 5, 5, \"F\");\n  doc.text(beschikbaar.label, 48, beschikbaarY);\n  return beschikbaarY + 10; // voor volgende blok\n}\nfunction addOpmerkingenOnderLegenda(doc, medewerkers, beschikbaarheid, startY) {\n  const opmerkingen = medewerkers.map(m => {\n    var _beschikbaarheid$naam3, _beschikbaarheid$naam4;\n    const naamKey = m.naam.toLowerCase();\n    const opmerking = beschikbaarheid === null || beschikbaarheid === void 0 ? void 0 : (_beschikbaarheid$naam3 = beschikbaarheid[naamKey]) === null || _beschikbaarheid$naam3 === void 0 ? void 0 : (_beschikbaarheid$naam4 = _beschikbaarheid$naam3.opmerking) === null || _beschikbaarheid$naam4 === void 0 ? void 0 : _beschikbaarheid$naam4.trim();\n    if (opmerking) {\n      return `• ${m.naam}: ${opmerking}`;\n    }\n    return null;\n  }).filter(Boolean);\n  if (opmerkingen.length === 0) return startY;\n  const ruimteNodig = opmerkingen.length * 6 + 16;\n  if (startY + ruimteNodig > doc.internal.pageSize.getHeight() - 20) {\n    doc.addPage();\n    startY = 20;\n  }\n  const margeLinks = 20;\n  const regelhoogte = 6;\n  doc.setFontSize(9);\n  doc.setTextColor(33, 37, 41);\n  doc.setFont(undefined, \"bold\");\n  doc.text(\"Opmerkingen:\", margeLinks, startY + 10);\n  doc.setFont(undefined, \"normal\");\n  opmerkingen.forEach((regel, i) => {\n    doc.text(regel, margeLinks + 4, startY + 16 + i * regelhoogte);\n  });\n  return startY + ruimteNodig;\n}\nexport const exportToPDF = ({\n  medewerkers,\n  planning,\n  beschikbaarheid,\n  loonkostenPerUur,\n  shiftCountPerMedewerker\n}) => {\n  var _doc$lastAutoTable$fi, _doc$lastAutoTable2;\n  const doc = new jsPDF({\n    orientation: \"landscape\",\n    format: \"a4\"\n  });\n  const vandaag = new Date();\n  const datumStr = vandaag.toLocaleDateString(\"nl-NL\");\n  const weekNr = getWeekNumber(vandaag);\n  doc.setFontSize(16);\n  doc.text(`Beschikbaarheid ijssalon Vincenzo – versie (${datumStr})`, 14, 12);\n  const pageWidth = doc.internal.pageSize.getWidth();\n  const margin = 20;\n  const tableColumn = [\"Naam\", ...dagen.flatMap(dag => shifts.map(shift => `${dag} ${shift}`))];\n  const body = buildPdfBody(medewerkers, planning, beschikbaarheid, shiftCountPerMedewerker);\n  autoTable(doc, {\n    startY: 20,\n    tableWidth: pageWidth - margin,\n    columns: tableColumn.map(key => ({\n      header: key,\n      dataKey: key\n    })),\n    body,\n    styles: {\n      fontSize: 8,\n      cellPadding: 2,\n      halign: \"center\",\n      valign: \"middle\",\n      lineWidth: 0.1,\n      lineColor: [0, 0, 0]\n    },\n    headStyles: {\n      fillColor: [41, 128, 185],\n      textColor: [255, 255, 255],\n      fontStyle: \"bold\"\n    },\n    columnStyles: {\n      Naam: {\n        halign: \"left\",\n        cellWidth: 60\n      }\n    },\n    didParseCell(data) {\n      const colKey = data.column.dataKey;\n      const rawText = typeof data.cell.raw === \"string\" ? data.cell.raw : \"\";\n      const val = rawText.toLowerCase().trim();\n      const kleuren = {\n        \"bereider\": [30, 58, 138],\n        \"bereider(s)\": [96, 165, 250],\n        \"bereider(l)\": [167, 139, 250],\n        \"prep\": [191, 219, 254],\n        \"prep(s)\": [219, 234, 254],\n        \"prep(l)\": [196, 181, 253],\n        \"schep\": [250, 204, 21],\n        \"schep(s)\": [254, 240, 138],\n        \"schep(l)\": [243, 244, 246],\n        \"✓\": [144, 238, 144]\n      };\n      if (kleuren[val]) {\n        data.cell.styles.fillColor = kleuren[val];\n        const donkereWaarden = [\"bereider\", \"bereider(l)\"];\n        if (donkereWaarden.includes(val)) {\n          data.cell.styles.textColor = [255, 255, 255];\n        } else if (val === \"✓\") {\n          data.cell.styles.textColor = kleuren[val];\n        } else {\n          data.cell.styles.textColor = [0, 0, 0];\n        }\n      }\n      if (colKey === \"Naam\") {\n        const match = rawText.match(/\\((\\d+)[\\/](\\d+)\\)/);\n        if (match) {\n          const count = parseInt(match[1]);\n          const max = parseInt(match[2]);\n          if (count > max) {\n            data.cell.styles.fillColor = [254, 202, 202];\n          } else if (count < max) {\n            data.cell.styles.fillColor = [254, 243, 199];\n          }\n        }\n      }\n    }\n  });\n  const totaalLoonkosten = medewerkers.reduce((totaal, m) => {\n    var _loonkostenPerUur$m$l2;\n    const uurloon = (_loonkostenPerUur$m$l2 = loonkostenPerUur[m.leeftijd]) !== null && _loonkostenPerUur$m$l2 !== void 0 ? _loonkostenPerUur$m$l2 : 15;\n    return totaal + dagen.reduce((dagTotaal, dag) => {\n      return dagTotaal + shifts.reduce((shiftTotaal, shift) => {\n        var _planning$m$naam2, _planning$m$naam2$dag;\n        const entry = (_planning$m$naam2 = planning[m.naam]) === null || _planning$m$naam2 === void 0 ? void 0 : (_planning$m$naam2$dag = _planning$m$naam2[dag]) === null || _planning$m$naam2$dag === void 0 ? void 0 : _planning$m$naam2$dag[shift];\n        if (!entry) return shiftTotaal;\n        let uren = 6;\n        if (entry.soort === \"standby\" || entry.soort === \"laat\") uren = 4;\n        return shiftTotaal + uren * uurloon;\n      }, 0);\n    }, 0);\n  }, 0);\n  const loonkostenTekst = `Totale loonkosten deze week: €${totaalLoonkosten.toFixed(2)}`;\n  const yNaHoofdtabel = ((_doc$lastAutoTable$fi = (_doc$lastAutoTable2 = doc.lastAutoTable) === null || _doc$lastAutoTable2 === void 0 ? void 0 : _doc$lastAutoTable2.finalY) !== null && _doc$lastAutoTable$fi !== void 0 ? _doc$lastAutoTable$fi : 30) + 10;\n  doc.setFontSize(12);\n  doc.setTextColor(40);\n  doc.setFont(undefined, \"bold\");\n  doc.text(loonkostenTekst, 14, yNaHoofdtabel);\n  addLoonkostenTabel(doc, medewerkers, planning, loonkostenPerUur);\n  let laatsteY = addLegenda(doc);\n  laatsteY = addOpmerkingenOnderLegenda(doc, medewerkers, beschikbaarheid, laatsteY);\n  function getWeekNumber(date) {\n    const temp = new Date(date.getTime());\n    temp.setHours(0, 0, 0, 0);\n    temp.setDate(temp.getDate() + 3 - (temp.getDay() + 6) % 7);\n    const week1 = new Date(temp.getFullYear(), 0, 4);\n    return 1 + Math.round(((temp.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\n  }\n  if (laatsteY > doc.internal.pageSize.getHeight() - 20) {\n    doc.addPage();\n    laatsteY = 20;\n  }\n  const safeDatum = datumStr.replace(/-/g, '_');\n  doc.save(`planning_week_${weekNr}_${safeDatum}.pdf`);\n};","map":{"version":3,"names":["jsPDF","autoTable","dagMap","dagen","shifts","buildPdfBody","medewerkers","planning","beschikbaarheid","shiftCountPerMedewerker","body","forEach","m","_m$maxShifts","_m$leeftijd","naam","count","max","maxShifts","leeftijd","row","Naam","split","map","part","i","charAt","toUpperCase","slice","join","dag","shift","_planning$naam","_planning$naam$dag","_beschikbaarheid$naam","_beschikbaarheid$naam2","key","entry","naamKey","toLowerCase","beschikbaar","_labelMap$entry$funct","labelMap","schepper","vast","standby","laat","ijsbereider","ijsvoorbereider","functie","soort","push","addLoonkostenTabel","doc","loonkostenPerUur","kolommen","flatMap","s","loonkostenPerShift","telling","_planning$m$naam","_planning$m$naam$dag","_loonkostenPerUur$m$l","uren","uurloon","Math","round","a","b","c","startY","lastAutoTable","finalY","head","styles","fontSize","halign","valign","cellPadding","lineWidth","lineColor","headStyles","fillColor","textColor","columnStyles","fontStyle","addLegenda","_doc$lastAutoTable","functies","kleur","label","kolombreedte","rijenPerKolom","length","totaalHoogte","ruimteNodig","internal","pageSize","getHeight","addPage","setFontSize","text","kolomX","item","j","x","y","setFillColor","rect","beschikbaarY","addOpmerkingenOnderLegenda","opmerkingen","_beschikbaarheid$naam3","_beschikbaarheid$naam4","opmerking","trim","filter","Boolean","margeLinks","regelhoogte","setTextColor","setFont","undefined","regel","exportToPDF","_doc$lastAutoTable$fi","_doc$lastAutoTable2","orientation","format","vandaag","Date","datumStr","toLocaleDateString","weekNr","getWeekNumber","pageWidth","getWidth","margin","tableColumn","tableWidth","columns","header","dataKey","cellWidth","didParseCell","data","colKey","column","rawText","cell","raw","val","kleuren","donkereWaarden","includes","match","parseInt","totaalLoonkosten","reduce","totaal","_loonkostenPerUur$m$l2","dagTotaal","shiftTotaal","_planning$m$naam2","_planning$m$naam2$dag","loonkostenTekst","toFixed","yNaHoofdtabel","laatsteY","date","temp","getTime","setHours","setDate","getDate","getDay","week1","getFullYear","safeDatum","replace","save"],"sources":["C:/Users/van den Akker/planner/planner-app/src/utils/exportToPDF.js"],"sourcesContent":["import jsPDF from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport { dagMap } from \"./dagen\";\r\n\r\nconst dagen = [\"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\", \"zo\"];\r\nconst shifts = [1, 2];\r\n\r\nconst buildPdfBody = (medewerkers, planning, beschikbaarheid, shiftCountPerMedewerker) => {\r\n  const body = [];\r\n\r\n  medewerkers.forEach((m) => {\r\n    const naam = m.naam;\r\n    const count = shiftCountPerMedewerker[naam] || 0;\r\n    const max = m.maxShifts ?? \"?\";\r\n    const leeftijd = m.leeftijd ?? \"?\";\r\n\r\n    const row = {\r\n      Naam: `${naam.split(\" \").map((part, i) =>\r\n        i === 0 ? part : part.charAt(0).toUpperCase() + part.slice(1)\r\n      ).join(\" \")} [${leeftijd}] (${count}/${max})`\r\n    };\r\n\r\n    dagen.forEach((dag) => {\r\n      shifts.forEach((shift) => {\r\n        const key = `${dag} ${shift}`;\r\n        const entry = planning[naam]?.[dag]?.[shift];\r\n        const naamKey = naam?.toLowerCase();\r\n        const beschikbaar = beschikbaarheid?.[naamKey]?.[dagMap[dag]]?.[shift];\r\n\r\n        if (entry) {\r\n          const labelMap = {\r\n            schepper: { vast: \"schep\", standby: \"schep(s)\", laat: \"schep(l)\" },\r\n            ijsbereider: { vast: \"bereider\", standby: \"bereider(s)\", laat: \"bereider(l)\" },\r\n            ijsvoorbereider: { vast: \"prep\", standby: \"prep(s)\", laat: \"prep(l)\" },\r\n          };\r\n          row[key] = labelMap[entry.functie]?.[entry.soort] || `${entry.functie} (${entry.soort})`;\r\n        } else if (beschikbaar) {\r\n          row[key] = \"✓\";\r\n        } else {\r\n          row[key] = \"\";\r\n        }\r\n      });\r\n    });\r\n\r\n    body.push(row);\r\n  });\r\n\r\n  return body;\r\n};\r\n\r\nfunction addLoonkostenTabel(doc, medewerkers, planning, loonkostenPerUur) {\r\n  const kolommen = [\"Dag\", ...dagen.flatMap(dag => shifts.map(s => `${dag} shift ${s}`))];\r\n\r\n  const loonkostenPerShift = {};\r\n  const telling = {\r\n    ijsbereider: {},\r\n    ijsvoorbereider: {},\r\n    schepper: {}\r\n  };\r\n\r\n  dagen.forEach(dag => {\r\n    shifts.forEach(shift => {\r\n      const key = `${dag} shift ${shift}`;\r\n      loonkostenPerShift[key] = 0;\r\n      telling.ijsbereider[key] = 0;\r\n      telling.ijsvoorbereider[key] = 0;\r\n      telling.schepper[key] = 0;\r\n\r\n      medewerkers.forEach(m => {\r\n        const entry = planning[m.naam]?.[dag]?.[shift];\r\n        if (entry) {\r\n          let uren = 6;\r\n          if (entry.soort === \"standby\") uren = 4;\r\n          else if (entry.soort === \"laat\") uren = 4;\r\n          const uurloon = loonkostenPerUur[m.leeftijd] ?? 15;\r\n          loonkostenPerShift[key] += uren * uurloon;\r\n          if (telling[entry.functie]) telling[entry.functie][key]++;\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  const body = [\r\n    [\"Loonkosten\", ...kolommen.slice(1).map(key => `€ ${Math.round(loonkostenPerShift[key] || 0)}`)],\r\n    [\"Bereiders\", ...kolommen.slice(1).map(key => telling.ijsbereider[key] || 0)],\r\n    [\"Voorbereiders\", ...kolommen.slice(1).map(key => telling.ijsvoorbereider[key] || 0)],\r\n    [\"Scheppers\", ...kolommen.slice(1).map(key => telling.schepper[key] || 0)],\r\n    [\"Totaal\", ...kolommen.slice(1).map(key => {\r\n      const a = telling.ijsbereider[key] || 0;\r\n      const b = telling.ijsvoorbereider[key] || 0;\r\n      const c = telling.schepper[key] || 0;\r\n      return a + b + c;\r\n    })],\r\n  ];\r\n\r\n  const startY = doc.lastAutoTable.finalY + 20;\r\n  autoTable(doc, {\r\n    startY,\r\n    head: [kolommen],\r\n    body,\r\n    styles: {\r\n      fontSize: 8,\r\n      halign: 'center',\r\n      valign: 'middle',\r\n      cellPadding: 2,\r\n      lineWidth: 0.1,\r\n      lineColor: [0, 0, 0],\r\n    },\r\n    headStyles: {\r\n      fillColor: [100, 149, 237],\r\n      textColor: 255,\r\n    },\r\n    columnStyles: { 0: { fontStyle: 'bold', halign: 'left' } },\r\n  });\r\n}\r\n\r\nfunction addLegenda(doc) {\r\n  const functies = [\r\n    [\r\n      { kleur: [30, 58, 138], label: \"Bereider\" },\r\n      { kleur: [96, 165, 250], label: \"Bereider(s)\" },\r\n      { kleur: [167, 139, 250], label: \"Bereider(l)\" },\r\n    ],\r\n    [\r\n      { kleur: [191, 219, 254], label: \"Prep\" },\r\n      { kleur: [219, 234, 254], label: \"Prep(s)\" },\r\n      { kleur: [196, 181, 253], label: \"Prep(l)\" },\r\n    ],\r\n    [\r\n      { kleur: [250, 204, 21], label: \"Schep\" },\r\n      { kleur: [254, 240, 138], label: \"Schep(s)\" },\r\n      { kleur: [243, 244, 246], label: \"Schep(l)\" },\r\n    ],\r\n  ];\r\n\r\n  const beschikbaar = { kleur: [144, 238, 144], label: \"Beschikbaar\" };\r\n\r\n  const kolombreedte = 70;\r\n  const rijenPerKolom = functies[0].length;\r\n  const totaalHoogte = rijenPerKolom * 7 + 10 + 10; // legenda + kopje + beschikbaar\r\n\r\n  let startY = doc.lastAutoTable?.finalY + 10 || 160;\r\n\r\n  // ✅ Als niet alles past, voeg een pagina toe\r\n  const ruimteNodig = startY + totaalHoogte;\r\n  if (ruimteNodig > doc.internal.pageSize.getHeight() - 20) {\r\n    doc.addPage();\r\n    startY = 20;\r\n  }\r\n\r\n  doc.setFontSize(8);\r\n  doc.text(\"Legenda:\", 40, startY);\r\n\r\n  const kolomX = [40, 40 + kolombreedte, 40 + kolombreedte * 2];\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    functies[i].forEach((item, j) => {\r\n      const x = kolomX[i];\r\n      const y = startY + 10 + j * 7;\r\n      doc.setFillColor(...item.kleur);\r\n      doc.rect(x, y - 5, 5, 5, \"F\");\r\n      doc.text(item.label, x + 8, y);\r\n    });\r\n  }\r\n\r\n  const beschikbaarY = startY + 10 + rijenPerKolom * 7 + 5;\r\n  doc.setFillColor(...beschikbaar.kleur);\r\n  doc.rect(40, beschikbaarY - 5, 5, 5, \"F\");\r\n  doc.text(beschikbaar.label, 48, beschikbaarY);\r\n\r\n  return beschikbaarY + 10; // voor volgende blok\r\n}\r\n\r\nfunction addOpmerkingenOnderLegenda(doc, medewerkers, beschikbaarheid, startY) {\r\n  const opmerkingen = medewerkers\r\n    .map((m) => {\r\n      const naamKey = m.naam.toLowerCase();\r\n      const opmerking = beschikbaarheid?.[naamKey]?.opmerking?.trim();\r\n      if (opmerking) {\r\n        return `• ${m.naam}: ${opmerking}`;\r\n      }\r\n      return null;\r\n    })\r\n    .filter(Boolean);\r\n\r\n  if (opmerkingen.length === 0) return startY;\r\n\r\n  const ruimteNodig = opmerkingen.length * 6 + 16;\r\n  if (startY + ruimteNodig > doc.internal.pageSize.getHeight() - 20) {\r\n    doc.addPage();\r\n    startY = 20;\r\n  }\r\n\r\n  const margeLinks = 20;\r\n  const regelhoogte = 6;\r\n\r\n  doc.setFontSize(9);\r\n  doc.setTextColor(33, 37, 41);\r\n  doc.setFont(undefined, \"bold\");\r\n  doc.text(\"Opmerkingen:\", margeLinks, startY + 10);\r\n\r\n  doc.setFont(undefined, \"normal\");\r\n  opmerkingen.forEach((regel, i) => {\r\n    doc.text(regel, margeLinks + 4, startY + 16 + i * regelhoogte);\r\n  });\r\n\r\n  return startY + ruimteNodig;\r\n}\r\n\r\nexport const exportToPDF = ({ medewerkers, planning, beschikbaarheid, loonkostenPerUur, shiftCountPerMedewerker }) => {\r\n  const doc = new jsPDF({ orientation: \"landscape\", format: \"a4\" });\r\n  const vandaag = new Date();\r\n  const datumStr = vandaag.toLocaleDateString(\"nl-NL\");\r\n  const weekNr = getWeekNumber(vandaag);\r\n  doc.setFontSize(16);\r\n  doc.text(`Beschikbaarheid ijssalon Vincenzo – versie (${datumStr})`, 14, 12);\r\n  const pageWidth = doc.internal.pageSize.getWidth();\r\n  const margin = 20;\r\n\r\n  const tableColumn = [\"Naam\", ...dagen.flatMap((dag) => shifts.map((shift) => `${dag} ${shift}`))];\r\n  const body = buildPdfBody(medewerkers, planning, beschikbaarheid, shiftCountPerMedewerker);\r\n\r\n  autoTable(doc, {\r\n    startY: 20,\r\n    tableWidth: pageWidth - margin,\r\n    columns: tableColumn.map((key) => ({ header: key, dataKey: key })),\r\n    body,\r\n    styles: {\r\n      fontSize: 8,\r\n      cellPadding: 2,\r\n      halign: \"center\",\r\n      valign: \"middle\",\r\n      lineWidth: 0.1,\r\n      lineColor: [0, 0, 0],\r\n    },\r\n    headStyles: {\r\n      fillColor: [41, 128, 185],\r\n      textColor: [255, 255, 255],\r\n      fontStyle: \"bold\",\r\n    },\r\n    columnStyles: {\r\n      Naam: { halign: \"left\", cellWidth: 60 },\r\n    },\r\n    didParseCell(data) {\r\n      const colKey = data.column.dataKey;\r\n      const rawText = typeof data.cell.raw === \"string\" ? data.cell.raw : \"\";\r\n      const val = rawText.toLowerCase().trim();\r\n\r\n      const kleuren = {\r\n        \"bereider\": [30, 58, 138],\r\n        \"bereider(s)\": [96, 165, 250],\r\n        \"bereider(l)\": [167, 139, 250],\r\n        \"prep\": [191, 219, 254],\r\n        \"prep(s)\": [219, 234, 254],\r\n        \"prep(l)\": [196, 181, 253],\r\n        \"schep\": [250, 204, 21],\r\n        \"schep(s)\": [254, 240, 138],\r\n        \"schep(l)\": [243, 244, 246],\r\n        \"✓\": [144, 238, 144],\r\n      };\r\n\r\n      if (kleuren[val]) {\r\n        data.cell.styles.fillColor = kleuren[val];\r\n        const donkereWaarden = [\"bereider\", \"bereider(l)\"];\r\n        if (donkereWaarden.includes(val)) {\r\n          data.cell.styles.textColor = [255, 255, 255];\r\n        } else if (val === \"✓\") {\r\n          data.cell.styles.textColor = kleuren[val];\r\n        } else {\r\n          data.cell.styles.textColor = [0, 0, 0];\r\n        }\r\n      }\r\n\r\n      if (colKey === \"Naam\") {\r\n        const match = rawText.match(/\\((\\d+)[\\/](\\d+)\\)/);\r\n        if (match) {\r\n          const count = parseInt(match[1]);\r\n          const max = parseInt(match[2]);\r\n          if (count > max) {\r\n            data.cell.styles.fillColor = [254, 202, 202];\r\n          } else if (count < max) {\r\n            data.cell.styles.fillColor = [254, 243, 199];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const totaalLoonkosten = medewerkers.reduce((totaal, m) => {\r\n    const uurloon = loonkostenPerUur[m.leeftijd] ?? 15;\r\n    return totaal + dagen.reduce((dagTotaal, dag) => {\r\n      return dagTotaal + shifts.reduce((shiftTotaal, shift) => {\r\n        const entry = planning[m.naam]?.[dag]?.[shift];\r\n        if (!entry) return shiftTotaal;\r\n        let uren = 6;\r\n        if (entry.soort === \"standby\" || entry.soort === \"laat\") uren = 4;\r\n        return shiftTotaal + uren * uurloon;\r\n      }, 0);\r\n    }, 0);\r\n  }, 0);\r\n\r\n  const loonkostenTekst = `Totale loonkosten deze week: €${totaalLoonkosten.toFixed(2)}`;\r\n  const yNaHoofdtabel = (doc.lastAutoTable?.finalY ?? 30) + 10;\r\n  doc.setFontSize(12);\r\n  doc.setTextColor(40);\r\n  doc.setFont(undefined, \"bold\");\r\n  doc.text(loonkostenTekst, 14, yNaHoofdtabel);\r\n\r\n  addLoonkostenTabel(doc, medewerkers, planning, loonkostenPerUur);\r\n  let laatsteY = addLegenda(doc);\r\n  laatsteY = addOpmerkingenOnderLegenda(doc, medewerkers, beschikbaarheid, laatsteY);\r\n\r\nfunction getWeekNumber(date) {\r\n  const temp = new Date(date.getTime());\r\n  temp.setHours(0, 0, 0, 0);\r\n  temp.setDate(temp.getDate() + 3 - ((temp.getDay() + 6) % 7));\r\n  const week1 = new Date(temp.getFullYear(), 0, 4);\r\n  return 1 + Math.round(((temp.getTime() - week1.getTime()) / 86400000 - 3 + ((week1.getDay() + 6) % 7)) / 7);\r\n}\r\n\r\n  if (laatsteY > doc.internal.pageSize.getHeight() - 20) {\r\n    doc.addPage();\r\n    laatsteY = 20;\r\n  }\r\n\r\n  const safeDatum = datumStr.replace(/-/g, '_');\r\n  doc.save(`planning_week_${weekNr}_${safeDatum}.pdf`);\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}