{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\van den Akker\\\\planner\\\\planner-app\\\\src\\\\utils\\\\plannerHelpers.js\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function importeerLoonkostenKnop(setLoonkosten) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"bg-blue-500 text-white px-3 py-1 rounded\",\n    onClick: () => {\n      const input = document.createElement(\"input\");\n      input.type = \"file\";\n      input.accept = \".xlsx,.xls\";\n      input.onchange = e => {\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = evt => {\n          const data = new Uint8Array(evt.target.result);\n          const workbook = XLSX.read(data, {\n            type: \"array\"\n          });\n          const sheet = workbook.Sheets[workbook.SheetNames[0]];\n          const json = XLSX.utils.sheet_to_json(sheet);\n          const mapping = {};\n          json.forEach(row => {\n            const leeftijd = parseInt(row[\"Leeftijd\"]);\n            const uurloon = parseFloat(row[\"Uurloon\"]);\n            if (!isNaN(leeftijd) && !isNaN(uurloon)) {\n              mapping[leeftijd] = uurloon;\n            }\n          });\n          setLoonkosten(mapping);\n          localStorage.setItem(\"loonkosten\", JSON.stringify(mapping));\n        };\n        reader.readAsArrayBuffer(file);\n      };\n      input.click();\n    },\n    children: \"Uurlonen importeren\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\nexport function handleBeschikbaarheidUpload(e, setBeschikbaarheid, setMedewerkers) {\n  const file = e.target.files[0];\n  const reader = new FileReader();\n  reader.onload = evt => {\n    const wb = XLSX.read(evt.target.result, {\n      type: \"array\"\n    });\n    const ws = wb.Sheets[wb.SheetNames[0]];\n    const data = XLSX.utils.sheet_to_json(ws, {\n      raw: true\n    });\n    const structuur = {};\n    data.forEach(row => {\n      const naam = (row[\"Naam\"] || \"\").trim().toLowerCase();\n      if (!naam) return;\n      const dagen = {\n        Ma: \"maandag\",\n        Di: \"dinsdag\",\n        Wo: \"woensdag\",\n        Do: \"donderdag\",\n        Vr: \"vrijdag\",\n        Za: \"zaterdag\",\n        Zo: \"zondag\"\n      };\n      const beschikbaarheidMedewerker = {\n        opmerking: (row === null || row === void 0 ? void 0 : row.Opmerking) || \"\"\n      };\n      Object.keys(row).forEach(kolom => {\n        const match = kolom.match(/^(Ma|Di|Wo|Do|Vr|Za|Zo)\\s?([12])$/);\n        if (match) {\n          const [_, dagCode, shiftStr] = match;\n          const dag = dagen[dagCode];\n          const shift = parseInt(shiftStr);\n          const waarde = (row[kolom] || \"\").toString().toLowerCase();\n          if (!beschikbaarheidMedewerker[dag]) beschikbaarheidMedewerker[dag] = {};\n          beschikbaarheidMedewerker[dag][shift] = waarde === \"beschikbaar\" || waarde === \"ja\";\n        }\n      });\n      structuur[naam] = beschikbaarheidMedewerker;\n    });\n    console.log(\"âœ… Beschikbaarheid ingelezen:\", structuur);\n    setBeschikbaarheid(structuur);\n    const medewerkersUniek = Array.from(new Set(data.map(r => {\n      var _r$Naam;\n      return (_r$Naam = r.Naam) === null || _r$Naam === void 0 ? void 0 : _r$Naam.trim().toLowerCase();\n    }).filter(Boolean))).map(naam => {\n      const row = data.find(r => (r.Naam || \"\").trim().toLowerCase() === naam);\n      const geboorteDatumRuw = row === null || row === void 0 ? void 0 : row.geboortedatum;\n      let geboortedatum = typeof geboorteDatumRuw === \"number\" ? new Date((geboorteDatumRuw - 25569) * 86400 * 1000) : new Date(geboorteDatumRuw);\n      if (isNaN(geboortedatum.getTime())) {\n        geboortedatum = new Date(\"2000-01-01\");\n      }\n      const vandaag = new Date();\n      const leeftijd = vandaag.getFullYear() - geboortedatum.getFullYear() - (vandaag < new Date(vandaag.getFullYear(), geboortedatum.getMonth(), geboortedatum.getDate()) ? 1 : 0);\n      return {\n        naam: naam.charAt(0).toUpperCase() + naam.slice(1),\n        leeftijd: leeftijd,\n        maxShifts: parseInt(row === null || row === void 0 ? void 0 : row.MaxShifts) || 5,\n        opmerking: (row === null || row === void 0 ? void 0 : row.Opmerking) || \"\"\n      };\n    });\n    setMedewerkers(medewerkersUniek);\n    console.log(\"âœ… Medewerkers geladen:\", medewerkersUniek);\n    localStorage.setItem(\"medewerkers\", JSON.stringify(medewerkersUniek));\n  };\n  reader.readAsArrayBuffer(file);\n}\nexport function importeerBeschikbaarheidKnop(setBeschikbaarheid, setMedewerkers) {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"bg-green-600 text-white px-4 py-2 rounded cursor-pointer\",\n    children: [\"Import beschikbaarheid\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx\",\n      className: \"hidden\",\n      onChange: e => handleBeschikbaarheidUpload(e, setBeschikbaarheid, setMedewerkers)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n\n// ... (de rest van het bestand blijft ongewijzigd)\n\nexport function handleFileUpload(e, setVakanties, setMedewerkers, beschikbaarheid) {\n  const file = e.target.files[0];\n  const reader = new FileReader();\n  reader.onload = evt => {\n    const wb = XLSX.read(evt.target.result, {\n      type: \"array\"\n    });\n    const ws = wb.Sheets[wb.SheetNames[0]];\n    const data = XLSX.utils.sheet_to_json(ws).filter(r => r && typeof r.Naam === \"string\" && r.Naam.trim() !== \"\" && r.Startdatum && r.Einddatum);\n    console.log(\"ðŸ“¥ Gelezen data uit Excel:\", data);\n    setVakanties(data);\n    console.log(\"ðŸ“… Vakanties opgeslagen:\", data);\n    const namenUitVakantie = data.map(r => (r.Naam || \"\").trim().toLowerCase()).filter(Boolean);\n    const namenUitBeschikbaarheid = Object.keys(beschikbaarheid).map(n => n.trim().toLowerCase());\n    const alleNamen = Array.from(new Set([...namenUitVakantie, ...namenUitBeschikbaarheid]));\n    // Voeg alleen medewerkers toe die nog niet in de lijst staan\n    setMedewerkers(vorige => {\n      const bestaandeNamen = new Set(vorige.map(m => m.naam.trim().toLowerCase()));\n      const nieuwe = alleNamen.filter(n => !bestaandeNamen.has(n)).map(naam => ({\n        naam: naam.charAt(0).toUpperCase() + naam.slice(1),\n        leeftijd: 18,\n        maxShifts: 5,\n        opmerking: \"\"\n      }));\n      return [...vorige, ...nieuwe];\n    });\n  };\n  reader.readAsArrayBuffer(file);\n}\nexport function handleFeestdagenUpload(e, setFeestdagen, setFeestdagOorspronkelijk) {\n  const file = e.target.files[0];\n  const reader = new FileReader();\n  reader.onload = evt => {\n    const wb = XLSX.read(evt.target.result, {\n      type: \"array\"\n    });\n    const ws = wb.Sheets[wb.SheetNames[0]];\n    const data = XLSX.utils.sheet_to_json(ws);\n    const datums = data.filter(r => r.Datum).map(r => {\n      const raw = r.Datum;\n      const d = typeof raw === \"number\" ? XLSX.SSF.parse_date_code(raw) ? new Date((raw - 25569) * 86400 * 1000) : new Date(NaN) : new Date(raw);\n      return new Date(d.getFullYear(), d.getMonth(), d.getDate()).toLocaleDateString(\"sv-SE\");\n    });\n    setFeestdagen(datums);\n    setFeestdagOorspronkelijk(data);\n  };\n  reader.readAsArrayBuffer(file);\n}\nexport function getFileChangeHandler({\n  setVakanties,\n  setMedewerkers,\n  beschikbaarheid,\n  setFeestdagen,\n  setFeestdagOorspronkelijk,\n  setBeschikbaarheid\n}) {\n  return type => e => {\n    if (type === \"vakanties\") {\n      handleFileUpload(e, setVakanties, setMedewerkers, beschikbaarheid);\n    } else if (type === \"feestdagen\") {\n      handleFeestdagenUpload(e, setFeestdagen, setFeestdagOorspronkelijk);\n    } else if (type === \"beschikbaarheid\") {\n      handleBeschikbaarheidUpload(e, setBeschikbaarheid, setMedewerkers);\n    }\n  };\n}\nexport function calculateShiftTotals(medewerkers = [], dagen = [], shifts = [], planning = {}) {\n  const totals = {};\n  medewerkers.forEach(medewerker => {\n    dagen.forEach(dag => {\n      shifts.forEach(shift => {\n        var _planning$medewerker$, _planning$medewerker$2;\n        const ingepland = (_planning$medewerker$ = planning[medewerker.naam]) === null || _planning$medewerker$ === void 0 ? void 0 : (_planning$medewerker$2 = _planning$medewerker$[dag]) === null || _planning$medewerker$2 === void 0 ? void 0 : _planning$medewerker$2[shift];\n        if (ingepland) {\n          const {\n            functie\n          } = ingepland;\n          if (!totals[dag]) totals[dag] = {};\n          if (!totals[dag][shift]) totals[dag][shift] = {\n            ijsbereider: 0,\n            ijsvoorbereider: 0,\n            schepper: 0\n          };\n          if (functie) totals[dag][shift][functie] += 1;\n        }\n      });\n    });\n  });\n  return totals;\n}\nexport function berekenLoonkostenPerDag(dagen, medewerkers, planning, salarissenPerLeeftijd) {\n  const loonkosten = {};\n  dagen.forEach(dag => {\n    let totaal = 0;\n    medewerkers.forEach(({\n      naam,\n      leeftijd\n    }) => {\n      var _planning$naam;\n      const shiftsVoorDag = ((_planning$naam = planning[naam]) === null || _planning$naam === void 0 ? void 0 : _planning$naam[dag]) || {};\n      Object.values(shiftsVoorDag).forEach(({\n        soort\n      }) => {\n        const uren = soort === \"vast\" ? 6 : 4;\n        const uurloon = salarissenPerLeeftijd[leeftijd] || 0;\n        totaal += uren * uurloon;\n      });\n    });\n    loonkosten[dag] = totaal;\n  });\n  return loonkosten;\n}\nexport function getShiftCountPerMedewerker(planning = {}) {\n  const shiftCount = {};\n  Object.keys(planning).forEach(naam => {\n    let count = 0;\n    const dagen = planning[naam] || {};\n    Object.values(dagen).forEach(shiftsPerDag => {\n      Object.values(shiftsPerDag).forEach(shift => {\n        if (shift && typeof shift === \"object\" && \"functie\" in shift && typeof shift.functie === \"string\" && [\"ijsbereider\", \"ijsvoorbereider\", \"schepper\"].includes(shift.functie.trim().toLowerCase())) {\n          count += 1;\n        }\n      });\n    });\n    shiftCount[naam] = count;\n  });\n  return shiftCount;\n}\nexport function resetMedewerkerPlanning(naam, setPlanning) {\n  setPlanning(prev => {\n    const nieuwe = {\n      ...prev\n    };\n    delete nieuwe[naam];\n    localStorage.setItem(\"planning\", JSON.stringify(nieuwe));\n    return nieuwe;\n  });\n}\nexport function getCellColor(medewerker, dag, shift, beschikbaarheid, planning) {\n  var _planning$medewerker, _planning$medewerker$3, _beschikbaarheid$key$, _beschikbaarheid$key, _beschikbaarheid$key$2;\n  const key = medewerker.trim().toLowerCase();\n  const ingepland = (_planning$medewerker = planning[medewerker]) === null || _planning$medewerker === void 0 ? void 0 : (_planning$medewerker$3 = _planning$medewerker[dag]) === null || _planning$medewerker$3 === void 0 ? void 0 : _planning$medewerker$3[shift];\n  if (ingepland) {\n    const {\n      functie,\n      soort\n    } = ingepland;\n    if (functie === \"ijsbereider\") return {\n      backgroundColor: soort === \"vast\" ? \"#1e3a8a\" : \"#3b82f6\",\n      color: \"white\"\n    };\n    if (functie === \"ijsvoorbereider\") return {\n      backgroundColor: soort === \"vast\" ? \"#bfdbfe\" : \"#93c5fd\"\n    };\n    if (functie === \"schepper\") return {\n      backgroundColor: soort === \"vast\" ? \"#f59e0b\" : \"#fcd34d\"\n    };\n  }\n  const dagMap = {\n    ma: \"maandag\",\n    di: \"dinsdag\",\n    wo: \"woensdag\",\n    do: \"donderdag\",\n    vr: \"vrijdag\",\n    za: \"zaterdag\",\n    zo: \"zondag\"\n  };\n  const langeDag = dagMap[dag.toLowerCase()] || dag;\n  const beschikbaar = (_beschikbaarheid$key$ = (_beschikbaarheid$key = beschikbaarheid[key]) === null || _beschikbaarheid$key === void 0 ? void 0 : (_beschikbaarheid$key$2 = _beschikbaarheid$key[langeDag]) === null || _beschikbaarheid$key$2 === void 0 ? void 0 : _beschikbaarheid$key$2[shift]) !== null && _beschikbaarheid$key$ !== void 0 ? _beschikbaarheid$key$ : false;\n  if (beschikbaar) {\n    return {\n      backgroundColor: \"#90ee90\"\n    }; // lichtgroen\n  }\n  return {\n    backgroundColor: \"#ffffff\"\n  }; // wit\n}","map":{"version":3,"names":["XLSX","jsxDEV","_jsxDEV","importeerLoonkostenKnop","setLoonkosten","className","onClick","input","document","createElement","type","accept","onchange","e","file","target","files","reader","FileReader","onload","evt","data","Uint8Array","result","workbook","read","sheet","Sheets","SheetNames","json","utils","sheet_to_json","mapping","forEach","row","leeftijd","parseInt","uurloon","parseFloat","isNaN","localStorage","setItem","JSON","stringify","readAsArrayBuffer","click","children","fileName","_jsxFileName","lineNumber","columnNumber","handleBeschikbaarheidUpload","setBeschikbaarheid","setMedewerkers","wb","ws","raw","structuur","naam","trim","toLowerCase","dagen","Ma","Di","Wo","Do","Vr","Za","Zo","beschikbaarheidMedewerker","opmerking","Opmerking","Object","keys","kolom","match","_","dagCode","shiftStr","dag","shift","waarde","toString","console","log","medewerkersUniek","Array","from","Set","map","r","_r$Naam","Naam","filter","Boolean","find","geboorteDatumRuw","geboortedatum","Date","getTime","vandaag","getFullYear","getMonth","getDate","charAt","toUpperCase","slice","maxShifts","MaxShifts","importeerBeschikbaarheidKnop","onChange","handleFileUpload","setVakanties","beschikbaarheid","Startdatum","Einddatum","namenUitVakantie","namenUitBeschikbaarheid","n","alleNamen","vorige","bestaandeNamen","m","nieuwe","has","handleFeestdagenUpload","setFeestdagen","setFeestdagOorspronkelijk","datums","Datum","d","SSF","parse_date_code","NaN","toLocaleDateString","getFileChangeHandler","calculateShiftTotals","medewerkers","shifts","planning","totals","medewerker","_planning$medewerker$","_planning$medewerker$2","ingepland","functie","ijsbereider","ijsvoorbereider","schepper","berekenLoonkostenPerDag","salarissenPerLeeftijd","loonkosten","totaal","_planning$naam","shiftsVoorDag","values","soort","uren","getShiftCountPerMedewerker","shiftCount","count","shiftsPerDag","includes","resetMedewerkerPlanning","setPlanning","prev","getCellColor","_planning$medewerker","_planning$medewerker$3","_beschikbaarheid$key$","_beschikbaarheid$key","_beschikbaarheid$key$2","key","backgroundColor","color","dagMap","ma","di","wo","do","vr","za","zo","langeDag","beschikbaar"],"sources":["C:/Users/van den Akker/planner/planner-app/src/utils/plannerHelpers.js"],"sourcesContent":["import * as XLSX from \"xlsx\";\r\n\r\nexport function importeerLoonkostenKnop(setLoonkosten) {\r\n  return (\r\n    <button\r\n      className=\"bg-blue-500 text-white px-3 py-1 rounded\"\r\n      onClick={() => {\r\n        const input = document.createElement(\"input\");\r\n        input.type = \"file\";\r\n        input.accept = \".xlsx,.xls\";\r\n        input.onchange = (e) => {\r\n          const file = e.target.files[0];\r\n          const reader = new FileReader();\r\n          reader.onload = (evt) => {\r\n            const data = new Uint8Array(evt.target.result);\r\n            const workbook = XLSX.read(data, { type: \"array\" });\r\n            const sheet = workbook.Sheets[workbook.SheetNames[0]];\r\n            const json = XLSX.utils.sheet_to_json(sheet);\r\n\r\n            const mapping = {};\r\n            json.forEach((row) => {\r\n              const leeftijd = parseInt(row[\"Leeftijd\"]);\r\n              const uurloon = parseFloat(row[\"Uurloon\"]);\r\n              if (!isNaN(leeftijd) && !isNaN(uurloon)) {\r\n                mapping[leeftijd] = uurloon;\r\n              }\r\n            });\r\n\r\n            setLoonkosten(mapping);\r\n            localStorage.setItem(\"loonkosten\", JSON.stringify(mapping));\r\n          };\r\n          reader.readAsArrayBuffer(file);\r\n        };\r\n        input.click();\r\n      }}\r\n    >\r\n      Uurlonen importeren\r\n    </button>\r\n  );\r\n}\r\n\r\n\r\nexport function handleBeschikbaarheidUpload(e, setBeschikbaarheid, setMedewerkers) {\r\n  const file = e.target.files[0];\r\n  const reader = new FileReader();\r\n\r\n  reader.onload = (evt) => {\r\n    const wb = XLSX.read(evt.target.result, { type: \"array\" });\r\n    const ws = wb.Sheets[wb.SheetNames[0]];\r\n    const data = XLSX.utils.sheet_to_json(ws, { raw: true });\r\n\r\n    const structuur = {};\r\n\r\n    data.forEach((row) => {\r\n      const naam = (row[\"Naam\"] || \"\").trim().toLowerCase();\r\n      if (!naam) return;\r\n    \r\n      const dagen = {\r\n        Ma: \"maandag\", Di: \"dinsdag\", Wo: \"woensdag\", Do: \"donderdag\",\r\n        Vr: \"vrijdag\", Za: \"zaterdag\", Zo: \"zondag\"\r\n      };\r\n    \r\n      const beschikbaarheidMedewerker = {\r\n        opmerking: row?.Opmerking || \"\"\r\n      };\r\n    \r\n      Object.keys(row).forEach((kolom) => {\r\n        const match = kolom.match(/^(Ma|Di|Wo|Do|Vr|Za|Zo)\\s?([12])$/);\r\n        if (match) {\r\n          const [_, dagCode, shiftStr] = match;\r\n          const dag = dagen[dagCode];\r\n          const shift = parseInt(shiftStr);\r\n          const waarde = (row[kolom] || \"\").toString().toLowerCase();\r\n    \r\n          if (!beschikbaarheidMedewerker[dag]) beschikbaarheidMedewerker[dag] = {};\r\n          beschikbaarheidMedewerker[dag][shift] = waarde === \"beschikbaar\" || waarde === \"ja\";\r\n        }\r\n      });\r\n    \r\n      structuur[naam] = beschikbaarheidMedewerker;\r\n    });\r\n    \r\n    \r\n\r\n    console.log(\"âœ… Beschikbaarheid ingelezen:\", structuur);\r\n    setBeschikbaarheid(structuur);\r\n\r\n    const medewerkersUniek = Array.from(new Set(data.map(r => r.Naam?.trim().toLowerCase()).filter(Boolean)))\r\n      .map((naam) => {\r\n        const row = data.find(r => (r.Naam || \"\").trim().toLowerCase() === naam);\r\n\r\n        const geboorteDatumRuw = row?.geboortedatum;\r\n        let geboortedatum = typeof geboorteDatumRuw === \"number\"\r\n          ? new Date((geboorteDatumRuw - 25569) * 86400 * 1000)\r\n          : new Date(geboorteDatumRuw);\r\n        if (isNaN(geboortedatum.getTime())) {\r\n          geboortedatum = new Date(\"2000-01-01\");\r\n        }\r\n\r\n        const vandaag = new Date();\r\n        const leeftijd = vandaag.getFullYear() - geboortedatum.getFullYear() - (\r\n          vandaag < new Date(vandaag.getFullYear(), geboortedatum.getMonth(), geboortedatum.getDate()) ? 1 : 0\r\n        );\r\n\r\n        return {\r\n          naam: naam.charAt(0).toUpperCase() + naam.slice(1),\r\n          leeftijd: leeftijd,\r\n          maxShifts: parseInt(row?.MaxShifts) || 5,\r\n          opmerking: row?.Opmerking || \"\"\r\n        };\r\n      });\r\n\r\n    setMedewerkers(medewerkersUniek);\r\n    console.log(\"âœ… Medewerkers geladen:\", medewerkersUniek);\r\n    localStorage.setItem(\"medewerkers\", JSON.stringify(medewerkersUniek));\r\n  };\r\n\r\n  reader.readAsArrayBuffer(file);\r\n}\r\n\r\nexport function importeerBeschikbaarheidKnop(setBeschikbaarheid, setMedewerkers) {\r\n  return (\r\n    <label className=\"bg-green-600 text-white px-4 py-2 rounded cursor-pointer\">\r\n      Import beschikbaarheid\r\n      <input\r\n        type=\"file\"\r\n        accept=\".xlsx\"\r\n        className=\"hidden\"\r\n        onChange={(e) => handleBeschikbaarheidUpload(e, setBeschikbaarheid, setMedewerkers)}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\n// ... (de rest van het bestand blijft ongewijzigd)\r\n\r\n\r\nexport function handleFileUpload(e, setVakanties, setMedewerkers, beschikbaarheid) {\r\n  const file = e.target.files[0];\r\n  const reader = new FileReader();\r\n\r\n  reader.onload = (evt) => {\r\n    const wb = XLSX.read(evt.target.result, { type: \"array\" });\r\n    const ws = wb.Sheets[wb.SheetNames[0]];\r\n    const data = XLSX.utils.sheet_to_json(ws).filter(\r\n      (r) =>\r\n        r &&\r\n        typeof r.Naam === \"string\" &&\r\n        r.Naam.trim() !== \"\" &&\r\n        r.Startdatum &&\r\n        r.Einddatum\r\n    );\r\n    \r\n    console.log(\"ðŸ“¥ Gelezen data uit Excel:\", data);\r\n    setVakanties(data);\r\n    console.log(\"ðŸ“… Vakanties opgeslagen:\", data);\r\n\r\n    const namenUitVakantie = data.map((r) => (r.Naam || \"\").trim().toLowerCase()).filter(Boolean);\r\n    const namenUitBeschikbaarheid = Object.keys(beschikbaarheid).map((n) => n.trim().toLowerCase());\r\n    const alleNamen = Array.from(new Set([...namenUitVakantie, ...namenUitBeschikbaarheid]));\r\n    // Voeg alleen medewerkers toe die nog niet in de lijst staan\r\nsetMedewerkers((vorige) => {\r\n  const bestaandeNamen = new Set(vorige.map((m) => m.naam.trim().toLowerCase()));\r\n  const nieuwe = alleNamen\r\n    .filter((n) => !bestaandeNamen.has(n))\r\n    .map((naam) => ({\r\n      naam: naam.charAt(0).toUpperCase() + naam.slice(1),\r\n      leeftijd: 18,\r\n      maxShifts: 5,\r\n      opmerking: \"\"\r\n    }));\r\n  return [...vorige, ...nieuwe];\r\n});\r\n  };\r\n\r\n  reader.readAsArrayBuffer(file);\r\n}\r\n\r\nexport function handleFeestdagenUpload(e, setFeestdagen, setFeestdagOorspronkelijk) {\r\n  const file = e.target.files[0];\r\n  const reader = new FileReader();\r\n\r\n  reader.onload = (evt) => {\r\n    const wb = XLSX.read(evt.target.result, { type: \"array\" });\r\n    const ws = wb.Sheets[wb.SheetNames[0]];\r\n    const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n    const datums = data\r\n      .filter((r) => r.Datum)\r\n      .map((r) => {\r\n        const raw = r.Datum;\r\n        const d = typeof raw === \"number\"\r\n          ? XLSX.SSF.parse_date_code(raw)\r\n            ? new Date((raw - 25569) * 86400 * 1000)\r\n            : new Date(NaN)\r\n          : new Date(raw);\r\n\r\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate()).toLocaleDateString(\"sv-SE\");\r\n      });\r\n\r\n    setFeestdagen(datums);\r\n    setFeestdagOorspronkelijk(data);\r\n  };\r\n\r\n  reader.readAsArrayBuffer(file);\r\n}\r\n\r\nexport function getFileChangeHandler({\r\n  setVakanties,\r\n  setMedewerkers,\r\n  beschikbaarheid,\r\n  setFeestdagen,\r\n  setFeestdagOorspronkelijk,\r\n  setBeschikbaarheid\r\n}) {\r\n  return (type) => (e) => {\r\n    if (type === \"vakanties\") {\r\n      handleFileUpload(e, setVakanties, setMedewerkers, beschikbaarheid);\r\n    } else if (type === \"feestdagen\") {\r\n      handleFeestdagenUpload(e, setFeestdagen, setFeestdagOorspronkelijk);\r\n    } else if (type === \"beschikbaarheid\") {\r\n      handleBeschikbaarheidUpload(e, setBeschikbaarheid, setMedewerkers);\r\n    }\r\n  };\r\n}\r\n\r\nexport function calculateShiftTotals(medewerkers = [], dagen = [], shifts = [], planning = {}) {\r\n  const totals = {};\r\n\r\n  medewerkers.forEach((medewerker) => {\r\n    dagen.forEach((dag) => {\r\n      shifts.forEach((shift) => {\r\n        const ingepland = planning[medewerker.naam]?.[dag]?.[shift];\r\n        if (ingepland) {\r\n          const { functie } = ingepland;\r\n          if (!totals[dag]) totals[dag] = {};\r\n          if (!totals[dag][shift]) totals[dag][shift] = { ijsbereider: 0, ijsvoorbereider: 0, schepper: 0 };\r\n          if (functie) totals[dag][shift][functie] += 1;\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  return totals;\r\n}\r\n\r\nexport function berekenLoonkostenPerDag(dagen, medewerkers, planning, salarissenPerLeeftijd) {\r\n  const loonkosten = {};\r\n\r\n  dagen.forEach((dag) => {\r\n    let totaal = 0;\r\n    medewerkers.forEach(({ naam, leeftijd }) => {\r\n      const shiftsVoorDag = planning[naam]?.[dag] || {};\r\n      Object.values(shiftsVoorDag).forEach(({ soort }) => {\r\n        const uren = soort === \"vast\" ? 6 : 4;\r\n        const uurloon = salarissenPerLeeftijd[leeftijd] || 0;\r\n        totaal += uren * uurloon;\r\n      });\r\n    });\r\n    loonkosten[dag] = totaal;\r\n  });\r\n\r\n  return loonkosten;\r\n}\r\n\r\nexport function getShiftCountPerMedewerker(planning = {}) {\r\n  const shiftCount = {};\r\n\r\n  Object.keys(planning).forEach((naam) => {\r\n    let count = 0;\r\n    const dagen = planning[naam] || {};\r\n    Object.values(dagen).forEach((shiftsPerDag) => {\r\n      Object.values(shiftsPerDag).forEach((shift) => {\r\n        if (\r\n          shift &&\r\n          typeof shift === \"object\" &&\r\n          \"functie\" in shift &&\r\n          typeof shift.functie === \"string\" &&\r\n          [\"ijsbereider\", \"ijsvoorbereider\", \"schepper\"].includes(shift.functie.trim().toLowerCase())\r\n        ) {\r\n          count += 1;\r\n        }\r\n      });\r\n    });\r\n    shiftCount[naam] = count;\r\n  });\r\n\r\n  return shiftCount;\r\n}\r\n\r\nexport function resetMedewerkerPlanning(naam, setPlanning) {\r\n  setPlanning((prev) => {\r\n    const nieuwe = { ...prev };\r\n    delete nieuwe[naam];\r\n    localStorage.setItem(\"planning\", JSON.stringify(nieuwe));\r\n    return nieuwe;\r\n  });\r\n}\r\n\r\nexport function getCellColor(medewerker, dag, shift, beschikbaarheid, planning) {\r\n  const key = medewerker.trim().toLowerCase();\r\n  const ingepland = planning[medewerker]?.[dag]?.[shift];\r\n  if (ingepland) {\r\n    const { functie, soort } = ingepland;\r\n    if (functie === \"ijsbereider\") return { backgroundColor: soort === \"vast\" ? \"#1e3a8a\" : \"#3b82f6\", color: \"white\" };\r\n    if (functie === \"ijsvoorbereider\") return { backgroundColor: soort === \"vast\" ? \"#bfdbfe\" : \"#93c5fd\" };\r\n    if (functie === \"schepper\") return { backgroundColor: soort === \"vast\" ? \"#f59e0b\" : \"#fcd34d\" };\r\n  }\r\n\r\n  const dagMap = {\r\n    ma: \"maandag\", di: \"dinsdag\", wo: \"woensdag\",\r\n    do: \"donderdag\", vr: \"vrijdag\", za: \"zaterdag\", zo: \"zondag\"\r\n  };\r\n  const langeDag = dagMap[dag.toLowerCase()] || dag;\r\n\r\n  const beschikbaar = beschikbaarheid[key]?.[langeDag]?.[shift] ?? false;\r\n  if (beschikbaar) {\r\n    return { backgroundColor: \"#90ee90\" }; // lichtgroen\r\n  }\r\n\r\n  return { backgroundColor: \"#ffffff\" }; // wit\r\n}\r\n"],"mappings":";AAAA,OAAO,KAAKA,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,OAAO,SAASC,uBAAuBA,CAACC,aAAa,EAAE;EACrD,oBACEF,OAAA;IACEG,SAAS,EAAC,0CAA0C;IACpDC,OAAO,EAAEA,CAAA,KAAM;MACb,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;MAC7CF,KAAK,CAACG,IAAI,GAAG,MAAM;MACnBH,KAAK,CAACI,MAAM,GAAG,YAAY;MAC3BJ,KAAK,CAACK,QAAQ,GAAIC,CAAC,IAAK;QACtB,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;QAC9B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAM,GAAIC,GAAG,IAAK;UACvB,MAAMC,IAAI,GAAG,IAAIC,UAAU,CAACF,GAAG,CAACL,MAAM,CAACQ,MAAM,CAAC;UAC9C,MAAMC,QAAQ,GAAGxB,IAAI,CAACyB,IAAI,CAACJ,IAAI,EAAE;YAAEX,IAAI,EAAE;UAAQ,CAAC,CAAC;UACnD,MAAMgB,KAAK,GAAGF,QAAQ,CAACG,MAAM,CAACH,QAAQ,CAACI,UAAU,CAAC,CAAC,CAAC,CAAC;UACrD,MAAMC,IAAI,GAAG7B,IAAI,CAAC8B,KAAK,CAACC,aAAa,CAACL,KAAK,CAAC;UAE5C,MAAMM,OAAO,GAAG,CAAC,CAAC;UAClBH,IAAI,CAACI,OAAO,CAAEC,GAAG,IAAK;YACpB,MAAMC,QAAQ,GAAGC,QAAQ,CAACF,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1C,MAAMG,OAAO,GAAGC,UAAU,CAACJ,GAAG,CAAC,SAAS,CAAC,CAAC;YAC1C,IAAI,CAACK,KAAK,CAACJ,QAAQ,CAAC,IAAI,CAACI,KAAK,CAACF,OAAO,CAAC,EAAE;cACvCL,OAAO,CAACG,QAAQ,CAAC,GAAGE,OAAO;YAC7B;UACF,CAAC,CAAC;UAEFjC,aAAa,CAAC4B,OAAO,CAAC;UACtBQ,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACX,OAAO,CAAC,CAAC;QAC7D,CAAC;QACDf,MAAM,CAAC2B,iBAAiB,CAAC9B,IAAI,CAAC;MAChC,CAAC;MACDP,KAAK,CAACsC,KAAK,CAAC,CAAC;IACf,CAAE;IAAAC,QAAA,EACH;EAED;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb;AAGA,OAAO,SAASC,2BAA2BA,CAACtC,CAAC,EAAEuC,kBAAkB,EAAEC,cAAc,EAAE;EACjF,MAAMvC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC9B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;EAE/BD,MAAM,CAACE,MAAM,GAAIC,GAAG,IAAK;IACvB,MAAMkC,EAAE,GAAGtD,IAAI,CAACyB,IAAI,CAACL,GAAG,CAACL,MAAM,CAACQ,MAAM,EAAE;MAAEb,IAAI,EAAE;IAAQ,CAAC,CAAC;IAC1D,MAAM6C,EAAE,GAAGD,EAAE,CAAC3B,MAAM,CAAC2B,EAAE,CAAC1B,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC,MAAMP,IAAI,GAAGrB,IAAI,CAAC8B,KAAK,CAACC,aAAa,CAACwB,EAAE,EAAE;MAAEC,GAAG,EAAE;IAAK,CAAC,CAAC;IAExD,MAAMC,SAAS,GAAG,CAAC,CAAC;IAEpBpC,IAAI,CAACY,OAAO,CAAEC,GAAG,IAAK;MACpB,MAAMwB,IAAI,GAAG,CAACxB,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,EAAEyB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACrD,IAAI,CAACF,IAAI,EAAE;MAEX,MAAMG,KAAK,GAAG;QACZC,EAAE,EAAE,SAAS;QAAEC,EAAE,EAAE,SAAS;QAAEC,EAAE,EAAE,UAAU;QAAEC,EAAE,EAAE,WAAW;QAC7DC,EAAE,EAAE,SAAS;QAAEC,EAAE,EAAE,UAAU;QAAEC,EAAE,EAAE;MACrC,CAAC;MAED,MAAMC,yBAAyB,GAAG;QAChCC,SAAS,EAAE,CAAApC,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEqC,SAAS,KAAI;MAC/B,CAAC;MAEDC,MAAM,CAACC,IAAI,CAACvC,GAAG,CAAC,CAACD,OAAO,CAAEyC,KAAK,IAAK;QAClC,MAAMC,KAAK,GAAGD,KAAK,CAACC,KAAK,CAAC,mCAAmC,CAAC;QAC9D,IAAIA,KAAK,EAAE;UACT,MAAM,CAACC,CAAC,EAAEC,OAAO,EAAEC,QAAQ,CAAC,GAAGH,KAAK;UACpC,MAAMI,GAAG,GAAGlB,KAAK,CAACgB,OAAO,CAAC;UAC1B,MAAMG,KAAK,GAAG5C,QAAQ,CAAC0C,QAAQ,CAAC;UAChC,MAAMG,MAAM,GAAG,CAAC/C,GAAG,CAACwC,KAAK,CAAC,IAAI,EAAE,EAAEQ,QAAQ,CAAC,CAAC,CAACtB,WAAW,CAAC,CAAC;UAE1D,IAAI,CAACS,yBAAyB,CAACU,GAAG,CAAC,EAAEV,yBAAyB,CAACU,GAAG,CAAC,GAAG,CAAC,CAAC;UACxEV,yBAAyB,CAACU,GAAG,CAAC,CAACC,KAAK,CAAC,GAAGC,MAAM,KAAK,aAAa,IAAIA,MAAM,KAAK,IAAI;QACrF;MACF,CAAC,CAAC;MAEFxB,SAAS,CAACC,IAAI,CAAC,GAAGW,yBAAyB;IAC7C,CAAC,CAAC;IAIFc,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE3B,SAAS,CAAC;IACtDL,kBAAkB,CAACK,SAAS,CAAC;IAE7B,MAAM4B,gBAAgB,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACnE,IAAI,CAACoE,GAAG,CAACC,CAAC;MAAA,IAAAC,OAAA;MAAA,QAAAA,OAAA,GAAID,CAAC,CAACE,IAAI,cAAAD,OAAA,uBAANA,OAAA,CAAQhC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAAA,EAAC,CAACiC,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,CACtGL,GAAG,CAAE/B,IAAI,IAAK;MACb,MAAMxB,GAAG,GAAGb,IAAI,CAAC0E,IAAI,CAACL,CAAC,IAAI,CAACA,CAAC,CAACE,IAAI,IAAI,EAAE,EAAEjC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,KAAKF,IAAI,CAAC;MAExE,MAAMsC,gBAAgB,GAAG9D,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAE+D,aAAa;MAC3C,IAAIA,aAAa,GAAG,OAAOD,gBAAgB,KAAK,QAAQ,GACpD,IAAIE,IAAI,CAAC,CAACF,gBAAgB,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,GACnD,IAAIE,IAAI,CAACF,gBAAgB,CAAC;MAC9B,IAAIzD,KAAK,CAAC0D,aAAa,CAACE,OAAO,CAAC,CAAC,CAAC,EAAE;QAClCF,aAAa,GAAG,IAAIC,IAAI,CAAC,YAAY,CAAC;MACxC;MAEA,MAAME,OAAO,GAAG,IAAIF,IAAI,CAAC,CAAC;MAC1B,MAAM/D,QAAQ,GAAGiE,OAAO,CAACC,WAAW,CAAC,CAAC,GAAGJ,aAAa,CAACI,WAAW,CAAC,CAAC,IAClED,OAAO,GAAG,IAAIF,IAAI,CAACE,OAAO,CAACC,WAAW,CAAC,CAAC,EAAEJ,aAAa,CAACK,QAAQ,CAAC,CAAC,EAAEL,aAAa,CAACM,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CACrG;MAED,OAAO;QACL7C,IAAI,EAAEA,IAAI,CAAC8C,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG/C,IAAI,CAACgD,KAAK,CAAC,CAAC,CAAC;QAClDvE,QAAQ,EAAEA,QAAQ;QAClBwE,SAAS,EAAEvE,QAAQ,CAACF,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAE0E,SAAS,CAAC,IAAI,CAAC;QACxCtC,SAAS,EAAE,CAAApC,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEqC,SAAS,KAAI;MAC/B,CAAC;IACH,CAAC,CAAC;IAEJlB,cAAc,CAACgC,gBAAgB,CAAC;IAChCF,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,gBAAgB,CAAC;IACvD7C,YAAY,CAACC,OAAO,CAAC,aAAa,EAAEC,IAAI,CAACC,SAAS,CAAC0C,gBAAgB,CAAC,CAAC;EACvE,CAAC;EAEDpE,MAAM,CAAC2B,iBAAiB,CAAC9B,IAAI,CAAC;AAChC;AAEA,OAAO,SAAS+F,4BAA4BA,CAACzD,kBAAkB,EAAEC,cAAc,EAAE;EAC/E,oBACEnD,OAAA;IAAOG,SAAS,EAAC,0DAA0D;IAAAyC,QAAA,GAAC,wBAE1E,eAAA5C,OAAA;MACEQ,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,OAAO;MACdN,SAAS,EAAC,QAAQ;MAClByG,QAAQ,EAAGjG,CAAC,IAAKsC,2BAA2B,CAACtC,CAAC,EAAEuC,kBAAkB,EAAEC,cAAc;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEZ;;AAEA;;AAGA,OAAO,SAAS6D,gBAAgBA,CAAClG,CAAC,EAAEmG,YAAY,EAAE3D,cAAc,EAAE4D,eAAe,EAAE;EACjF,MAAMnG,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC9B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;EAE/BD,MAAM,CAACE,MAAM,GAAIC,GAAG,IAAK;IACvB,MAAMkC,EAAE,GAAGtD,IAAI,CAACyB,IAAI,CAACL,GAAG,CAACL,MAAM,CAACQ,MAAM,EAAE;MAAEb,IAAI,EAAE;IAAQ,CAAC,CAAC;IAC1D,MAAM6C,EAAE,GAAGD,EAAE,CAAC3B,MAAM,CAAC2B,EAAE,CAAC1B,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC,MAAMP,IAAI,GAAGrB,IAAI,CAAC8B,KAAK,CAACC,aAAa,CAACwB,EAAE,CAAC,CAACsC,MAAM,CAC7CH,CAAC,IACAA,CAAC,IACD,OAAOA,CAAC,CAACE,IAAI,KAAK,QAAQ,IAC1BF,CAAC,CAACE,IAAI,CAACjC,IAAI,CAAC,CAAC,KAAK,EAAE,IACpB+B,CAAC,CAACwB,UAAU,IACZxB,CAAC,CAACyB,SACN,CAAC;IAEDhC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE/D,IAAI,CAAC;IAC/C2F,YAAY,CAAC3F,IAAI,CAAC;IAClB8D,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAE/D,IAAI,CAAC;IAE7C,MAAM+F,gBAAgB,GAAG/F,IAAI,CAACoE,GAAG,CAAEC,CAAC,IAAK,CAACA,CAAC,CAACE,IAAI,IAAI,EAAE,EAAEjC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAACiC,MAAM,CAACC,OAAO,CAAC;IAC7F,MAAMuB,uBAAuB,GAAG7C,MAAM,CAACC,IAAI,CAACwC,eAAe,CAAC,CAACxB,GAAG,CAAE6B,CAAC,IAAKA,CAAC,CAAC3D,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;IAC/F,MAAM2D,SAAS,GAAGjC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAAC,CAAC,GAAG4B,gBAAgB,EAAE,GAAGC,uBAAuB,CAAC,CAAC,CAAC;IACxF;IACJhE,cAAc,CAAEmE,MAAM,IAAK;MACzB,MAAMC,cAAc,GAAG,IAAIjC,GAAG,CAACgC,MAAM,CAAC/B,GAAG,CAAEiC,CAAC,IAAKA,CAAC,CAAChE,IAAI,CAACC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;MAC9E,MAAM+D,MAAM,GAAGJ,SAAS,CACrB1B,MAAM,CAAEyB,CAAC,IAAK,CAACG,cAAc,CAACG,GAAG,CAACN,CAAC,CAAC,CAAC,CACrC7B,GAAG,CAAE/B,IAAI,KAAM;QACdA,IAAI,EAAEA,IAAI,CAAC8C,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG/C,IAAI,CAACgD,KAAK,CAAC,CAAC,CAAC;QAClDvE,QAAQ,EAAE,EAAE;QACZwE,SAAS,EAAE,CAAC;QACZrC,SAAS,EAAE;MACb,CAAC,CAAC,CAAC;MACL,OAAO,CAAC,GAAGkD,MAAM,EAAE,GAAGG,MAAM,CAAC;IAC/B,CAAC,CAAC;EACA,CAAC;EAED1G,MAAM,CAAC2B,iBAAiB,CAAC9B,IAAI,CAAC;AAChC;AAEA,OAAO,SAAS+G,sBAAsBA,CAAChH,CAAC,EAAEiH,aAAa,EAAEC,yBAAyB,EAAE;EAClF,MAAMjH,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC9B,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;EAE/BD,MAAM,CAACE,MAAM,GAAIC,GAAG,IAAK;IACvB,MAAMkC,EAAE,GAAGtD,IAAI,CAACyB,IAAI,CAACL,GAAG,CAACL,MAAM,CAACQ,MAAM,EAAE;MAAEb,IAAI,EAAE;IAAQ,CAAC,CAAC;IAC1D,MAAM6C,EAAE,GAAGD,EAAE,CAAC3B,MAAM,CAAC2B,EAAE,CAAC1B,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC,MAAMP,IAAI,GAAGrB,IAAI,CAAC8B,KAAK,CAACC,aAAa,CAACwB,EAAE,CAAC;IAEzC,MAAMyE,MAAM,GAAG3G,IAAI,CAChBwE,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACuC,KAAK,CAAC,CACtBxC,GAAG,CAAEC,CAAC,IAAK;MACV,MAAMlC,GAAG,GAAGkC,CAAC,CAACuC,KAAK;MACnB,MAAMC,CAAC,GAAG,OAAO1E,GAAG,KAAK,QAAQ,GAC7BxD,IAAI,CAACmI,GAAG,CAACC,eAAe,CAAC5E,GAAG,CAAC,GAC3B,IAAI0C,IAAI,CAAC,CAAC1C,GAAG,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,CAAC,GACtC,IAAI0C,IAAI,CAACmC,GAAG,CAAC,GACf,IAAInC,IAAI,CAAC1C,GAAG,CAAC;MAEjB,OAAO,IAAI0C,IAAI,CAACgC,CAAC,CAAC7B,WAAW,CAAC,CAAC,EAAE6B,CAAC,CAAC5B,QAAQ,CAAC,CAAC,EAAE4B,CAAC,CAAC3B,OAAO,CAAC,CAAC,CAAC,CAAC+B,kBAAkB,CAAC,OAAO,CAAC;IACzF,CAAC,CAAC;IAEJR,aAAa,CAACE,MAAM,CAAC;IACrBD,yBAAyB,CAAC1G,IAAI,CAAC;EACjC,CAAC;EAEDJ,MAAM,CAAC2B,iBAAiB,CAAC9B,IAAI,CAAC;AAChC;AAEA,OAAO,SAASyH,oBAAoBA,CAAC;EACnCvB,YAAY;EACZ3D,cAAc;EACd4D,eAAe;EACfa,aAAa;EACbC,yBAAyB;EACzB3E;AACF,CAAC,EAAE;EACD,OAAQ1C,IAAI,IAAMG,CAAC,IAAK;IACtB,IAAIH,IAAI,KAAK,WAAW,EAAE;MACxBqG,gBAAgB,CAAClG,CAAC,EAAEmG,YAAY,EAAE3D,cAAc,EAAE4D,eAAe,CAAC;IACpE,CAAC,MAAM,IAAIvG,IAAI,KAAK,YAAY,EAAE;MAChCmH,sBAAsB,CAAChH,CAAC,EAAEiH,aAAa,EAAEC,yBAAyB,CAAC;IACrE,CAAC,MAAM,IAAIrH,IAAI,KAAK,iBAAiB,EAAE;MACrCyC,2BAA2B,CAACtC,CAAC,EAAEuC,kBAAkB,EAAEC,cAAc,CAAC;IACpE;EACF,CAAC;AACH;AAEA,OAAO,SAASmF,oBAAoBA,CAACC,WAAW,GAAG,EAAE,EAAE5E,KAAK,GAAG,EAAE,EAAE6E,MAAM,GAAG,EAAE,EAAEC,QAAQ,GAAG,CAAC,CAAC,EAAE;EAC7F,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjBH,WAAW,CAACxG,OAAO,CAAE4G,UAAU,IAAK;IAClChF,KAAK,CAAC5B,OAAO,CAAE8C,GAAG,IAAK;MACrB2D,MAAM,CAACzG,OAAO,CAAE+C,KAAK,IAAK;QAAA,IAAA8D,qBAAA,EAAAC,sBAAA;QACxB,MAAMC,SAAS,IAAAF,qBAAA,GAAGH,QAAQ,CAACE,UAAU,CAACnF,IAAI,CAAC,cAAAoF,qBAAA,wBAAAC,sBAAA,GAAzBD,qBAAA,CAA4B/D,GAAG,CAAC,cAAAgE,sBAAA,uBAAhCA,sBAAA,CAAmC/D,KAAK,CAAC;QAC3D,IAAIgE,SAAS,EAAE;UACb,MAAM;YAAEC;UAAQ,CAAC,GAAGD,SAAS;UAC7B,IAAI,CAACJ,MAAM,CAAC7D,GAAG,CAAC,EAAE6D,MAAM,CAAC7D,GAAG,CAAC,GAAG,CAAC,CAAC;UAClC,IAAI,CAAC6D,MAAM,CAAC7D,GAAG,CAAC,CAACC,KAAK,CAAC,EAAE4D,MAAM,CAAC7D,GAAG,CAAC,CAACC,KAAK,CAAC,GAAG;YAAEkE,WAAW,EAAE,CAAC;YAAEC,eAAe,EAAE,CAAC;YAAEC,QAAQ,EAAE;UAAE,CAAC;UACjG,IAAIH,OAAO,EAAEL,MAAM,CAAC7D,GAAG,CAAC,CAACC,KAAK,CAAC,CAACiE,OAAO,CAAC,IAAI,CAAC;QAC/C;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOL,MAAM;AACf;AAEA,OAAO,SAASS,uBAAuBA,CAACxF,KAAK,EAAE4E,WAAW,EAAEE,QAAQ,EAAEW,qBAAqB,EAAE;EAC3F,MAAMC,UAAU,GAAG,CAAC,CAAC;EAErB1F,KAAK,CAAC5B,OAAO,CAAE8C,GAAG,IAAK;IACrB,IAAIyE,MAAM,GAAG,CAAC;IACdf,WAAW,CAACxG,OAAO,CAAC,CAAC;MAAEyB,IAAI;MAAEvB;IAAS,CAAC,KAAK;MAAA,IAAAsH,cAAA;MAC1C,MAAMC,aAAa,GAAG,EAAAD,cAAA,GAAAd,QAAQ,CAACjF,IAAI,CAAC,cAAA+F,cAAA,uBAAdA,cAAA,CAAiB1E,GAAG,CAAC,KAAI,CAAC,CAAC;MACjDP,MAAM,CAACmF,MAAM,CAACD,aAAa,CAAC,CAACzH,OAAO,CAAC,CAAC;QAAE2H;MAAM,CAAC,KAAK;QAClD,MAAMC,IAAI,GAAGD,KAAK,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC;QACrC,MAAMvH,OAAO,GAAGiH,qBAAqB,CAACnH,QAAQ,CAAC,IAAI,CAAC;QACpDqH,MAAM,IAAIK,IAAI,GAAGxH,OAAO;MAC1B,CAAC,CAAC;IACJ,CAAC,CAAC;IACFkH,UAAU,CAACxE,GAAG,CAAC,GAAGyE,MAAM;EAC1B,CAAC,CAAC;EAEF,OAAOD,UAAU;AACnB;AAEA,OAAO,SAASO,0BAA0BA,CAACnB,QAAQ,GAAG,CAAC,CAAC,EAAE;EACxD,MAAMoB,UAAU,GAAG,CAAC,CAAC;EAErBvF,MAAM,CAACC,IAAI,CAACkE,QAAQ,CAAC,CAAC1G,OAAO,CAAEyB,IAAI,IAAK;IACtC,IAAIsG,KAAK,GAAG,CAAC;IACb,MAAMnG,KAAK,GAAG8E,QAAQ,CAACjF,IAAI,CAAC,IAAI,CAAC,CAAC;IAClCc,MAAM,CAACmF,MAAM,CAAC9F,KAAK,CAAC,CAAC5B,OAAO,CAAEgI,YAAY,IAAK;MAC7CzF,MAAM,CAACmF,MAAM,CAACM,YAAY,CAAC,CAAChI,OAAO,CAAE+C,KAAK,IAAK;QAC7C,IACEA,KAAK,IACL,OAAOA,KAAK,KAAK,QAAQ,IACzB,SAAS,IAAIA,KAAK,IAClB,OAAOA,KAAK,CAACiE,OAAO,KAAK,QAAQ,IACjC,CAAC,aAAa,EAAE,iBAAiB,EAAE,UAAU,CAAC,CAACiB,QAAQ,CAAClF,KAAK,CAACiE,OAAO,CAACtF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,EAC3F;UACAoG,KAAK,IAAI,CAAC;QACZ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACFD,UAAU,CAACrG,IAAI,CAAC,GAAGsG,KAAK;EAC1B,CAAC,CAAC;EAEF,OAAOD,UAAU;AACnB;AAEA,OAAO,SAASI,uBAAuBA,CAACzG,IAAI,EAAE0G,WAAW,EAAE;EACzDA,WAAW,CAAEC,IAAI,IAAK;IACpB,MAAM1C,MAAM,GAAG;MAAE,GAAG0C;IAAK,CAAC;IAC1B,OAAO1C,MAAM,CAACjE,IAAI,CAAC;IACnBlB,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACgF,MAAM,CAAC,CAAC;IACxD,OAAOA,MAAM;EACf,CAAC,CAAC;AACJ;AAEA,OAAO,SAAS2C,YAAYA,CAACzB,UAAU,EAAE9D,GAAG,EAAEC,KAAK,EAAEiC,eAAe,EAAE0B,QAAQ,EAAE;EAAA,IAAA4B,oBAAA,EAAAC,sBAAA,EAAAC,qBAAA,EAAAC,oBAAA,EAAAC,sBAAA;EAC9E,MAAMC,GAAG,GAAG/B,UAAU,CAAClF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EAC3C,MAAMoF,SAAS,IAAAuB,oBAAA,GAAG5B,QAAQ,CAACE,UAAU,CAAC,cAAA0B,oBAAA,wBAAAC,sBAAA,GAApBD,oBAAA,CAAuBxF,GAAG,CAAC,cAAAyF,sBAAA,uBAA3BA,sBAAA,CAA8BxF,KAAK,CAAC;EACtD,IAAIgE,SAAS,EAAE;IACb,MAAM;MAAEC,OAAO;MAAEW;IAAM,CAAC,GAAGZ,SAAS;IACpC,IAAIC,OAAO,KAAK,aAAa,EAAE,OAAO;MAAE4B,eAAe,EAAEjB,KAAK,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS;MAAEkB,KAAK,EAAE;IAAQ,CAAC;IACnH,IAAI7B,OAAO,KAAK,iBAAiB,EAAE,OAAO;MAAE4B,eAAe,EAAEjB,KAAK,KAAK,MAAM,GAAG,SAAS,GAAG;IAAU,CAAC;IACvG,IAAIX,OAAO,KAAK,UAAU,EAAE,OAAO;MAAE4B,eAAe,EAAEjB,KAAK,KAAK,MAAM,GAAG,SAAS,GAAG;IAAU,CAAC;EAClG;EAEA,MAAMmB,MAAM,GAAG;IACbC,EAAE,EAAE,SAAS;IAAEC,EAAE,EAAE,SAAS;IAAEC,EAAE,EAAE,UAAU;IAC5CC,EAAE,EAAE,WAAW;IAAEC,EAAE,EAAE,SAAS;IAAEC,EAAE,EAAE,UAAU;IAAEC,EAAE,EAAE;EACtD,CAAC;EACD,MAAMC,QAAQ,GAAGR,MAAM,CAAChG,GAAG,CAACnB,WAAW,CAAC,CAAC,CAAC,IAAImB,GAAG;EAEjD,MAAMyG,WAAW,IAAAf,qBAAA,IAAAC,oBAAA,GAAGzD,eAAe,CAAC2D,GAAG,CAAC,cAAAF,oBAAA,wBAAAC,sBAAA,GAApBD,oBAAA,CAAuBa,QAAQ,CAAC,cAAAZ,sBAAA,uBAAhCA,sBAAA,CAAmC3F,KAAK,CAAC,cAAAyF,qBAAA,cAAAA,qBAAA,GAAI,KAAK;EACtE,IAAIe,WAAW,EAAE;IACf,OAAO;MAAEX,eAAe,EAAE;IAAU,CAAC,CAAC,CAAC;EACzC;EAEA,OAAO;IAAEA,eAAe,EAAE;EAAU,CAAC,CAAC,CAAC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}