{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { dagMap } from \"./dagen\";\nconst dagen = [\"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\", \"zo\"];\nconst shifts = [1, 2];\nconst buildPdfBody = (medewerkers, planning, beschikbaarheid, shiftCountPerMedewerker) => {\n  const body = [];\n  medewerkers.forEach(m => {\n    var _m$maxShifts, _m$leeftijd;\n    const naam = m.naam;\n    const count = shiftCountPerMedewerker[naam] || 0;\n    const max = (_m$maxShifts = m.maxShifts) !== null && _m$maxShifts !== void 0 ? _m$maxShifts : \"?\";\n    const leeftijd = (_m$leeftijd = m.leeftijd) !== null && _m$leeftijd !== void 0 ? _m$leeftijd : \"?\";\n    const row = {\n      Naam: `${naam.split(\" \").map((part, i) => i === 0 ? part : part.charAt(0).toUpperCase() + part.slice(1)).join(\" \")} [${leeftijd}] (${count}/${max})`\n    };\n    dagen.forEach(dag => {\n      shifts.forEach(shift => {\n        var _planning$naam, _planning$naam$dag, _beschikbaarheid$naam, _beschikbaarheid$naam2;\n        const key = `${dag} ${shift}`;\n        const entry = (_planning$naam = planning[naam]) === null || _planning$naam === void 0 ? void 0 : (_planning$naam$dag = _planning$naam[dag]) === null || _planning$naam$dag === void 0 ? void 0 : _planning$naam$dag[shift];\n        const naamKey = naam === null || naam === void 0 ? void 0 : naam.toLowerCase();\n        const beschikbaar = beschikbaarheid === null || beschikbaarheid === void 0 ? void 0 : (_beschikbaarheid$naam = beschikbaarheid[naamKey]) === null || _beschikbaarheid$naam === void 0 ? void 0 : (_beschikbaarheid$naam2 = _beschikbaarheid$naam[dagMap[dag]]) === null || _beschikbaarheid$naam2 === void 0 ? void 0 : _beschikbaarheid$naam2[shift];\n        if (entry) {\n          var _labelMap$entry$funct;\n          const labelMap = {\n            schepper: {\n              vast: \"schep\",\n              standby: \"schep(s)\",\n              laat: \"schep(l)\"\n            },\n            ijsbereider: {\n              vast: \"bereider\",\n              standby: \"bereider(s)\",\n              laat: \"bereider(l)\"\n            },\n            ijsvoorbereider: {\n              vast: \"prep\",\n              standby: \"prep(s)\",\n              laat: \"prep(l)\"\n            }\n          };\n          row[key] = ((_labelMap$entry$funct = labelMap[entry.functie]) === null || _labelMap$entry$funct === void 0 ? void 0 : _labelMap$entry$funct[entry.soort]) || `${entry.functie} (${entry.soort})`;\n        } else if (beschikbaar) {\n          row[key] = \"✓\";\n        } else {\n          row[key] = \"\";\n        }\n      });\n    });\n    body.push(row);\n  });\n  return body;\n};\nexport const exportToPDF = ({\n  medewerkers,\n  planning,\n  beschikbaarheid,\n  loonkostenPerUur,\n  shiftCountPerMedewerker\n}) => {\n  var _medewerkers$;\n  const doc = new jsPDF({\n    orientation: \"landscape\",\n    format: \"a4\"\n  });\n  const pageWidth = doc.internal.pageSize.getWidth();\n  const margin = 20;\n  const tableColumn = [\"Naam\", ...dagen.flatMap(dag => shifts.map(shift => `${dag} ${shift}`))];\n  const body = buildPdfBody(medewerkers, planning, beschikbaarheid, shiftCountPerMedewerker);\n\n  // 🧪 DEBUGGING\n  console.log(\"📤 Exporteren naar PDF\");\n  console.log(\"Aantal medewerkers:\", medewerkers.length);\n  console.log(\"Shiftcount per medewerker:\", shiftCountPerMedewerker);\n  console.log(\"Kolommen:\", tableColumn);\n  console.log(\"Voorbeeld rij (body[0]):\", body[0]);\n  console.log(\"Planning voorbeeld:\", planning === null || planning === void 0 ? void 0 : planning[(_medewerkers$ = medewerkers[0]) === null || _medewerkers$ === void 0 ? void 0 : _medewerkers$.naam]);\n  if (!body.length || Object.keys(body[0]).length <= 1) {\n    alert(\"❌ Geen data om te exporteren. Controleer de planning of medewerkers.\");\n    return;\n  }\n  autoTable(doc, {\n    startY: 20,\n    tableWidth: pageWidth - margin,\n    head: [tableColumn],\n    body,\n    styles: {\n      fontSize: 7,\n      cellPadding: 2,\n      halign: \"center\",\n      valign: \"middle\",\n      lineWidth: 0.1,\n      lineColor: [0, 0, 0]\n    },\n    headStyles: {\n      fillColor: [41, 128, 185],\n      textColor: [255, 255, 255],\n      fontStyle: \"bold\"\n    },\n    columnStyles: {\n      Naam: {\n        cellWidth: 60,\n        halign: 'left'\n      }\n    },\n    didDrawCell: function (data) {\n      const getText = text => {\n        if (typeof text === \"string\") return text;\n        if (Array.isArray(text)) return text.join(\" \");\n        return \"\";\n      };\n      const val = getText(data.cell.text).trim().toLowerCase();\n      const kleuren = {\n        \"bereider\": [30, 58, 138],\n        \"bereider(s)\": [96, 165, 250],\n        \"bereider(l)\": [167, 139, 250],\n        \"prep\": [191, 219, 254],\n        \"prep(s)\": [219, 234, 254],\n        \"prep(l)\": [196, 181, 253],\n        \"schep\": [17, 24, 39],\n        \"schep(s)\": [107, 114, 128],\n        \"schep(l)\": [243, 244, 246]\n      };\n      if (kleuren[val]) {\n        data.cell.styles.fillColor = kleuren[val];\n        if ([\"bereider\", \"schep\", \"schep(s)\"].includes(val)) {\n          data.cell.styles.textColor = [255, 255, 255];\n        }\n      } else if (val === \"✓\" && data.column.dataKey !== \"Naam\") {\n        data.cell.styles.fillColor = [144, 238, 144]; // lichtgroen\n        data.cell.styles.textColor = [0, 0, 0];\n      }\n    }\n  });\n  const laatsteY = doc.lastAutoTable.finalY + 20;\n  doc.setFontSize(12);\n  doc.setTextColor(40);\n  doc.setFont(undefined, 'bold');\n  const totaalLoonkosten = medewerkers.reduce((totaal, m) => {\n    var _loonkostenPerUur$m$l;\n    const uurloon = (_loonkostenPerUur$m$l = loonkostenPerUur[m.leeftijd]) !== null && _loonkostenPerUur$m$l !== void 0 ? _loonkostenPerUur$m$l : 15;\n    return totaal + dagen.reduce((dagTotaal, dag) => {\n      return dagTotaal + shifts.reduce((shiftTotaal, shift) => {\n        var _planning$m$naam, _planning$m$naam$dag;\n        const entry = (_planning$m$naam = planning[m.naam]) === null || _planning$m$naam === void 0 ? void 0 : (_planning$m$naam$dag = _planning$m$naam[dag]) === null || _planning$m$naam$dag === void 0 ? void 0 : _planning$m$naam$dag[shift];\n        if (!entry) return shiftTotaal;\n        const uren = entry.soort === 'standby' ? 4 : 6;\n        return shiftTotaal + uren * uurloon;\n      }, 0);\n    }, 0);\n  }, 0);\n  doc.text(`Totale loonkosten deze week: €${totaalLoonkosten.toFixed(2)}`, 14, laatsteY);\n  doc.save(\"planning_export.pdf\");\n};","map":{"version":3,"names":["jsPDF","autoTable","dagMap","dagen","shifts","buildPdfBody","medewerkers","planning","beschikbaarheid","shiftCountPerMedewerker","body","forEach","m","_m$maxShifts","_m$leeftijd","naam","count","max","maxShifts","leeftijd","row","Naam","split","map","part","i","charAt","toUpperCase","slice","join","dag","shift","_planning$naam","_planning$naam$dag","_beschikbaarheid$naam","_beschikbaarheid$naam2","key","entry","naamKey","toLowerCase","beschikbaar","_labelMap$entry$funct","labelMap","schepper","vast","standby","laat","ijsbereider","ijsvoorbereider","functie","soort","push","exportToPDF","loonkostenPerUur","_medewerkers$","doc","orientation","format","pageWidth","internal","pageSize","getWidth","margin","tableColumn","flatMap","console","log","length","Object","keys","alert","startY","tableWidth","head","styles","fontSize","cellPadding","halign","valign","lineWidth","lineColor","headStyles","fillColor","textColor","fontStyle","columnStyles","cellWidth","didDrawCell","data","getText","text","Array","isArray","val","cell","trim","kleuren","includes","column","dataKey","laatsteY","lastAutoTable","finalY","setFontSize","setTextColor","setFont","undefined","totaalLoonkosten","reduce","totaal","_loonkostenPerUur$m$l","uurloon","dagTotaal","shiftTotaal","_planning$m$naam","_planning$m$naam$dag","uren","toFixed","save"],"sources":["C:/Users/van den Akker/planner/planner-app/src/utils/exportToPDF.js"],"sourcesContent":["import jsPDF from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport { dagMap } from \"./dagen\";\r\n\r\nconst dagen = [\"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\", \"zo\"];\r\nconst shifts = [1, 2];\r\n\r\nconst buildPdfBody = (medewerkers, planning, beschikbaarheid, shiftCountPerMedewerker) => {\r\n  const body = [];\r\n\r\n  medewerkers.forEach((m) => {\r\n    const naam = m.naam;\r\n    const count = shiftCountPerMedewerker[naam] || 0;\r\n    const max = m.maxShifts ?? \"?\";\r\n    const leeftijd = m.leeftijd ?? \"?\";\r\n\r\n    const row = {\r\n      Naam: `${naam.split(\" \").map((part, i) =>\r\n        i === 0 ? part : part.charAt(0).toUpperCase() + part.slice(1)\r\n      ).join(\" \")} [${leeftijd}] (${count}/${max})`\r\n    };\r\n\r\n    dagen.forEach((dag) => {\r\n      shifts.forEach((shift) => {\r\n        const key = `${dag} ${shift}`;\r\n        const entry = planning[naam]?.[dag]?.[shift];\r\n        const naamKey = naam?.toLowerCase();\r\n        const beschikbaar = beschikbaarheid?.[naamKey]?.[dagMap[dag]]?.[shift];\r\n\r\n        if (entry) {\r\n          const labelMap = {\r\n            schepper: { vast: \"schep\", standby: \"schep(s)\", laat: \"schep(l)\" },\r\n            ijsbereider: { vast: \"bereider\", standby: \"bereider(s)\", laat: \"bereider(l)\" },\r\n            ijsvoorbereider: { vast: \"prep\", standby: \"prep(s)\", laat: \"prep(l)\" },\r\n          };\r\n          row[key] = labelMap[entry.functie]?.[entry.soort] || `${entry.functie} (${entry.soort})`;\r\n        } else if (beschikbaar) {\r\n          row[key] = \"✓\";\r\n        } else {\r\n          row[key] = \"\";\r\n        }\r\n      });\r\n    });\r\n\r\n    body.push(row);\r\n  });\r\n\r\n  return body;\r\n};\r\n\r\nexport const exportToPDF = ({ medewerkers, planning, beschikbaarheid, loonkostenPerUur, shiftCountPerMedewerker }) => {\r\n  const doc = new jsPDF({ orientation: \"landscape\", format: \"a4\" });\r\n  const pageWidth = doc.internal.pageSize.getWidth();\r\n  const margin = 20;\r\n\r\n  const tableColumn = [\"Naam\", ...dagen.flatMap(dag => shifts.map(shift => `${dag} ${shift}`))];\r\n  const body = buildPdfBody(medewerkers, planning, beschikbaarheid, shiftCountPerMedewerker);\r\n\r\n  // 🧪 DEBUGGING\r\n  console.log(\"📤 Exporteren naar PDF\");\r\n  console.log(\"Aantal medewerkers:\", medewerkers.length);\r\n  console.log(\"Shiftcount per medewerker:\", shiftCountPerMedewerker);\r\n  console.log(\"Kolommen:\", tableColumn);\r\n  console.log(\"Voorbeeld rij (body[0]):\", body[0]);\r\n  console.log(\"Planning voorbeeld:\", planning?.[medewerkers[0]?.naam]);\r\n\r\n  if (!body.length || Object.keys(body[0]).length <= 1) {\r\n    alert(\"❌ Geen data om te exporteren. Controleer de planning of medewerkers.\");\r\n    return;\r\n  }\r\n\r\n  autoTable(doc, {\r\n    startY: 20,\r\n    tableWidth: pageWidth - margin,\r\n    head: [tableColumn],\r\n    body,\r\n    styles: {\r\n      fontSize: 7,\r\n      cellPadding: 2,\r\n      halign: \"center\",\r\n      valign: \"middle\",\r\n      lineWidth: 0.1,\r\n      lineColor: [0, 0, 0],\r\n    },\r\n    headStyles: {\r\n      fillColor: [41, 128, 185],\r\n      textColor: [255, 255, 255],\r\n      fontStyle: \"bold\"\r\n    },\r\n    columnStyles: {\r\n      Naam: { cellWidth: 60, halign: 'left' }\r\n    },\r\n    didDrawCell: function (data) {\r\n      const getText = (text) => {\r\n        if (typeof text === \"string\") return text;\r\n        if (Array.isArray(text)) return text.join(\" \");\r\n        return \"\";\r\n      };\r\n\r\n      const val = getText(data.cell.text).trim().toLowerCase();\r\n\r\n      const kleuren = {\r\n        \"bereider\": [30, 58, 138],\r\n        \"bereider(s)\": [96, 165, 250],\r\n        \"bereider(l)\": [167, 139, 250],\r\n        \"prep\": [191, 219, 254],\r\n        \"prep(s)\": [219, 234, 254],\r\n        \"prep(l)\": [196, 181, 253],\r\n        \"schep\": [17, 24, 39],\r\n        \"schep(s)\": [107, 114, 128],\r\n        \"schep(l)\": [243, 244, 246],\r\n      };\r\n\r\n      if (kleuren[val]) {\r\n        data.cell.styles.fillColor = kleuren[val];\r\n        if ([\"bereider\", \"schep\", \"schep(s)\"].includes(val)) {\r\n          data.cell.styles.textColor = [255, 255, 255];\r\n        }\r\n      } else if (val === \"✓\" && data.column.dataKey !== \"Naam\") {\r\n        data.cell.styles.fillColor = [144, 238, 144]; // lichtgroen\r\n        data.cell.styles.textColor = [0, 0, 0];\r\n      }\r\n    }\r\n  });\r\n\r\n  const laatsteY = doc.lastAutoTable.finalY + 20;\r\n  doc.setFontSize(12);\r\n  doc.setTextColor(40);\r\n  doc.setFont(undefined, 'bold');\r\n\r\n  const totaalLoonkosten = medewerkers.reduce((totaal, m) => {\r\n    const uurloon = loonkostenPerUur[m.leeftijd] ?? 15;\r\n    return totaal + dagen.reduce((dagTotaal, dag) => {\r\n      return dagTotaal + shifts.reduce((shiftTotaal, shift) => {\r\n        const entry = planning[m.naam]?.[dag]?.[shift];\r\n        if (!entry) return shiftTotaal;\r\n        const uren = entry.soort === 'standby' ? 4 : 6;\r\n        return shiftTotaal + uren * uurloon;\r\n      }, 0);\r\n    }, 0);\r\n  }, 0);\r\n\r\n  doc.text(`Totale loonkosten deze week: €${totaalLoonkosten.toFixed(2)}`, 14, laatsteY);\r\n  doc.save(\"planning_export.pdf\");\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}