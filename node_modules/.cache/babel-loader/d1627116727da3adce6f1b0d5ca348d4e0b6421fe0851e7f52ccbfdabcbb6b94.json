{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nexport const exportToPDF = () => {\n  const doc = new jsPDF({\n    orientation: \"landscape\",\n    format: \"a4\"\n  });\n  const pageWidth = doc.internal.pageSize.getWidth();\n  const columns = [\"Naam\", \"ma 1\", \"ma 2\", \"di 1\"];\n  const body = [{\n    Naam: \"Testpersoon\",\n    \"ma 1\": \"schep\",\n    \"ma 2\": \"bereider\",\n    \"di 1\": \"‚úì\"\n  }];\n  autoTable(doc, {\n    startY: 20,\n    tableWidth: pageWidth - 20,\n    head: [columns],\n    body: body,\n    styles: {\n      fontSize: 10,\n      cellPadding: 4,\n      halign: \"center\",\n      valign: \"middle\",\n      lineWidth: 0.1,\n      lineColor: [0, 0, 0]\n    },\n    headStyles: {\n      fillColor: [41, 128, 185],\n      textColor: [255, 255, 255],\n      fontStyle: \"bold\"\n    },\n    didDrawCell: function (data) {\n      const val = (Array.isArray(data.cell.text) ? data.cell.text.join(\" \") : data.cell.text || \"\").trim().toLowerCase();\n      const kleuren = {\n        \"bereider\": [30, 58, 138],\n        \"schep\": [17, 24, 39],\n        \"‚úì\": [144, 238, 144]\n      };\n      if (kleuren[val]) {\n        data.cell.styles.fillColor = kleuren[val];\n        data.cell.styles.textColor = [255, 255, 255];\n      }\n\n      // ‚ùó Debugkleur als backup\n      if (data.column.dataKey === \"ma 1\") {\n        console.log(\"üëâ Celinhoud:\", val);\n        data.cell.styles.fillColor = [255, 200, 200]; // lichtroze testkleur\n        data.cell.styles.textColor = [0, 0, 0];\n      }\n    }\n  });\n  doc.save(\"test-export.pdf\");\n};","map":{"version":3,"names":["jsPDF","autoTable","exportToPDF","doc","orientation","format","pageWidth","internal","pageSize","getWidth","columns","body","Naam","startY","tableWidth","head","styles","fontSize","cellPadding","halign","valign","lineWidth","lineColor","headStyles","fillColor","textColor","fontStyle","didDrawCell","data","val","Array","isArray","cell","text","join","trim","toLowerCase","kleuren","column","dataKey","console","log","save"],"sources":["C:/Users/van den Akker/planner/planner-app/src/utils/exportToPDF.js"],"sourcesContent":["import jsPDF from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\n\r\nexport const exportToPDF = () => {\r\n  const doc = new jsPDF({ orientation: \"landscape\", format: \"a4\" });\r\n  const pageWidth = doc.internal.pageSize.getWidth();\r\n\r\n  const columns = [\"Naam\", \"ma 1\", \"ma 2\", \"di 1\"];\r\n  const body = [\r\n    {\r\n      Naam: \"Testpersoon\",\r\n      \"ma 1\": \"schep\",\r\n      \"ma 2\": \"bereider\",\r\n      \"di 1\": \"‚úì\",\r\n    },\r\n  ];\r\n\r\n  autoTable(doc, {\r\n    startY: 20,\r\n    tableWidth: pageWidth - 20,\r\n    head: [columns],\r\n    body: body,\r\n    styles: {\r\n      fontSize: 10,\r\n      cellPadding: 4,\r\n      halign: \"center\",\r\n      valign: \"middle\",\r\n      lineWidth: 0.1,\r\n      lineColor: [0, 0, 0],\r\n    },\r\n    headStyles: {\r\n      fillColor: [41, 128, 185],\r\n      textColor: [255, 255, 255],\r\n      fontStyle: \"bold\",\r\n    },\r\n    didDrawCell: function (data) {\r\n      const val = (Array.isArray(data.cell.text) ? data.cell.text.join(\" \") : data.cell.text || \"\").trim().toLowerCase();\r\n\r\n      const kleuren = {\r\n        \"bereider\": [30, 58, 138],\r\n        \"schep\": [17, 24, 39],\r\n        \"‚úì\": [144, 238, 144],\r\n      };\r\n\r\n      if (kleuren[val]) {\r\n        data.cell.styles.fillColor = kleuren[val];\r\n        data.cell.styles.textColor = [255, 255, 255];\r\n      }\r\n\r\n      // ‚ùó Debugkleur als backup\r\n      if (data.column.dataKey === \"ma 1\") {\r\n        console.log(\"üëâ Celinhoud:\", val);\r\n        data.cell.styles.fillColor = [255, 200, 200]; // lichtroze testkleur\r\n        data.cell.styles.textColor = [0, 0, 0];\r\n      }\r\n    },\r\n  });\r\n\r\n  doc.save(\"test-export.pdf\");\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,iBAAiB;AAEvC,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAC/B,MAAMC,GAAG,GAAG,IAAIH,KAAK,CAAC;IAAEI,WAAW,EAAE,WAAW;IAAEC,MAAM,EAAE;EAAK,CAAC,CAAC;EACjE,MAAMC,SAAS,GAAGH,GAAG,CAACI,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,CAAC;EAElD,MAAMC,OAAO,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC;EAChD,MAAMC,IAAI,GAAG,CACX;IACEC,IAAI,EAAE,aAAa;IACnB,MAAM,EAAE,OAAO;IACf,MAAM,EAAE,UAAU;IAClB,MAAM,EAAE;EACV,CAAC,CACF;EAEDX,SAAS,CAACE,GAAG,EAAE;IACbU,MAAM,EAAE,EAAE;IACVC,UAAU,EAAER,SAAS,GAAG,EAAE;IAC1BS,IAAI,EAAE,CAACL,OAAO,CAAC;IACfC,IAAI,EAAEA,IAAI;IACVK,MAAM,EAAE;MACNC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,CAAC;MACdC,MAAM,EAAE,QAAQ;MAChBC,MAAM,EAAE,QAAQ;MAChBC,SAAS,EAAE,GAAG;MACdC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IACrB,CAAC;IACDC,UAAU,EAAE;MACVC,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MACzBC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAC1BC,SAAS,EAAE;IACb,CAAC;IACDC,WAAW,EAAE,SAAAA,CAAUC,IAAI,EAAE;MAC3B,MAAMC,GAAG,GAAG,CAACC,KAAK,CAACC,OAAO,CAACH,IAAI,CAACI,IAAI,CAACC,IAAI,CAAC,GAAGL,IAAI,CAACI,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC,GAAG,CAAC,GAAGN,IAAI,CAACI,IAAI,CAACC,IAAI,IAAI,EAAE,EAAEE,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAElH,MAAMC,OAAO,GAAG;QACd,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;QACzB,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACrB,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;MACrB,CAAC;MAED,IAAIA,OAAO,CAACR,GAAG,CAAC,EAAE;QAChBD,IAAI,CAACI,IAAI,CAAChB,MAAM,CAACQ,SAAS,GAAGa,OAAO,CAACR,GAAG,CAAC;QACzCD,IAAI,CAACI,IAAI,CAAChB,MAAM,CAACS,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;MAC9C;;MAEA;MACA,IAAIG,IAAI,CAACU,MAAM,CAACC,OAAO,KAAK,MAAM,EAAE;QAClCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEZ,GAAG,CAAC;QACjCD,IAAI,CAACI,IAAI,CAAChB,MAAM,CAACQ,SAAS,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;QAC9CI,IAAI,CAACI,IAAI,CAAChB,MAAM,CAACS,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACxC;IACF;EACF,CAAC,CAAC;EAEFtB,GAAG,CAACuC,IAAI,CAAC,iBAAiB,CAAC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}