{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\van den Akker\\\\planner\\\\planner-app\\\\src\\\\utils\\\\plannerHelpers.js\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function handleBeschikbaarheidUpload(e, setBeschikbaarheid, setMedewerkers) {\n  const file = e.target.files[0];\n  const reader = new FileReader();\n  reader.onload = evt => {\n    const wb = XLSX.read(evt.target.result, {\n      type: \"array\"\n    });\n    const ws = wb.Sheets[wb.SheetNames[0]];\n    const data = XLSX.utils.sheet_to_json(ws, {\n      raw: true\n    });\n    const structuur = {};\n    data.forEach(row => {\n      const naam = (row[\"Naam\"] || \"\").trim().toLowerCase();\n      if (!naam) return;\n      structuur[naam] = {};\n      Object.keys(row).forEach(kolom => {\n        const match = kolom.match(/^(Ma|Di|Wo|Do|Vr|Za|Zo)\\s?([12])$/);\n        if (match) {\n          const [_, dagCode, shiftStr] = match;\n          const dagen = {\n            Ma: \"maandag\",\n            Di: \"dinsdag\",\n            Wo: \"woensdag\",\n            Do: \"donderdag\",\n            Vr: \"vrijdag\",\n            Za: \"zaterdag\",\n            Zo: \"zondag\"\n          };\n          const dag = dagen[dagCode];\n          const shift = parseInt(shiftStr);\n          const waarde = (row[kolom] || \"\").toString().toLowerCase();\n          if (!structuur[naam][dag]) structuur[naam][dag] = {};\n          structuur[naam][dag][shift] = waarde === \"beschikbaar\" || waarde === \"ja\";\n        }\n      });\n    });\n    console.log(\"âœ… Beschikbaarheid ingelezen:\", structuur);\n    setBeschikbaarheid(structuur);\n    const medewerkersUniek = Array.from(new Set(data.map(r => {\n      var _r$Naam;\n      return (_r$Naam = r.Naam) === null || _r$Naam === void 0 ? void 0 : _r$Naam.trim().toLowerCase();\n    }).filter(Boolean))).map(naam => {\n      const row = data.find(r => (r.Naam || \"\").trim().toLowerCase() === naam);\n      const geboorteDatumRuw = row === null || row === void 0 ? void 0 : row.geboortedatum;\n      let geboortedatum = typeof geboorteDatumRuw === \"number\" ? new Date((geboorteDatumRuw - 25569) * 86400 * 1000) : new Date(geboorteDatumRuw);\n      if (isNaN(geboortedatum.getTime())) {\n        geboortedatum = new Date(\"2000-01-01\");\n      }\n      const vandaag = new Date();\n      const leeftijd = vandaag.getFullYear() - geboortedatum.getFullYear() - (vandaag < new Date(vandaag.getFullYear(), geboortedatum.getMonth(), geboortedatum.getDate()) ? 1 : 0);\n      return {\n        naam: naam.charAt(0).toUpperCase() + naam.slice(1),\n        leeftijd: leeftijd,\n        maxShifts: parseInt(row === null || row === void 0 ? void 0 : row.MaxShifts) || 5,\n        opmerking: (row === null || row === void 0 ? void 0 : row.Opmerking) || \"\"\n      };\n    });\n    setMedewerkers(medewerkersUniek);\n    console.log(\"âœ… Medewerkers geladen:\", medewerkersUniek);\n    localStorage.setItem(\"medewerkers\", JSON.stringify(medewerkersUniek));\n  };\n  reader.readAsArrayBuffer(file);\n}\nexport function importeerBeschikbaarheidKnop(setBeschikbaarheid, setMedewerkers) {\n  return /*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"bg-green-600 text-white px-4 py-2 rounded cursor-pointer\",\n    children: [\"Import beschikbaarheid\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx\",\n      className: \"hidden\",\n      onChange: e => handleBeschikbaarheidUpload(e, setBeschikbaarheid, setMedewerkers)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n// ... (de rest van het bestand blijft ongewijzigd)\n\nexport function handleFileUpload(e, setVakanties, setMedewerkers, beschikbaarheid) {\n  const file = e.target.files[0];\n  const reader = new FileReader();\n  reader.onload = evt => {\n    const wb = XLSX.read(evt.target.result, {\n      type: \"array\"\n    });\n    const ws = wb.Sheets[wb.SheetNames[0]];\n    const data = XLSX.utils.sheet_to_json(ws).filter(r => r && typeof r.Naam === \"string\" && r.Naam.trim() !== \"\" && r.Startdatum && r.Einddatum);\n    console.log(\"ðŸ“¥ Gelezen data uit Excel:\", data);\n    setVakanties(data);\n    console.log(\"ðŸ“… Vakanties opgeslagen:\", data);\n    const namenUitVakantie = data.map(r => (r.Naam || \"\").trim().toLowerCase()).filter(Boolean);\n    const namenUitBeschikbaarheid = Object.keys(beschikbaarheid).map(n => n.trim().toLowerCase());\n    const alleNamen = Array.from(new Set([...namenUitVakantie, ...namenUitBeschikbaarheid]));\n    // Voeg alleen medewerkers toe die nog niet in de lijst staan\n    setMedewerkers(vorige => {\n      const bestaandeNamen = new Set(vorige.map(m => m.naam.trim().toLowerCase()));\n      const nieuwe = alleNamen.filter(n => !bestaandeNamen.has(n)).map(naam => ({\n        naam: naam.charAt(0).toUpperCase() + naam.slice(1),\n        leeftijd: 18,\n        maxShifts: 5,\n        opmerking: \"\"\n      }));\n      return [...vorige, ...nieuwe];\n    });\n  };\n  reader.readAsArrayBuffer(file);\n}\nexport function handleFeestdagenUpload(e, setFeestdagen, setFeestdagOorspronkelijk) {\n  const file = e.target.files[0];\n  const reader = new FileReader();\n  reader.onload = evt => {\n    const wb = XLSX.read(evt.target.result, {\n      type: \"array\"\n    });\n    const ws = wb.Sheets[wb.SheetNames[0]];\n    const data = XLSX.utils.sheet_to_json(ws);\n    const datums = data.filter(r => r.Datum).map(r => {\n      const raw = r.Datum;\n      const d = typeof raw === \"number\" ? XLSX.SSF.parse_date_code(raw) ? new Date((raw - 25569) * 86400 * 1000) : new Date(NaN) : new Date(raw);\n      return new Date(d.getFullYear(), d.getMonth(), d.getDate()).toLocaleDateString(\"sv-SE\");\n    });\n    setFeestdagen(datums);\n    setFeestdagOorspronkelijk(data);\n  };\n  reader.readAsArrayBuffer(file);\n}\nexport function getFileChangeHandler({\n  setVakanties,\n  setMedewerkers,\n  beschikbaarheid,\n  setFeestdagen,\n  setFeestdagOorspronkelijk,\n  setBeschikbaarheid\n}) {\n  return type => e => {\n    if (type === \"vakanties\") {\n      handleFileUpload(e, setVakanties, setMedewerkers, beschikbaarheid);\n    } else if (type === \"feestdagen\") {\n      handleFeestdagenUpload(e, setFeestdagen, setFeestdagOorspronkelijk);\n    } else if (type === \"beschikbaarheid\") {\n      handleBeschikbaarheidUpload(e, setBeschikbaarheid, setMedewerkers);\n    }\n  };\n}\nexport function calculateShiftTotals(medewerkers = [], dagen = [], shifts = [], planning = {}) {\n  const totals = {};\n  medewerkers.forEach(medewerker => {\n    dagen.forEach(dag => {\n      shifts.forEach(shift => {\n        var _planning$medewerker$, _planning$medewerker$2;\n        const ingepland = (_planning$medewerker$ = planning[medewerker.naam]) === null || _planning$medewerker$ === void 0 ? void 0 : (_planning$medewerker$2 = _planning$medewerker$[dag]) === null || _planning$medewerker$2 === void 0 ? void 0 : _planning$medewerker$2[shift];\n        if (ingepland) {\n          const {\n            functie\n          } = ingepland;\n          if (!totals[dag]) totals[dag] = {};\n          if (!totals[dag][shift]) totals[dag][shift] = {\n            ijsbereider: 0,\n            ijsvoorbereider: 0,\n            schepper: 0\n          };\n          if (functie) totals[dag][shift][functie] += 1;\n        }\n      });\n    });\n  });\n  return totals;\n}\nexport function berekenLoonkostenPerDag(dagen, medewerkers, planning, salarissenPerLeeftijd) {\n  const loonkosten = {};\n  dagen.forEach(dag => {\n    let totaal = 0;\n    medewerkers.forEach(({\n      naam,\n      leeftijd\n    }) => {\n      var _planning$naam;\n      const shiftsVoorDag = ((_planning$naam = planning[naam]) === null || _planning$naam === void 0 ? void 0 : _planning$naam[dag]) || {};\n      Object.values(shiftsVoorDag).forEach(({\n        soort\n      }) => {\n        const uren = soort === \"vast\" ? 6 : 4;\n        const uurloon = salarissenPerLeeftijd[leeftijd] || 0;\n        totaal += uren * uurloon;\n      });\n    });\n    loonkosten[dag] = totaal;\n  });\n  return loonkosten;\n}\nexport function getShiftCountPerMedewerker(planning = {}) {\n  const shiftCount = {};\n  Object.keys(planning).forEach(naam => {\n    let count = 0;\n    const dagen = planning[naam] || {};\n    Object.values(dagen).forEach(shiftsPerDag => {\n      Object.values(shiftsPerDag).forEach(shift => {\n        if (shift && typeof shift === \"object\" && \"functie\" in shift && typeof shift.functie === \"string\" && [\"ijsbereider\", \"ijsvoorbereider\", \"schepper\"].includes(shift.functie.trim().toLowerCase())) {\n          count += 1;\n        }\n      });\n    });\n    shiftCount[naam] = count;\n  });\n  return shiftCount;\n}\nexport function resetMedewerkerPlanning(naam, setPlanning) {\n  setPlanning(prev => {\n    const nieuwe = {\n      ...prev\n    };\n    delete nieuwe[naam];\n    localStorage.setItem(\"planning\", JSON.stringify(nieuwe));\n    return nieuwe;\n  });\n}\nexport function getCellColor(medewerker, dag, shift, beschikbaarheid, planning) {\n  var _planning$medewerker, _planning$medewerker$3, _beschikbaarheid$key$, _beschikbaarheid$key, _beschikbaarheid$key$2;\n  const key = medewerker.trim().toLowerCase();\n  const ingepland = (_planning$medewerker = planning[medewerker]) === null || _planning$medewerker === void 0 ? void 0 : (_planning$medewerker$3 = _planning$medewerker[dag]) === null || _planning$medewerker$3 === void 0 ? void 0 : _planning$medewerker$3[shift];\n  if (ingepland) {\n    const {\n      functie,\n      soort\n    } = ingepland;\n    if (functie === \"ijsbereider\") return {\n      backgroundColor: soort === \"vast\" ? \"#1e3a8a\" : \"#3b82f6\",\n      color: \"white\"\n    };\n    if (functie === \"ijsvoorbereider\") return {\n      backgroundColor: soort === \"vast\" ? \"#bfdbfe\" : \"#93c5fd\"\n    };\n    if (functie === \"schepper\") return {\n      backgroundColor: soort === \"vast\" ? \"#f59e0b\" : \"#fcd34d\"\n    };\n  }\n  const dagMap = {\n    ma: \"maandag\",\n    di: \"dinsdag\",\n    wo: \"woensdag\",\n    do: \"donderdag\",\n    vr: \"vrijdag\",\n    za: \"zaterdag\",\n    zo: \"zondag\"\n  };\n  const langeDag = dagMap[dag.toLowerCase()] || dag;\n  const beschikbaar = (_beschikbaarheid$key$ = (_beschikbaarheid$key = beschikbaarheid[key]) === null || _beschikbaarheid$key === void 0 ? void 0 : (_beschikbaarheid$key$2 = _beschikbaarheid$key[langeDag]) === null || _beschikbaarheid$key$2 === void 0 ? void 0 : _beschikbaarheid$key$2[shift]) !== null && _beschikbaarheid$key$ !== void 0 ? _beschikbaarheid$key$ : false;\n  if (beschikbaar) {\n    return {\n      backgroundColor: \"#90ee90\"\n    }; // lichtgroen\n  }\n  return {\n    backgroundColor: \"#ffffff\"\n  }; // wit\n}","map":{"version":3,"names":["XLSX","jsxDEV","_jsxDEV","handleBeschikbaarheidUpload","e","setBeschikbaarheid","setMedewerkers","file","target","files","reader","FileReader","onload","evt","wb","read","result","type","ws","Sheets","SheetNames","data","utils","sheet_to_json","raw","structuur","forEach","row","naam","trim","toLowerCase","Object","keys","kolom","match","_","dagCode","shiftStr","dagen","Ma","Di","Wo","Do","Vr","Za","Zo","dag","shift","parseInt","waarde","toString","console","log","medewerkersUniek","Array","from","Set","map","r","_r$Naam","Naam","filter","Boolean","find","geboorteDatumRuw","geboortedatum","Date","isNaN","getTime","vandaag","leeftijd","getFullYear","getMonth","getDate","charAt","toUpperCase","slice","maxShifts","MaxShifts","opmerking","Opmerking","localStorage","setItem","JSON","stringify","readAsArrayBuffer","importeerBeschikbaarheidKnop","className","children","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","handleFileUpload","setVakanties","beschikbaarheid","Startdatum","Einddatum","namenUitVakantie","namenUitBeschikbaarheid","n","alleNamen","vorige","bestaandeNamen","m","nieuwe","has","handleFeestdagenUpload","setFeestdagen","setFeestdagOorspronkelijk","datums","Datum","d","SSF","parse_date_code","NaN","toLocaleDateString","getFileChangeHandler","calculateShiftTotals","medewerkers","shifts","planning","totals","medewerker","_planning$medewerker$","_planning$medewerker$2","ingepland","functie","ijsbereider","ijsvoorbereider","schepper","berekenLoonkostenPerDag","salarissenPerLeeftijd","loonkosten","totaal","_planning$naam","shiftsVoorDag","values","soort","uren","uurloon","getShiftCountPerMedewerker","shiftCount","count","shiftsPerDag","includes","resetMedewerkerPlanning","setPlanning","prev","getCellColor","_planning$medewerker","_planning$medewerker$3","_beschikbaarheid$key$","_beschikbaarheid$key","_beschikbaarheid$key$2","key","backgroundColor","color","dagMap","ma","di","wo","do","vr","za","zo","langeDag","beschikbaar"],"sources":["C:/Users/van den Akker/planner/planner-app/src/utils/plannerHelpers.js"],"sourcesContent":["import * as XLSX from \"xlsx\";\r\n\r\nexport function handleBeschikbaarheidUpload(e, setBeschikbaarheid, setMedewerkers) {\r\n  const file = e.target.files[0];\r\n  const reader = new FileReader();\r\n\r\n  reader.onload = (evt) => {\r\n    const wb = XLSX.read(evt.target.result, { type: \"array\" });\r\n    const ws = wb.Sheets[wb.SheetNames[0]];\r\n    const data = XLSX.utils.sheet_to_json(ws, { raw: true });\r\n\r\n    const structuur = {};\r\n\r\n    data.forEach((row) => {\r\n      const naam = (row[\"Naam\"] || \"\").trim().toLowerCase();\r\n      if (!naam) return;\r\n      structuur[naam] = {};\r\n\r\n      Object.keys(row).forEach((kolom) => {\r\n        const match = kolom.match(/^(Ma|Di|Wo|Do|Vr|Za|Zo)\\s?([12])$/);\r\n        if (match) {\r\n          const [_, dagCode, shiftStr] = match;\r\n          const dagen = {\r\n            Ma: \"maandag\", Di: \"dinsdag\", Wo: \"woensdag\", Do: \"donderdag\",\r\n            Vr: \"vrijdag\", Za: \"zaterdag\", Zo: \"zondag\"\r\n          };\r\n          const dag = dagen[dagCode];\r\n          const shift = parseInt(shiftStr);\r\n          const waarde = (row[kolom] || \"\").toString().toLowerCase();\r\n\r\n          if (!structuur[naam][dag]) structuur[naam][dag] = {};\r\n          structuur[naam][dag][shift] = waarde === \"beschikbaar\" || waarde === \"ja\";\r\n        }\r\n      });\r\n    });\r\n\r\n    console.log(\"âœ… Beschikbaarheid ingelezen:\", structuur);\r\n    setBeschikbaarheid(structuur);\r\n\r\n    const medewerkersUniek = Array.from(new Set(data.map(r => r.Naam?.trim().toLowerCase()).filter(Boolean)))\r\n      .map((naam) => {\r\n        const row = data.find(r => (r.Naam || \"\").trim().toLowerCase() === naam);\r\n\r\n        const geboorteDatumRuw = row?.geboortedatum;\r\n        let geboortedatum = typeof geboorteDatumRuw === \"number\"\r\n          ? new Date((geboorteDatumRuw - 25569) * 86400 * 1000)\r\n          : new Date(geboorteDatumRuw);\r\n        if (isNaN(geboortedatum.getTime())) {\r\n          geboortedatum = new Date(\"2000-01-01\");\r\n        }\r\n\r\n        const vandaag = new Date();\r\n        const leeftijd = vandaag.getFullYear() - geboortedatum.getFullYear() - (\r\n          vandaag < new Date(vandaag.getFullYear(), geboortedatum.getMonth(), geboortedatum.getDate()) ? 1 : 0\r\n        );\r\n\r\n        return {\r\n          naam: naam.charAt(0).toUpperCase() + naam.slice(1),\r\n          leeftijd: leeftijd,\r\n          maxShifts: parseInt(row?.MaxShifts) || 5,\r\n          opmerking: row?.Opmerking || \"\"\r\n        };\r\n      });\r\n\r\n    setMedewerkers(medewerkersUniek);\r\n    console.log(\"âœ… Medewerkers geladen:\", medewerkersUniek);\r\n    localStorage.setItem(\"medewerkers\", JSON.stringify(medewerkersUniek));\r\n  };\r\n\r\n  reader.readAsArrayBuffer(file);\r\n}\r\n\r\nexport function importeerBeschikbaarheidKnop(setBeschikbaarheid, setMedewerkers) {\r\n  return (\r\n    <label className=\"bg-green-600 text-white px-4 py-2 rounded cursor-pointer\">\r\n      Import beschikbaarheid\r\n      <input\r\n        type=\"file\"\r\n        accept=\".xlsx\"\r\n        className=\"hidden\"\r\n        onChange={(e) => handleBeschikbaarheidUpload(e, setBeschikbaarheid, setMedewerkers)}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\n// ... (de rest van het bestand blijft ongewijzigd)\r\n\r\n\r\nexport function handleFileUpload(e, setVakanties, setMedewerkers, beschikbaarheid) {\r\n  const file = e.target.files[0];\r\n  const reader = new FileReader();\r\n\r\n  reader.onload = (evt) => {\r\n    const wb = XLSX.read(evt.target.result, { type: \"array\" });\r\n    const ws = wb.Sheets[wb.SheetNames[0]];\r\n    const data = XLSX.utils.sheet_to_json(ws).filter(\r\n      (r) =>\r\n        r &&\r\n        typeof r.Naam === \"string\" &&\r\n        r.Naam.trim() !== \"\" &&\r\n        r.Startdatum &&\r\n        r.Einddatum\r\n    );\r\n    \r\n    console.log(\"ðŸ“¥ Gelezen data uit Excel:\", data);\r\n    setVakanties(data);\r\n    console.log(\"ðŸ“… Vakanties opgeslagen:\", data);\r\n\r\n    const namenUitVakantie = data.map((r) => (r.Naam || \"\").trim().toLowerCase()).filter(Boolean);\r\n    const namenUitBeschikbaarheid = Object.keys(beschikbaarheid).map((n) => n.trim().toLowerCase());\r\n    const alleNamen = Array.from(new Set([...namenUitVakantie, ...namenUitBeschikbaarheid]));\r\n    // Voeg alleen medewerkers toe die nog niet in de lijst staan\r\nsetMedewerkers((vorige) => {\r\n  const bestaandeNamen = new Set(vorige.map((m) => m.naam.trim().toLowerCase()));\r\n  const nieuwe = alleNamen\r\n    .filter((n) => !bestaandeNamen.has(n))\r\n    .map((naam) => ({\r\n      naam: naam.charAt(0).toUpperCase() + naam.slice(1),\r\n      leeftijd: 18,\r\n      maxShifts: 5,\r\n      opmerking: \"\"\r\n    }));\r\n  return [...vorige, ...nieuwe];\r\n});\r\n  };\r\n\r\n  reader.readAsArrayBuffer(file);\r\n}\r\n\r\nexport function handleFeestdagenUpload(e, setFeestdagen, setFeestdagOorspronkelijk) {\r\n  const file = e.target.files[0];\r\n  const reader = new FileReader();\r\n\r\n  reader.onload = (evt) => {\r\n    const wb = XLSX.read(evt.target.result, { type: \"array\" });\r\n    const ws = wb.Sheets[wb.SheetNames[0]];\r\n    const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n    const datums = data\r\n      .filter((r) => r.Datum)\r\n      .map((r) => {\r\n        const raw = r.Datum;\r\n        const d = typeof raw === \"number\"\r\n          ? XLSX.SSF.parse_date_code(raw)\r\n            ? new Date((raw - 25569) * 86400 * 1000)\r\n            : new Date(NaN)\r\n          : new Date(raw);\r\n\r\n        return new Date(d.getFullYear(), d.getMonth(), d.getDate()).toLocaleDateString(\"sv-SE\");\r\n      });\r\n\r\n    setFeestdagen(datums);\r\n    setFeestdagOorspronkelijk(data);\r\n  };\r\n\r\n  reader.readAsArrayBuffer(file);\r\n}\r\n\r\nexport function getFileChangeHandler({\r\n  setVakanties,\r\n  setMedewerkers,\r\n  beschikbaarheid,\r\n  setFeestdagen,\r\n  setFeestdagOorspronkelijk,\r\n  setBeschikbaarheid\r\n}) {\r\n  return (type) => (e) => {\r\n    if (type === \"vakanties\") {\r\n      handleFileUpload(e, setVakanties, setMedewerkers, beschikbaarheid);\r\n    } else if (type === \"feestdagen\") {\r\n      handleFeestdagenUpload(e, setFeestdagen, setFeestdagOorspronkelijk);\r\n    } else if (type === \"beschikbaarheid\") {\r\n      handleBeschikbaarheidUpload(e, setBeschikbaarheid, setMedewerkers);\r\n    }\r\n  };\r\n}\r\n\r\nexport function calculateShiftTotals(medewerkers = [], dagen = [], shifts = [], planning = {}) {\r\n  const totals = {};\r\n\r\n  medewerkers.forEach((medewerker) => {\r\n    dagen.forEach((dag) => {\r\n      shifts.forEach((shift) => {\r\n        const ingepland = planning[medewerker.naam]?.[dag]?.[shift];\r\n        if (ingepland) {\r\n          const { functie } = ingepland;\r\n          if (!totals[dag]) totals[dag] = {};\r\n          if (!totals[dag][shift]) totals[dag][shift] = { ijsbereider: 0, ijsvoorbereider: 0, schepper: 0 };\r\n          if (functie) totals[dag][shift][functie] += 1;\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  return totals;\r\n}\r\n\r\nexport function berekenLoonkostenPerDag(dagen, medewerkers, planning, salarissenPerLeeftijd) {\r\n  const loonkosten = {};\r\n\r\n  dagen.forEach((dag) => {\r\n    let totaal = 0;\r\n    medewerkers.forEach(({ naam, leeftijd }) => {\r\n      const shiftsVoorDag = planning[naam]?.[dag] || {};\r\n      Object.values(shiftsVoorDag).forEach(({ soort }) => {\r\n        const uren = soort === \"vast\" ? 6 : 4;\r\n        const uurloon = salarissenPerLeeftijd[leeftijd] || 0;\r\n        totaal += uren * uurloon;\r\n      });\r\n    });\r\n    loonkosten[dag] = totaal;\r\n  });\r\n\r\n  return loonkosten;\r\n}\r\n\r\nexport function getShiftCountPerMedewerker(planning = {}) {\r\n  const shiftCount = {};\r\n\r\n  Object.keys(planning).forEach((naam) => {\r\n    let count = 0;\r\n    const dagen = planning[naam] || {};\r\n    Object.values(dagen).forEach((shiftsPerDag) => {\r\n      Object.values(shiftsPerDag).forEach((shift) => {\r\n        if (\r\n          shift &&\r\n          typeof shift === \"object\" &&\r\n          \"functie\" in shift &&\r\n          typeof shift.functie === \"string\" &&\r\n          [\"ijsbereider\", \"ijsvoorbereider\", \"schepper\"].includes(shift.functie.trim().toLowerCase())\r\n        ) {\r\n          count += 1;\r\n        }\r\n      });\r\n    });\r\n    shiftCount[naam] = count;\r\n  });\r\n\r\n  return shiftCount;\r\n}\r\n\r\nexport function resetMedewerkerPlanning(naam, setPlanning) {\r\n  setPlanning((prev) => {\r\n    const nieuwe = { ...prev };\r\n    delete nieuwe[naam];\r\n    localStorage.setItem(\"planning\", JSON.stringify(nieuwe));\r\n    return nieuwe;\r\n  });\r\n}\r\n\r\nexport function getCellColor(medewerker, dag, shift, beschikbaarheid, planning) {\r\n  const key = medewerker.trim().toLowerCase();\r\n  const ingepland = planning[medewerker]?.[dag]?.[shift];\r\n  if (ingepland) {\r\n    const { functie, soort } = ingepland;\r\n    if (functie === \"ijsbereider\") return { backgroundColor: soort === \"vast\" ? \"#1e3a8a\" : \"#3b82f6\", color: \"white\" };\r\n    if (functie === \"ijsvoorbereider\") return { backgroundColor: soort === \"vast\" ? \"#bfdbfe\" : \"#93c5fd\" };\r\n    if (functie === \"schepper\") return { backgroundColor: soort === \"vast\" ? \"#f59e0b\" : \"#fcd34d\" };\r\n  }\r\n\r\n  const dagMap = {\r\n    ma: \"maandag\", di: \"dinsdag\", wo: \"woensdag\",\r\n    do: \"donderdag\", vr: \"vrijdag\", za: \"zaterdag\", zo: \"zondag\"\r\n  };\r\n  const langeDag = dagMap[dag.toLowerCase()] || dag;\r\n\r\n  const beschikbaar = beschikbaarheid[key]?.[langeDag]?.[shift] ?? false;\r\n  if (beschikbaar) {\r\n    return { backgroundColor: \"#90ee90\" }; // lichtgroen\r\n  }\r\n\r\n  return { backgroundColor: \"#ffffff\" }; // wit\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}