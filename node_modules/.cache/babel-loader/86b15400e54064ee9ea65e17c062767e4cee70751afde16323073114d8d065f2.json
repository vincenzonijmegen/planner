{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\van den Akker\\\\planner\\\\planner-app\\\\src\\\\PlannerBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport jsPDF from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { getShiftCountPerMedewerker, importeerBeschikbaarheidKnop } from \"./utils/plannerHelpers\";\nimport { dagMap } from \"./utils/dagen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dagen = [\"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\", \"zo\"];\nconst shifts = [1, 2];\nexport default function PlannerBoard({\n  beschikbaarheid: beschikbaarheidProp,\n  planning,\n  setPlanning,\n  onTotalLoonkostenChange\n}) {\n  _s();\n  const [medewerkers, setMedewerkers] = useState(() => {\n    try {\n      const saved = localStorage.getItem(\"medewerkers\");\n      const parsed = saved ? JSON.parse(saved) : [];\n      return Array.isArray(parsed) ? parsed.filter(m => m && typeof m === \"object\" && m.naam) : [];\n    } catch {\n      return [];\n    }\n  });\n  const [beschikbaarheid, setLocalBeschikbaarheid] = useState(() => {\n    try {\n      const saved = localStorage.getItem(\"beschikbaarheid\");\n      return saved ? JSON.parse(saved) : {};\n    } catch {\n      return {};\n    }\n  });\n  useEffect(() => {\n    if (beschikbaarheidProp && Object.keys(beschikbaarheidProp).length > 0) {\n      setLocalBeschikbaarheid(beschikbaarheidProp);\n      localStorage.setItem(\"beschikbaarheid\", JSON.stringify(beschikbaarheidProp));\n    }\n  }, [beschikbaarheidProp]);\n  const [popup, setPopup] = useState(null);\n  const shiftCountPerMedewerker = getShiftCountPerMedewerker(planning);\n  const gestructureerdeUpdate = (prev, popup, functie, soort) => {\n    var _prev$popup$medewerke;\n    return {\n      ...prev,\n      [popup.medewerker]: {\n        ...prev[popup.medewerker],\n        [popup.dag]: {\n          ...((_prev$popup$medewerke = prev[popup.medewerker]) === null || _prev$popup$medewerke === void 0 ? void 0 : _prev$popup$medewerke[popup.dag]),\n          [popup.shift]: {\n            functie,\n            soort\n          }\n        }\n      }\n    };\n  };\n  const updatePlanning = (functie, soort) => {\n    if (popup) {\n      setPlanning(prev => {\n        const nieuwePlanning = gestructureerdeUpdate(prev, popup, functie, soort);\n        localStorage.setItem(\"planning\", JSON.stringify(nieuwePlanning));\n        return nieuwePlanning;\n      });\n      setPopup(null);\n    }\n  };\n  useEffect(() => {\n    const loonkostenPerUur = {\n      16: 6.5,\n      17: 7,\n      18: 8,\n      19: 9,\n      20: 10,\n      21: 11,\n      22: 12,\n      23: 13,\n      24: 14,\n      25: 15\n    };\n    let totaal = 0;\n    medewerkers.forEach(m => {\n      dagen.forEach(dag => {\n        shifts.forEach(shift => {\n          var _planning$m$naam, _planning$m$naam$dag;\n          const entry = (_planning$m$naam = planning[m.naam]) === null || _planning$m$naam === void 0 ? void 0 : (_planning$m$naam$dag = _planning$m$naam[dag]) === null || _planning$m$naam$dag === void 0 ? void 0 : _planning$m$naam$dag[shift];\n          if (entry) {\n            var _loonkostenPerUur$lee;\n            const uren = entry.soort === \"standby\" ? 4 : 6;\n            const leeftijd = typeof m.leeftijd === 'number' ? m.leeftijd : 18;\n            const uurloon = (_loonkostenPerUur$lee = loonkostenPerUur[leeftijd]) !== null && _loonkostenPerUur$lee !== void 0 ? _loonkostenPerUur$lee : 15;\n            totaal += uren * uurloon;\n          }\n        });\n      });\n    });\n    if (typeof onTotalLoonkostenChange === 'function') {\n      onTotalLoonkostenChange(totaal);\n    }\n  }, [planning, medewerkers]);\n  const exportToPDF = () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      format: \"a4\"\n    });\n    const tableColumn = [\"Naam\", ...dagen.flatMap(dag => shifts.map(shift => `${dag} ${shift}`))];\n    const body = medewerkers.map(m => {\n      var _m$maxShifts, _m$leeftijd;\n      const count = shiftCountPerMedewerker[m.naam] || 0;\n      const max = (_m$maxShifts = m.maxShifts) !== null && _m$maxShifts !== void 0 ? _m$maxShifts : \"?\";\n      const leeftijd = (_m$leeftijd = m.leeftijd) !== null && _m$leeftijd !== void 0 ? _m$leeftijd : \"?\";\n      const row = {\n        Naam: `${m.naam.split(\" \").map((part, i) => i === 0 ? part : part.charAt(0).toUpperCase() + part.slice(1)).join(\" \")} [${leeftijd}] (${count}/${max})`\n      };\n      dagen.forEach(dag => {\n        shifts.forEach(shift => {\n          var _planning$m$naam2, _planning$m$naam2$dag, _m$naam, _beschikbaarheid$naam, _beschikbaarheid$naam2;\n          const key = `${dag} ${shift}`;\n          const entry = (_planning$m$naam2 = planning[m.naam]) === null || _planning$m$naam2 === void 0 ? void 0 : (_planning$m$naam2$dag = _planning$m$naam2[dag]) === null || _planning$m$naam2$dag === void 0 ? void 0 : _planning$m$naam2$dag[shift];\n          const naamKey = (_m$naam = m.naam) === null || _m$naam === void 0 ? void 0 : _m$naam.toLowerCase();\n          const beschikbaar = beschikbaarheid === null || beschikbaarheid === void 0 ? void 0 : (_beschikbaarheid$naam = beschikbaarheid[naamKey]) === null || _beschikbaarheid$naam === void 0 ? void 0 : (_beschikbaarheid$naam2 = _beschikbaarheid$naam[dagMap[dag]]) === null || _beschikbaarheid$naam2 === void 0 ? void 0 : _beschikbaarheid$naam2[shift];\n          if (entry) {\n            if (entry.functie === \"schepper\") row[key] = entry.soort === \"vast\" ? \"schep\" : \"schep(s)\";else if (entry.functie === \"ijsbereider\") row[key] = entry.soort === \"vast\" ? \"bereider\" : \"bereider(s)\";else if (entry.functie === \"ijsvoorbereider\") row[key] = entry.soort === \"vast\" ? \"prep\" : \"prep(s)\";else row[key] = `${entry.functie} (${entry.soort})`;\n          } else if (beschikbaar) {\n            row[key] = \"✓\";\n          } else {\n            row[key] = \"\";\n          }\n        });\n      });\n      return row;\n    });\n    autoTable(doc, {\n      columnStyles: {\n        Naam: {\n          halign: 'left'\n        }\n      },\n      didParseCell: function (data) {\n        const val = (typeof data.cell.raw === \"string\" ? data.cell.raw : Array.isArray(data.cell.raw) ? data.cell.raw.join(\" \") : \"\").toLowerCase().trim();\n        const colKey = data.column.dataKey;\n        if (val === \"bereider\") {\n          data.cell.styles.fillColor = [30, 58, 138];\n          data.cell.styles.textColor = [255, 255, 255];\n        } else if (val === \"bereider(s)\") {\n          data.cell.styles.fillColor = [96, 165, 250];\n        } else if (val === \"prep\") {\n          data.cell.styles.fillColor = [191, 219, 254];\n        } else if (val === \"prep(s)\") {\n          data.cell.styles.fillColor = [219, 234, 254];\n        } else if (val === \"schep\") {\n          data.cell.styles.fillColor = [250, 204, 21];\n        } else if (val === \"schep(s)\") {\n          data.cell.styles.fillColor = [254, 240, 138];\n        } else if (val === \"✓\") {\n          data.cell.styles.fillColor = [144, 238, 144];\n        } else if (val === \"\" && colKey !== \"Naam\") {\n          var _Object$entries$find, _beschikbaarheid$naam3, _beschikbaarheid$naam4;\n          const naam = data.row.raw[\"Naam\"].toLowerCase();\n          const [dagLabel, shiftStr] = colKey.split(\" \");\n          const shift = parseInt(shiftStr);\n          const dagMap = {\n            ma: \"maandag\",\n            di: \"dinsdag\",\n            wo: \"woensdag\",\n            do: \"donderdag\",\n            vr: \"vrijdag\",\n            za: \"zaterdag\",\n            zo: \"zondag\"\n          };\n          const dag = (_Object$entries$find = Object.entries(dagMap).find(([k]) => dagLabel.toLowerCase().startsWith(k))) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[1];\n          if (naam && dag && beschikbaarheid !== null && beschikbaarheid !== void 0 && (_beschikbaarheid$naam3 = beschikbaarheid[naam]) !== null && _beschikbaarheid$naam3 !== void 0 && (_beschikbaarheid$naam4 = _beschikbaarheid$naam3[dag]) !== null && _beschikbaarheid$naam4 !== void 0 && _beschikbaarheid$naam4[shift]) {\n            data.cell.styles.fillColor = [144, 238, 144]; // lichtgroen\n          }\n        }\n      },\n      columns: tableColumn.map(key => ({\n        header: key,\n        dataKey: key,\n        halign: key === 'Naam' ? 'left' : 'center'\n      })),\n      body,\n      startY: 20,\n      styles: {\n        fontSize: 8,\n        halign: \"center\",\n        valign: \"middle\",\n        cellPadding: 2,\n        lineWidth: 0.1,\n        lineColor: [0, 0, 0]\n      },\n      headStyles: {\n        fillColor: [41, 128, 185],\n        textColor: [255, 255, 255],\n        fontStyle: \"bold\"\n      },\n      didDrawCell: function (data) {\n        const val = (typeof data.cell.text === \"string\" ? data.cell.text : Array.isArray(data.cell.text) ? data.cell.text.join(\" \") : \"\").toLowerCase().trim();\n        if (val === \"bereider\") {\n          data.cell.styles.fillColor = [30, 58, 138];\n          data.cell.styles.textColor = [255, 255, 255];\n        } else if (val === \"bereider(s)\") {\n          data.cell.styles.fillColor = [96, 165, 250];\n        } else if (val === \"prep\") {\n          data.cell.styles.fillColor = [191, 219, 254];\n        } else if (val === \"prep(s)\") {\n          data.cell.styles.fillColor = [219, 234, 254];\n        } else if (val === \"schep\") {\n          data.cell.styles.fillColor = [250, 204, 21];\n        } else if (val === \"schep(s)\") {\n          data.cell.styles.fillColor = [254, 240, 138];\n        }\n      }\n    });\n    const eindY = doc.lastAutoTable.finalY + 20;\n    doc.setFontSize(8);\n    const loonkostenPerUur = {\n      16: 6.5,\n      17: 7,\n      18: 8,\n      19: 9,\n      20: 10,\n      21: 11,\n      22: 12,\n      23: 13,\n      24: 14,\n      25: 15\n    };\n    const loonkostenPerDag = {};\n    const shiftTelling = {};\n    medewerkers.forEach(m => {\n      var _loonkostenPerUur$m$l;\n      const uurloon = parseFloat(((_loonkostenPerUur$m$l = loonkostenPerUur[m.leeftijd]) !== null && _loonkostenPerUur$m$l !== void 0 ? _loonkostenPerUur$m$l : 15).toFixed(2));\n      dagen.forEach(dag => {\n        let dagTotaal = loonkostenPerDag[dag] || 0;\n        shiftTelling[dag] = shiftTelling[dag] || {\n          schepper: 0,\n          ijsbereider: 0,\n          ijsvoorbereider: 0\n        };\n        shifts.forEach(shift => {\n          var _planning$m$naam3, _planning$m$naam3$dag;\n          const entry = (_planning$m$naam3 = planning[m.naam]) === null || _planning$m$naam3 === void 0 ? void 0 : (_planning$m$naam3$dag = _planning$m$naam3[dag]) === null || _planning$m$naam3$dag === void 0 ? void 0 : _planning$m$naam3$dag[shift];\n          if (entry) {\n            const uren = entry.soort === \"standby\" ? 4 : 6;\n            dagTotaal += uren * uurloon;\n            if (shiftTelling[dag][entry.functie] !== undefined) {\n              shiftTelling[dag][entry.functie]++;\n            }\n          }\n        });\n        loonkostenPerDag[dag] = dagTotaal;\n      });\n    });\n    const startY = doc.lastAutoTable.finalY + 35;\n    autoTable(doc, {\n      head: [[\"Dag\"].concat(dagen.flatMap(d => shifts.map(s => `${d} shift ${s}`)))],\n      body: [[\"Loonkosten\"].concat(dagen.flatMap(d => shifts.map(s => `€ ${(() => {\n        let totaal = 0;\n        medewerkers.forEach(m => {\n          var _planning$m$naam4, _planning$m$naam4$d;\n          const entry = (_planning$m$naam4 = planning[m.naam]) === null || _planning$m$naam4 === void 0 ? void 0 : (_planning$m$naam4$d = _planning$m$naam4[d]) === null || _planning$m$naam4$d === void 0 ? void 0 : _planning$m$naam4$d[s];\n          if (entry) {\n            var _loonkostenPerUur$lee2;\n            const uren = entry.soort === \"standby\" ? 4 : 6;\n            const loonkostenPerUur = {\n              16: 6.5,\n              17: 7,\n              18: 8,\n              19: 9,\n              20: 10,\n              21: 11,\n              22: 12,\n              23: 13,\n              24: 14,\n              25: 15\n            };\n            const leeftijd = typeof m.leeftijd === 'number' ? m.leeftijd : 18;\n            const uurloon = (_loonkostenPerUur$lee2 = loonkostenPerUur[leeftijd]) !== null && _loonkostenPerUur$lee2 !== void 0 ? _loonkostenPerUur$lee2 : 15;\n            totaal += uren * uurloon;\n          }\n        });\n        return totaal.toFixed(2);\n      })()}`))), [\"Bereiders\"].concat(dagen.flatMap(d => shifts.map(s => medewerkers.filter(m => {\n        var _planning$m$naam5, _planning$m$naam5$d, _planning$m$naam5$d$s;\n        return ((_planning$m$naam5 = planning[m.naam]) === null || _planning$m$naam5 === void 0 ? void 0 : (_planning$m$naam5$d = _planning$m$naam5[d]) === null || _planning$m$naam5$d === void 0 ? void 0 : (_planning$m$naam5$d$s = _planning$m$naam5$d[s]) === null || _planning$m$naam5$d$s === void 0 ? void 0 : _planning$m$naam5$d$s.functie) === \"ijsbereider\";\n      }).length))), [\"Voorbereiders\"].concat(dagen.flatMap(d => shifts.map(s => medewerkers.filter(m => {\n        var _planning$m$naam6, _planning$m$naam6$d, _planning$m$naam6$d$s;\n        return ((_planning$m$naam6 = planning[m.naam]) === null || _planning$m$naam6 === void 0 ? void 0 : (_planning$m$naam6$d = _planning$m$naam6[d]) === null || _planning$m$naam6$d === void 0 ? void 0 : (_planning$m$naam6$d$s = _planning$m$naam6$d[s]) === null || _planning$m$naam6$d$s === void 0 ? void 0 : _planning$m$naam6$d$s.functie) === \"ijsvoorbereider\";\n      }).length))), [\"Scheppers\"].concat(dagen.flatMap(d => shifts.map(s => medewerkers.filter(m => {\n        var _planning$m$naam7, _planning$m$naam7$d, _planning$m$naam7$d$s;\n        return ((_planning$m$naam7 = planning[m.naam]) === null || _planning$m$naam7 === void 0 ? void 0 : (_planning$m$naam7$d = _planning$m$naam7[d]) === null || _planning$m$naam7$d === void 0 ? void 0 : (_planning$m$naam7$d$s = _planning$m$naam7$d[s]) === null || _planning$m$naam7$d$s === void 0 ? void 0 : _planning$m$naam7$d$s.functie) === \"schepper\";\n      }).length)))],\n      startY,\n      styles: {\n        fontSize: 8,\n        halign: 'center',\n        valign: 'middle',\n        cellPadding: 2,\n        lineWidth: 0.1,\n        lineColor: [0, 0, 0]\n      },\n      headStyles: {\n        fillColor: [100, 149, 237],\n        textColor: 255\n      },\n      columnStyles: {\n        0: {\n          fontStyle: 'bold',\n          halign: 'left'\n        }\n      }\n    });\n    doc.save(\"planning_export.pdf\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right text-lg font-bold mb-2\",\n      children: \"Totale loonkosten worden hier getoond via App.jsx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-right text-lg font-bold mb-2\",\n      children: [\"Totale loonkosten: \\u20AC\", totaleLoonkosten.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"text-xs border-collapse w-full bg-white shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 7\n            }, this), dagen.map(dag => shifts.map(shift => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1 text-center\",\n              children: [dagMap[dag], \" shift \", shift]\n            }, `${dag}-${shift}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 11\n            }, this)))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: ['Bereiders', 'Voorbereiders', 'Scheppers', 'Kosten'].map(type => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"border px-2 py-1 font-semibold\",\n              children: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 9\n            }, this), dagen.map(dag => shifts.map(shift => {\n              let value = 0;\n              if (type === 'Kosten') {\n                value = medewerkers.reduce((totaal, m) => {\n                  var _planning$m$naam8, _planning$m$naam8$dag, _loonkostenPerUur$lee3;\n                  const entry = (_planning$m$naam8 = planning[m.naam]) === null || _planning$m$naam8 === void 0 ? void 0 : (_planning$m$naam8$dag = _planning$m$naam8[dag]) === null || _planning$m$naam8$dag === void 0 ? void 0 : _planning$m$naam8$dag[shift];\n                  if (!entry) return totaal;\n                  const uren = entry.soort === 'standby' ? 4 : 6;\n                  const loonkostenPerUur = {\n                    16: 6.5,\n                    17: 7,\n                    18: 8,\n                    19: 9,\n                    20: 10,\n                    21: 11,\n                    22: 12,\n                    23: 13,\n                    24: 14,\n                    25: 15\n                  };\n                  const leeftijd = typeof m.leeftijd === 'number' ? m.leeftijd : 18;\n                  const uurloon = (_loonkostenPerUur$lee3 = loonkostenPerUur[leeftijd]) !== null && _loonkostenPerUur$lee3 !== void 0 ? _loonkostenPerUur$lee3 : 15;\n                  return totaal + uren * uurloon;\n                }, 0);\n              } else {\n                const functieMap = {\n                  'Bereiders': 'ijsbereider',\n                  'Voorbereiders': 'ijsvoorbereider',\n                  'Scheppers': 'schepper'\n                };\n                const functie = functieMap[type];\n                value = medewerkers.filter(m => {\n                  var _planning$m$naam9, _planning$m$naam9$dag, _planning$m$naam9$dag2;\n                  return ((_planning$m$naam9 = planning[m.naam]) === null || _planning$m$naam9 === void 0 ? void 0 : (_planning$m$naam9$dag = _planning$m$naam9[dag]) === null || _planning$m$naam9$dag === void 0 ? void 0 : (_planning$m$naam9$dag2 = _planning$m$naam9$dag[shift]) === null || _planning$m$naam9$dag2 === void 0 ? void 0 : _planning$m$naam9$dag2.functie) === functie;\n                }).length;\n              }\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1 text-center\",\n                children: type === 'Kosten' ? `€ ${Math.round(value)}` : value\n              }, `${type}-${dag}-${shift}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 15\n              }, this);\n            }))]\n          }, type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 items-center mb-4\",\n      children: [importeerBeschikbaarheidKnop(setLocalBeschikbaarheid, setMedewerkers), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToPDF,\n        className: \"bg-red-600 text-white px-4 py-2 rounded shadow\",\n        children: \"Exporteer naar PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), medewerkers.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600\",\n      children: \"Nog geen medewerkers geladen. Importeer beschikbaarheid om te starten.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 9\n    }, this), medewerkers.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-fixed border w-full bg-white text-xs font-sans\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-4 py-2 text-left w-60\",\n            children: \"Naam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this), dagen.map(dag => shifts.map(shift => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"border px-2 py-1 text-center\",\n            children: [dag, \" \", shift]\n          }, `${dag}-${shift}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 19\n          }, this)))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: medewerkers.map(m => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [((_m$maxShifts2, _m$leeftijd2) => {\n            const count = shiftCountPerMedewerker[m.naam] || 0;\n            const max = (_m$maxShifts2 = m.maxShifts) !== null && _m$maxShifts2 !== void 0 ? _m$maxShifts2 : \"?\";\n            const leeftijd = (_m$leeftijd2 = m.leeftijd) !== null && _m$leeftijd2 !== void 0 ? _m$leeftijd2 : \"?\";\n            const bgClass = count > max ? \"bg-red-200\" : count < max ? \"bg-yellow-200\" : \"\";\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              className: `border px-4 py-2 text-left whitespace-nowrap w-60 font-bold ${bgClass}`,\n              title: m.opmerking || \"\",\n              children: [m.naam.split(\" \").map((part, i) => i === 0 ? part : part.charAt(0).toUpperCase() + part.slice(1)).join(\" \"), \" [\", leeftijd, \"] (\", count, \"/\", max, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 5\n            }, this);\n          })(), dagen.map(dag => shifts.map(shift => {\n            var _m$naam2, _planning$m$naam10, _planning$m$naam10$da, _beschikbaarheid$naam5, _beschikbaarheid$naam6;\n            const naamKey = (_m$naam2 = m.naam) === null || _m$naam2 === void 0 ? void 0 : _m$naam2.toLowerCase();\n            const entry = (_planning$m$naam10 = planning[m.naam]) === null || _planning$m$naam10 === void 0 ? void 0 : (_planning$m$naam10$da = _planning$m$naam10[dag]) === null || _planning$m$naam10$da === void 0 ? void 0 : _planning$m$naam10$da[shift];\n            const beschikbaar = beschikbaarheid === null || beschikbaarheid === void 0 ? void 0 : (_beschikbaarheid$naam5 = beschikbaarheid[naamKey]) === null || _beschikbaarheid$naam5 === void 0 ? void 0 : (_beschikbaarheid$naam6 = _beschikbaarheid$naam5[dagMap[dag]]) === null || _beschikbaarheid$naam6 === void 0 ? void 0 : _beschikbaarheid$naam6[shift];\n            let text = \"\";\n            let bgColor = \"#ffffff\"; // standaard wit\n\n            if (entry) {\n              switch (entry.functie) {\n                case \"schepper\":\n                  text = entry.soort === \"vast\" ? \"schep\" : \"schep(s)\";\n                  bgColor = entry.soort === \"vast\" ? \"#facc15\" : \"#fef08a\";\n                  break;\n                case \"ijsbereider\":\n                  text = entry.soort === \"vast\" ? \"bereider\" : \"bereider(s)\";\n                  bgColor = entry.soort === \"vast\" ? \"#1e3a8a\" : \"#60a5fa\";\n                  break;\n                case \"ijsvoorbereider\":\n                  text = entry.soort === \"vast\" ? \"prep\" : \"prep(s)\";\n                  bgColor = entry.soort === \"vast\" ? \"#bfdbfe\" : \"#dbeafe\";\n                  break;\n                default:\n                  text = `${entry.functie} (${entry.soort})`;\n                  break;\n              }\n            } else if (beschikbaar) {\n              // Geen planning maar wél beschikbaarheid → lichtgroen\n              bgColor = \"#bbf7d0\";\n              text = \"✓\";\n            }\n            return /*#__PURE__*/_jsxDEV(\"td\", {\n              title: `Shift ${shift} op ${dagMap[dag]}`,\n              className: \"border text-center cursor-pointer\",\n              onClick: () => {\n                var _planning$m$naam11, _planning$m$naam11$da;\n                const entry = (_planning$m$naam11 = planning[m.naam]) === null || _planning$m$naam11 === void 0 ? void 0 : (_planning$m$naam11$da = _planning$m$naam11[dag]) === null || _planning$m$naam11$da === void 0 ? void 0 : _planning$m$naam11$da[shift];\n                if (entry) {\n                  setPlanning(prev => {\n                    const nieuw = {\n                      ...prev\n                    };\n                    delete nieuw[m.naam][dag][shift];\n                    if (Object.keys(nieuw[m.naam][dag]).length === 0) delete nieuw[m.naam][dag];\n                    if (Object.keys(nieuw[m.naam]).length === 0) delete nieuw[m.naam];\n                    localStorage.setItem(\"planning\", JSON.stringify(nieuw));\n                    return nieuw;\n                  });\n                } else {\n                  setPopup({\n                    medewerker: m.naam,\n                    dag,\n                    shift\n                  });\n                }\n              },\n              style: {\n                backgroundColor: bgColor,\n                color: (entry === null || entry === void 0 ? void 0 : entry.functie) === \"ijsbereider\" && (entry === null || entry === void 0 ? void 0 : entry.soort) === \"vast\" ? \"white\" : undefined\n              },\n              children: text\n            }, `${m.naam}-${dag}-${shift}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 11\n            }, this);\n          }))]\n        }, m.naam, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 3\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 9\n    }, this), popup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded shadow-md w-[300px]\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-bold mb-4 text-center\",\n          children: [popup.medewerker, \" - \", popup.dag, \" Shift \", popup.shift]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-2\",\n          children: [\"ijsbereider\", \"ijsvoorbereider\", \"schepper\"].map(functie => [\"vast\", \"standby\"].map(soort => {\n            let kleur = \"\";\n            let label = \"\";\n            if (functie === \"ijsbereider\") {\n              kleur = soort === \"vast\" ? \"bg-blue-900 text-white\" : \"bg-blue-300 text-black\";\n              label = soort === \"vast\" ? \"bereider\" : \"⏱️ bereider\";\n            } else if (functie === \"ijsvoorbereider\") {\n              kleur = soort === \"vast\" ? \"bg-blue-600 text-white\" : \"bg-blue-200 text-black\";\n              label = soort === \"vast\" ? \"prep\" : \"⏱️ prep\";\n            } else if (functie === \"schepper\") {\n              kleur = soort === \"vast\" ? \"bg-yellow-500 text-black\" : \"bg-yellow-200 text-black\";\n              label = soort === \"vast\" ? \"schep\" : \"⏱️ schep\";\n            }\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `${kleur} px-3 py-2 rounded font-medium text-sm`,\n              onClick: () => updatePlanning(functie, soort),\n              children: label\n            }, `${functie}-${soort}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 21\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setPopup(null),\n            className: \"text-gray-600 text-sm underline\",\n            children: \"Annuleren\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n_s(PlannerBoard, \"KJV97xTeM4KFPdmtyhiP2pHrD7E=\");\n_c = PlannerBoard;\nvar _c;\n$RefreshReg$(_c, \"PlannerBoard\");","map":{"version":3,"names":["React","useState","useEffect","jsPDF","autoTable","getShiftCountPerMedewerker","importeerBeschikbaarheidKnop","dagMap","jsxDEV","_jsxDEV","dagen","shifts","PlannerBoard","beschikbaarheid","beschikbaarheidProp","planning","setPlanning","onTotalLoonkostenChange","_s","medewerkers","setMedewerkers","saved","localStorage","getItem","parsed","JSON","parse","Array","isArray","filter","m","naam","setLocalBeschikbaarheid","Object","keys","length","setItem","stringify","popup","setPopup","shiftCountPerMedewerker","gestructureerdeUpdate","prev","functie","soort","_prev$popup$medewerke","medewerker","dag","shift","updatePlanning","nieuwePlanning","loonkostenPerUur","totaal","forEach","_planning$m$naam","_planning$m$naam$dag","entry","_loonkostenPerUur$lee","uren","leeftijd","uurloon","exportToPDF","doc","orientation","format","tableColumn","flatMap","map","body","_m$maxShifts","_m$leeftijd","count","max","maxShifts","row","Naam","split","part","i","charAt","toUpperCase","slice","join","_planning$m$naam2","_planning$m$naam2$dag","_m$naam","_beschikbaarheid$naam","_beschikbaarheid$naam2","key","naamKey","toLowerCase","beschikbaar","columnStyles","halign","didParseCell","data","val","cell","raw","trim","colKey","column","dataKey","styles","fillColor","textColor","_Object$entries$find","_beschikbaarheid$naam3","_beschikbaarheid$naam4","dagLabel","shiftStr","parseInt","ma","di","wo","do","vr","za","zo","entries","find","k","startsWith","columns","header","startY","fontSize","valign","cellPadding","lineWidth","lineColor","headStyles","fontStyle","didDrawCell","text","eindY","lastAutoTable","finalY","setFontSize","loonkostenPerDag","shiftTelling","_loonkostenPerUur$m$l","parseFloat","toFixed","dagTotaal","schepper","ijsbereider","ijsvoorbereider","_planning$m$naam3","_planning$m$naam3$dag","undefined","head","concat","d","s","_planning$m$naam4","_planning$m$naam4$d","_loonkostenPerUur$lee2","_planning$m$naam5","_planning$m$naam5$d","_planning$m$naam5$d$s","_planning$m$naam6","_planning$m$naam6$d","_planning$m$naam6$d$s","_planning$m$naam7","_planning$m$naam7$d","_planning$m$naam7$d$s","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totaleLoonkosten","type","value","reduce","_planning$m$naam8","_planning$m$naam8$dag","_loonkostenPerUur$lee3","functieMap","_planning$m$naam9","_planning$m$naam9$dag","_planning$m$naam9$dag2","Math","round","onClick","_m$maxShifts2","_m$leeftijd2","bgClass","title","opmerking","_m$naam2","_planning$m$naam10","_planning$m$naam10$da","_beschikbaarheid$naam5","_beschikbaarheid$naam6","bgColor","_planning$m$naam11","_planning$m$naam11$da","nieuw","style","backgroundColor","color","kleur","label","_c","$RefreshReg$"],"sources":["C:/Users/van den Akker/planner/planner-app/src/PlannerBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport jsPDF from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  getShiftCountPerMedewerker,\n  importeerBeschikbaarheidKnop,\n} from \"./utils/plannerHelpers\";\nimport { dagMap } from \"./utils/dagen\";\n\nconst dagen = [\"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\", \"zo\"];\nconst shifts = [1, 2];\n\nexport default function PlannerBoard({ beschikbaarheid: beschikbaarheidProp, planning, setPlanning, onTotalLoonkostenChange }) {\n  const [medewerkers, setMedewerkers] = useState(() => {\n    try {\n      const saved = localStorage.getItem(\"medewerkers\");\n      const parsed = saved ? JSON.parse(saved) : [];\n      return Array.isArray(parsed) ? parsed.filter((m) => m && typeof m === \"object\" && m.naam) : [];\n    } catch {\n      return [];\n    }\n  });\n\n  const [beschikbaarheid, setLocalBeschikbaarheid] = useState(() => {\n    try {\n      const saved = localStorage.getItem(\"beschikbaarheid\");\n      return saved ? JSON.parse(saved) : {};\n    } catch {\n      return {};\n    }\n  });\n\n  useEffect(() => {\n    if (beschikbaarheidProp && Object.keys(beschikbaarheidProp).length > 0) {\n      setLocalBeschikbaarheid(beschikbaarheidProp);\n      localStorage.setItem(\"beschikbaarheid\", JSON.stringify(beschikbaarheidProp));\n    }\n  }, [beschikbaarheidProp]);\n\n  const [popup, setPopup] = useState(null);\n  const shiftCountPerMedewerker = getShiftCountPerMedewerker(planning);\n\n  const gestructureerdeUpdate = (prev, popup, functie, soort) => {\n    return {\n      ...prev,\n      [popup.medewerker]: {\n        ...prev[popup.medewerker],\n        [popup.dag]: {\n          ...prev[popup.medewerker]?.[popup.dag],\n          [popup.shift]: { functie, soort },\n        },\n      },\n    };\n  };\n\n  const updatePlanning = (functie, soort) => {\n    if (popup) {\n      setPlanning((prev) => {\n        const nieuwePlanning = gestructureerdeUpdate(prev, popup, functie, soort);\n        localStorage.setItem(\"planning\", JSON.stringify(nieuwePlanning));\n        return nieuwePlanning;\n      });\n      setPopup(null);\n    }\n  };\n\n  useEffect(() => {\n    const loonkostenPerUur = { 16: 6.5, 17: 7, 18: 8, 19: 9, 20: 10, 21: 11, 22: 12, 23: 13, 24: 14, 25: 15 };\n    let totaal = 0;\n\n    medewerkers.forEach((m) => {\n      dagen.forEach((dag) => {\n        shifts.forEach((shift) => {\n          const entry = planning[m.naam]?.[dag]?.[shift];\n          if (entry) {\n            const uren = entry.soort === \"standby\" ? 4 : 6;\n            const leeftijd = typeof m.leeftijd === 'number' ? m.leeftijd : 18;\n            const uurloon = loonkostenPerUur[leeftijd] ?? 15;\n            totaal += uren * uurloon;\n          }\n        });\n      });\n    });\n\n    if (typeof onTotalLoonkostenChange === 'function') {\n      onTotalLoonkostenChange(totaal);\n    }\n  }, [planning, medewerkers]);\n\n  const exportToPDF = () => {\n    const doc = new jsPDF({ orientation: \"landscape\", format: \"a4\" });\n\n    const tableColumn = [\"Naam\", ...dagen.flatMap(dag => shifts.map(shift => `${dag} ${shift}`))];\n    const body = medewerkers.map((m) => {\n      const count = shiftCountPerMedewerker[m.naam] || 0;\n      const max = m.maxShifts ?? \"?\";\n      const leeftijd = m.leeftijd ?? \"?\";\n      const row = { Naam: `${m.naam.split(\" \").map((part, i) => i === 0 ? part : part.charAt(0).toUpperCase() + part.slice(1)).join(\" \")} [${leeftijd}] (${count}/${max})` };\n\n      dagen.forEach(dag => {\n        shifts.forEach(shift => {\n          const key = `${dag} ${shift}`;\n          const entry = planning[m.naam]?.[dag]?.[shift];\n          const naamKey = m.naam?.toLowerCase();\n          const beschikbaar = beschikbaarheid?.[naamKey]?.[dagMap[dag]]?.[shift];\n\n          if (entry) {\n            if (entry.functie === \"schepper\") row[key] = entry.soort === \"vast\" ? \"schep\" : \"schep(s)\";\n            else if (entry.functie === \"ijsbereider\") row[key] = entry.soort === \"vast\" ? \"bereider\" : \"bereider(s)\";\n            else if (entry.functie === \"ijsvoorbereider\") row[key] = entry.soort === \"vast\" ? \"prep\" : \"prep(s)\";\n            else row[key] = `${entry.functie} (${entry.soort})`;\n          } else if (beschikbaar) {\n            row[key] = \"✓\";\n          } else {\n            row[key] = \"\";\n          }\n        });\n      });\n\n      return row;\n    });\n\n    autoTable(doc, {\n      columnStyles: { Naam: { halign: 'left' } },\n      didParseCell: function (data) {\n        const val = (typeof data.cell.raw === \"string\" ? data.cell.raw : Array.isArray(data.cell.raw) ? data.cell.raw.join(\" \") : \"\").toLowerCase().trim();\n        const colKey = data.column.dataKey;\n\n        if (val === \"bereider\") {\n          data.cell.styles.fillColor = [30, 58, 138];\n          data.cell.styles.textColor = [255, 255, 255];\n        } else if (val === \"bereider(s)\") {\n          data.cell.styles.fillColor = [96, 165, 250];\n        } else if (val === \"prep\") {\n          data.cell.styles.fillColor = [191, 219, 254];\n        } else if (val === \"prep(s)\") {\n          data.cell.styles.fillColor = [219, 234, 254];\n        } else if (val === \"schep\") {\n          data.cell.styles.fillColor = [250, 204, 21];\n        } else if (val === \"schep(s)\") {\n          data.cell.styles.fillColor = [254, 240, 138];\n        } else if (val === \"✓\") {\n          data.cell.styles.fillColor = [144, 238, 144];\n        } else if (val === \"\" && colKey !== \"Naam\") {\n          const naam = data.row.raw[\"Naam\"].toLowerCase();\n          const [dagLabel, shiftStr] = colKey.split(\" \");\n          const shift = parseInt(shiftStr);\n          const dagMap = {\n            ma: \"maandag\", di: \"dinsdag\", wo: \"woensdag\",\n            do: \"donderdag\", vr: \"vrijdag\", za: \"zaterdag\", zo: \"zondag\"\n          };\n          const dag = Object.entries(dagMap).find(([k]) => dagLabel.toLowerCase().startsWith(k))?.[1];\n          if (naam && dag && beschikbaarheid?.[naam]?.[dag]?.[shift]) {\n            data.cell.styles.fillColor = [144, 238, 144]; // lichtgroen\n          }\n        }\n      },\n      columns: tableColumn.map(key => ({ header: key, dataKey: key, halign: key === 'Naam' ? 'left' : 'center' })),\n      body,\n      startY: 20,\n      styles: {\n        fontSize: 8,\n        halign: \"center\",\n        valign: \"middle\",\n        cellPadding: 2,\n        lineWidth: 0.1,\n        lineColor: [0, 0, 0],},\n      headStyles: {\n        fillColor: [41, 128, 185],\n        textColor: [255, 255, 255],\n        fontStyle: \"bold\",\n      },\n      didDrawCell: function (data) {\n        const val = (typeof data.cell.text === \"string\" ? data.cell.text : Array.isArray(data.cell.text) ? data.cell.text.join(\" \") : \"\").toLowerCase().trim();\n\n        if (val === \"bereider\") {\n          data.cell.styles.fillColor = [30, 58, 138];\n          data.cell.styles.textColor = [255, 255, 255];\n        } else if (val === \"bereider(s)\") {\n          data.cell.styles.fillColor = [96, 165, 250];\n        } else if (val === \"prep\") {\n          data.cell.styles.fillColor = [191, 219, 254];\n        } else if (val === \"prep(s)\") {\n          data.cell.styles.fillColor = [219, 234, 254];\n        } else if (val === \"schep\") {\n          data.cell.styles.fillColor = [250, 204, 21];\n        } else if (val === \"schep(s)\") {\n          data.cell.styles.fillColor = [254, 240, 138];\n        }\n      }\n    });\n\n    const eindY = doc.lastAutoTable.finalY + 20;\n    doc.setFontSize(8);\n    \n\n    const loonkostenPerUur = { 16: 6.5, 17: 7, 18: 8, 19: 9, 20: 10, 21: 11, 22: 12, 23: 13, 24: 14, 25: 15 };\n    const loonkostenPerDag = {};\n    const shiftTelling = {};\n    \n\n    medewerkers.forEach((m) => {\n      const uurloon = parseFloat((loonkostenPerUur[m.leeftijd] ?? 15).toFixed(2));\n      dagen.forEach((dag) => {\n        let dagTotaal = loonkostenPerDag[dag] || 0;\n        shiftTelling[dag] = shiftTelling[dag] || { schepper: 0, ijsbereider: 0, ijsvoorbereider: 0 };\n\n        shifts.forEach((shift) => {\n          const entry = planning[m.naam]?.[dag]?.[shift];\n          if (entry) {\n            const uren = entry.soort === \"standby\" ? 4 : 6;\n            dagTotaal += uren * uurloon;\n            if (shiftTelling[dag][entry.functie] !== undefined) {\n              shiftTelling[dag][entry.functie]++;\n            }\n          }\n        });\n\n        loonkostenPerDag[dag] = dagTotaal;\n      });\n    });\n\n    const startY = doc.lastAutoTable.finalY + 35;\n    autoTable(doc, {\n      head: [[\"Dag\"].concat(dagen.flatMap(d => shifts.map(s => `${d} shift ${s}`)))],\n      body: [\n        [\"Loonkosten\"].concat(dagen.flatMap(d => shifts.map(s => `€ ${(() => {\n          let totaal = 0;\n          medewerkers.forEach((m) => {\n            const entry = planning[m.naam]?.[d]?.[s];\n            if (entry) {\n              const uren = entry.soort === \"standby\" ? 4 : 6;\n              const loonkostenPerUur = { 16: 6.5, 17: 7, 18: 8, 19: 9, 20: 10, 21: 11, 22: 12, 23: 13, 24: 14, 25: 15 };\n              const leeftijd = typeof m.leeftijd === 'number' ? m.leeftijd : 18;\n              const uurloon = loonkostenPerUur[leeftijd] ?? 15;\n              totaal += uren * uurloon;\n            }\n          });\n          return totaal.toFixed(2);\n        })()}`))),\n        [\"Bereiders\"].concat(dagen.flatMap(d => shifts.map(s => medewerkers.filter(m => planning[m.naam]?.[d]?.[s]?.functie === \"ijsbereider\").length))),\n        [\"Voorbereiders\"].concat(dagen.flatMap(d => shifts.map(s => medewerkers.filter(m => planning[m.naam]?.[d]?.[s]?.functie === \"ijsvoorbereider\").length))),\n        [\"Scheppers\"].concat(dagen.flatMap(d => shifts.map(s => medewerkers.filter(m => planning[m.naam]?.[d]?.[s]?.functie === \"schepper\").length)))\n      ],\n      startY,\n      styles: {\n        fontSize: 8,\n        halign: 'center',\n        valign: 'middle',\n        cellPadding: 2,\n        lineWidth: 0.1,\n        lineColor: [0, 0, 0]\n      },\n      headStyles: { fillColor: [100, 149, 237], textColor: 255 },\n      columnStyles: { 0: { fontStyle: 'bold', halign: 'left' } }\n    });\n\n    doc.save(\"planning_export.pdf\");\n  };\n\n  return (\n    <div className=\"p-4 bg-gray-100\">\n      <div className=\"text-right text-lg font-bold mb-2\">\n        Totale loonkosten worden hier getoond via App.jsx\n      </div>\n        <div className=\"text-right text-lg font-bold mb-2\">\n          Totale loonkosten: €{totaleLoonkosten.toFixed(2)}\n        </div>\n      \n      <div className=\"overflow-x-auto mb-4\">\n  <table className=\"text-xs border-collapse w-full bg-white shadow\">\n  <thead>\n    <tr>\n      <th className=\"border px-2 py-1\">Type</th>\n      {dagen.map((dag) => (\n        shifts.map((shift) => (\n          <th key={`${dag}-${shift}`} className=\"border px-2 py-1 text-center\">\n            {dagMap[dag]} shift {shift}\n          </th>\n        ))\n      ))}\n    </tr>\n  </thead>\n  <tbody>\n    {['Bereiders', 'Voorbereiders', 'Scheppers', 'Kosten'].map((type) => (\n      <tr key={type}>\n        <td className=\"border px-2 py-1 font-semibold\">{type}</td>\n        {dagen.map((dag) => (\n          shifts.map((shift) => {\n            let value = 0;\n            if (type === 'Kosten') {\n              value = medewerkers.reduce((totaal, m) => {\n                const entry = planning[m.naam]?.[dag]?.[shift];\n                if (!entry) return totaal;\n                const uren = entry.soort === 'standby' ? 4 : 6;\n                const loonkostenPerUur = { 16: 6.5, 17: 7, 18: 8, 19: 9, 20: 10, 21: 11, 22: 12, 23: 13, 24: 14, 25: 15 };\n                const leeftijd = typeof m.leeftijd === 'number' ? m.leeftijd : 18;\n                const uurloon = loonkostenPerUur[leeftijd] ?? 15;\n                return totaal + uren * uurloon;\n              }, 0);\n            } else {\n              const functieMap = {\n                'Bereiders': 'ijsbereider',\n                'Voorbereiders': 'ijsvoorbereider',\n                'Scheppers': 'schepper'\n              };\n              const functie = functieMap[type];\n              value = medewerkers.filter(m => planning[m.naam]?.[dag]?.[shift]?.functie === functie).length;\n            }\n            return (\n              <td key={`${type}-${dag}-${shift}`} className=\"border px-2 py-1 text-center\">\n                {type === 'Kosten' ? `€ ${Math.round(value)}` : value}\n              </td>\n            );\n          })\n        ))}\n      </tr>\n    ))}\n  </tbody>\n</table>\n</div>\n      <div className=\"flex gap-2 items-center mb-4\">\n      {importeerBeschikbaarheidKnop(setLocalBeschikbaarheid, setMedewerkers)}\n        <button onClick={exportToPDF} className=\"bg-red-600 text-white px-4 py-2 rounded shadow\">\n          Exporteer naar PDF\n        </button>\n      </div>\n\n      {medewerkers.length === 0 && (\n        <p className=\"text-gray-600\">Nog geen medewerkers geladen. Importeer beschikbaarheid om te starten.</p>\n      )}\n\n      {medewerkers.length > 0 && (\n        <table className=\"table-fixed border w-full bg-white text-xs font-sans\">\n          <thead>\n            <tr>\n            <th className=\"border px-4 py-2 text-left w-60\">Naam</th>\n              {dagen.map((dag) =>\n                shifts.map((shift) => (\n                  <th key={`${dag}-${shift}`} className=\"border px-2 py-1 text-center\">\n                    {dag} {shift}\n                  </th>\n                ))\n              )}\n            </tr>\n          </thead>\n          <tbody>\n          {medewerkers.map((m) => (\n  <tr key={m.naam}>\n{(() => {\n  const count = shiftCountPerMedewerker[m.naam] || 0;\n  const max = m.maxShifts ?? \"?\";\n  const leeftijd = m.leeftijd ?? \"?\";\n  const bgClass =\n    count > max ? \"bg-red-200\" :\n    count < max ? \"bg-yellow-200\" :\n    \"\";\n\n  return (\n    <td\n      className={`border px-4 py-2 text-left whitespace-nowrap w-60 font-bold ${bgClass}`}\n      title={m.opmerking || \"\"}>\n      {m.naam.split(\" \").map((part, i) => i === 0 ? part : part.charAt(0).toUpperCase() + part.slice(1)).join(\" \")} [{leeftijd}] ({count}/{max})\n    </td>\n      \n  );\n})()}\n\n    {dagen.map((dag) =>\n      shifts.map((shift) => {\n        const naamKey = m.naam?.toLowerCase();\n        const entry = planning[m.naam]?.[dag]?.[shift];\n        const beschikbaar = beschikbaarheid?.[naamKey]?.[dagMap[dag]]?.[shift];\n\n        let text = \"\";\n        let bgColor = \"#ffffff\"; // standaard wit\n\n        if (entry) {\n          switch (entry.functie) {\n            case \"schepper\":\n              text = entry.soort === \"vast\" ? \"schep\" : \"schep(s)\";\n              bgColor = entry.soort === \"vast\" ? \"#facc15\" : \"#fef08a\";\n              break;\n            case \"ijsbereider\":\n              text = entry.soort === \"vast\" ? \"bereider\" : \"bereider(s)\";\n              bgColor = entry.soort === \"vast\" ? \"#1e3a8a\" : \"#60a5fa\";\n              break;\n            case \"ijsvoorbereider\":\n              text = entry.soort === \"vast\" ? \"prep\" : \"prep(s)\";\n              bgColor = entry.soort === \"vast\" ? \"#bfdbfe\" : \"#dbeafe\";\n              break;\n            default:\n              text = `${entry.functie} (${entry.soort})`;\n              break;\n          }\n        } else if (beschikbaar) {\n          // Geen planning maar wél beschikbaarheid → lichtgroen\n          bgColor = \"#bbf7d0\";\n          text = \"✓\";\n        }\n\n        return (\n          <td\n            key={`${m.naam}-${dag}-${shift}`}\n            title={`Shift ${shift} op ${dagMap[dag]}`}\n  className=\"border text-center cursor-pointer\"\n  onClick={() => {\n    const entry = planning[m.naam]?.[dag]?.[shift];\n    if (entry) {\n      setPlanning((prev) => {\n        const nieuw = { ...prev };\n        delete nieuw[m.naam][dag][shift];\n        if (Object.keys(nieuw[m.naam][dag]).length === 0) delete nieuw[m.naam][dag];\n        if (Object.keys(nieuw[m.naam]).length === 0) delete nieuw[m.naam];\n        localStorage.setItem(\"planning\", JSON.stringify(nieuw));\n        return nieuw;\n      });\n    } else {\n      setPopup({ medewerker: m.naam, dag, shift });\n    }\n  }}\n  style={{ backgroundColor: bgColor, color: entry?.functie === \"ijsbereider\" && entry?.soort === \"vast\" ? \"white\" : undefined }}\n>\n  {text}\n</td>\n\n        );\n      })\n    )}\n  </tr>\n\n  \n))}\n\n\n\n          </tbody>\n        </table>\n      )}\n\n      {popup && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n          <div className=\"bg-white p-4 rounded shadow-md w-[300px]\">\n            <h2 className=\"font-bold mb-4 text-center\">\n              {popup.medewerker} - {popup.dag} Shift {popup.shift}\n            </h2>\n            <div className=\"grid grid-cols-2 gap-2\">\n              {[\"ijsbereider\", \"ijsvoorbereider\", \"schepper\"].map((functie) =>\n                [\"vast\", \"standby\"].map((soort) => {\n                  let kleur = \"\";\n                  let label = \"\";\n\n                  if (functie === \"ijsbereider\") {\n                    kleur = soort === \"vast\" ? \"bg-blue-900 text-white\" : \"bg-blue-300 text-black\";\n                    label = soort === \"vast\" ? \"bereider\" : \"⏱️ bereider\";\n                  } else if (functie === \"ijsvoorbereider\") {\n                    kleur = soort === \"vast\" ? \"bg-blue-600 text-white\" : \"bg-blue-200 text-black\";\n                    label = soort === \"vast\" ? \"prep\" : \"⏱️ prep\";\n                  } else if (functie === \"schepper\") {\n                    kleur = soort === \"vast\" ? \"bg-yellow-500 text-black\" : \"bg-yellow-200 text-black\";\n                    label = soort === \"vast\" ? \"schep\" : \"⏱️ schep\";\n                  }\n\n                  return (\n                    <button\n                      key={`${functie}-${soort}`}\n                      className={`${kleur} px-3 py-2 rounded font-medium text-sm`}\n                      onClick={() => updatePlanning(functie, soort)}\n                    >\n                      {label}\n                    </button>\n                  );\n                })\n              )}\n            </div>\n            <div className=\"mt-4 text-center\">\n              <button onClick={() => setPopup(null)} className=\"text-gray-600 text-sm underline\">\n                Annuleren\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}