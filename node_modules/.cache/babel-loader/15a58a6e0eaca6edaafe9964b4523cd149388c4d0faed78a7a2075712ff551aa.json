{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { dagMap } from \"./dagen\";\nconst dagen = [\"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\", \"zo\"];\nconst shifts = [1, 2];\nconst buildPdfBody = (medewerkers, planning, beschikbaarheid, shiftCountPerMedewerker) => {\n  const body = [];\n  medewerkers.forEach(m => {\n    var _m$maxShifts, _m$leeftijd;\n    const naam = m.naam;\n    const count = shiftCountPerMedewerker[naam] || 0;\n    const max = (_m$maxShifts = m.maxShifts) !== null && _m$maxShifts !== void 0 ? _m$maxShifts : \"?\";\n    const leeftijd = (_m$leeftijd = m.leeftijd) !== null && _m$leeftijd !== void 0 ? _m$leeftijd : \"?\";\n    const row = {\n      Naam: `${naam.split(\" \").map((part, i) => i === 0 ? part : part.charAt(0).toUpperCase() + part.slice(1)).join(\" \")} [${leeftijd}] (${count}/${max})`\n    };\n    dagen.forEach(dag => {\n      shifts.forEach(shift => {\n        var _planning$naam, _planning$naam$dag, _beschikbaarheid$naam, _beschikbaarheid$naam2;\n        const key = `${dag} ${shift}`;\n        const entry = (_planning$naam = planning[naam]) === null || _planning$naam === void 0 ? void 0 : (_planning$naam$dag = _planning$naam[dag]) === null || _planning$naam$dag === void 0 ? void 0 : _planning$naam$dag[shift];\n        const naamKey = naam === null || naam === void 0 ? void 0 : naam.toLowerCase();\n        const beschikbaar = beschikbaarheid === null || beschikbaarheid === void 0 ? void 0 : (_beschikbaarheid$naam = beschikbaarheid[naamKey]) === null || _beschikbaarheid$naam === void 0 ? void 0 : (_beschikbaarheid$naam2 = _beschikbaarheid$naam[dagMap[dag]]) === null || _beschikbaarheid$naam2 === void 0 ? void 0 : _beschikbaarheid$naam2[shift];\n        if (entry) {\n          var _labelMap$entry$funct;\n          const labelMap = {\n            schepper: {\n              vast: \"schep\",\n              standby: \"schep(s)\",\n              laat: \"schep(l)\"\n            },\n            ijsbereider: {\n              vast: \"bereider\",\n              standby: \"bereider(s)\",\n              laat: \"bereider(l)\"\n            },\n            ijsvoorbereider: {\n              vast: \"prep\",\n              standby: \"prep(s)\",\n              laat: \"prep(l)\"\n            }\n          };\n          row[key] = ((_labelMap$entry$funct = labelMap[entry.functie]) === null || _labelMap$entry$funct === void 0 ? void 0 : _labelMap$entry$funct[entry.soort]) || `${entry.functie} (${entry.soort})`;\n        } else if (beschikbaar) {\n          row[key] = \"✓\";\n        } else {\n          row[key] = \"\";\n        }\n      });\n    });\n    body.push(row);\n  });\n  return body;\n};\nexport const exportToPDF = ({\n  medewerkers,\n  planning,\n  beschikbaarheid,\n  loonkostenPerUur,\n  shiftCountPerMedewerker\n}) => {\n  var _doc$lastAutoTable$fi, _doc$lastAutoTable;\n  const doc = new jsPDF({\n    orientation: \"landscape\",\n    format: \"a4\"\n  });\n  const vandaag = new Date();\n  const datumStr = vandaag.toLocaleDateString(\"nl-NL\");\n  const weekNr = getWeekNumber(vandaag);\n  doc.setFontSize(16);\n  doc.text(`Beschikbaarheid ijssalon Vincenzo – versie (${datumStr})`, 14, 12);\n  const pageWidth = doc.internal.pageSize.getWidth();\n  const margin = 20;\n  const tableColumn = [\"Naam\", ...dagen.flatMap(dag => shifts.map(shift => `${dag} ${shift}`))];\n  const body = buildPdfBody(medewerkers, planning, beschikbaarheid, shiftCountPerMedewerker);\n  autoTable(doc, {\n    startY: 20,\n    tableWidth: pageWidth - margin,\n    columns: tableColumn.map(key => ({\n      header: key,\n      dataKey: key\n    })),\n    body,\n    styles: {\n      fontSize: 8,\n      cellPadding: 2,\n      halign: \"center\",\n      valign: \"middle\",\n      lineWidth: 0.1,\n      lineColor: [0, 0, 0]\n    },\n    headStyles: {\n      fillColor: [41, 128, 185],\n      textColor: [255, 255, 255],\n      fontStyle: \"bold\"\n    },\n    columnStyles: {\n      Naam: {\n        halign: \"left\",\n        cellWidth: 60\n      }\n    },\n    didParseCell(data) {\n      const colKey = data.column.dataKey;\n      const rawText = typeof data.cell.raw === \"string\" ? data.cell.raw : \"\";\n      const val = rawText.toLowerCase().trim();\n      const kleuren = {\n        \"bereider\": [30, 58, 138],\n        \"bereider(s)\": [96, 165, 250],\n        \"bereider(l)\": [167, 139, 250],\n        \"prep\": [191, 219, 254],\n        \"prep(s)\": [219, 234, 254],\n        \"prep(l)\": [196, 181, 253],\n        \"schep\": [250, 204, 21],\n        \"schep(s)\": [254, 240, 138],\n        \"schep(l)\": [243, 244, 246],\n        \"✓\": [144, 238, 144]\n      };\n      if (kleuren[val]) {\n        data.cell.styles.fillColor = kleuren[val];\n        const donkereWaarden = [\"bereider\", \"bereider(l)\"];\n        if (donkereWaarden.includes(val)) {\n          data.cell.styles.textColor = [255, 255, 255];\n        } else if (val === \"✓\") {\n          data.cell.styles.textColor = kleuren[val];\n        } else {\n          data.cell.styles.textColor = [0, 0, 0];\n        }\n      }\n      if (colKey === \"Naam\") {\n        const match = rawText.match(/\\((\\d+)[\\/](\\d+)\\)/);\n        if (match) {\n          const count = parseInt(match[1]);\n          const max = parseInt(match[2]);\n          if (count > max) {\n            data.cell.styles.fillColor = [254, 202, 202];\n          } else if (count < max) {\n            data.cell.styles.fillColor = [254, 243, 199];\n          }\n        }\n      }\n    }\n  });\n  const totaalLoonkosten = medewerkers.reduce((totaal, m) => {\n    var _loonkostenPerUur$m$l;\n    const uurloon = (_loonkostenPerUur$m$l = loonkostenPerUur[m.leeftijd]) !== null && _loonkostenPerUur$m$l !== void 0 ? _loonkostenPerUur$m$l : 15;\n    return totaal + dagen.reduce((dagTotaal, dag) => {\n      return dagTotaal + shifts.reduce((shiftTotaal, shift) => {\n        var _planning$m$naam, _planning$m$naam$dag;\n        const entry = (_planning$m$naam = planning[m.naam]) === null || _planning$m$naam === void 0 ? void 0 : (_planning$m$naam$dag = _planning$m$naam[dag]) === null || _planning$m$naam$dag === void 0 ? void 0 : _planning$m$naam$dag[shift];\n        if (!entry) return shiftTotaal;\n        let uren = 6;\n        if (entry.soort === \"standby\" || entry.soort === \"laat\") uren = 4;\n        return shiftTotaal + uren * uurloon;\n      }, 0);\n    }, 0);\n  }, 0);\n  const loonkostenTekst = `Totale loonkosten deze week: €${totaalLoonkosten.toFixed(2)}`;\n  const yNaHoofdtabel = ((_doc$lastAutoTable$fi = (_doc$lastAutoTable = doc.lastAutoTable) === null || _doc$lastAutoTable === void 0 ? void 0 : _doc$lastAutoTable.finalY) !== null && _doc$lastAutoTable$fi !== void 0 ? _doc$lastAutoTable$fi : 30) + 10;\n  doc.setFontSize(12);\n  doc.setTextColor(40);\n  doc.setFont(undefined, \"bold\");\n  doc.text(loonkostenTekst, 14, yNaHoofdtabel);\n  addLoonkostenTabel(doc, medewerkers, planning, loonkostenPerUur);\n  let laatsteY = addLegenda(doc);\n  laatsteY = addOpmerkingenOnderLegenda(doc, medewerkers, beschikbaarheid, laatsteY);\n  if (laatsteY > doc.internal.pageSize.getHeight() - 20) {\n    doc.addPage();\n    laatsteY = 20;\n  }\n  const safeDatum = datumStr.replace(/-/g, '_');\n  doc.save(`planning_week_${weekNr}_${safeDatum}.pdf`);\n};\nfunction addLoonkostenTabel(doc, medewerkers, planning, loonkostenPerUur) {\n  var _doc$lastAutoTable$fi2, _doc$lastAutoTable2;\n  const kolommen = [\"Dag\", ...dagen.flatMap(dag => shifts.map(s => `${dag} shift ${s}`))];\n  const loonkostenPerShift = {};\n  const telling = {\n    ijsbereider: {},\n    ijsvoorbereider: {},\n    schepper: {}\n  };\n  dagen.forEach(dag => {\n    shifts.forEach(shift => {\n      const key = `${dag} shift ${shift}`;\n      loonkostenPerShift[key] = 0;\n      telling.ijsbereider[key] = 0;\n      telling.ijsvoorbereider[key] = 0;\n      telling.schepper[key] = 0;\n      medewerkers.forEach(m => {\n        var _planning$m$naam2, _planning$m$naam2$dag;\n        const entry = (_planning$m$naam2 = planning[m.naam]) === null || _planning$m$naam2 === void 0 ? void 0 : (_planning$m$naam2$dag = _planning$m$naam2[dag]) === null || _planning$m$naam2$dag === void 0 ? void 0 : _planning$m$naam2$dag[shift];\n        if (entry) {\n          var _loonkostenPerUur$m$l2;\n          let uren = 6;\n          if (entry.soort === \"standby\") uren = 4;else if (entry.soort === \"laat\") uren = 4;\n          const uurloon = (_loonkostenPerUur$m$l2 = loonkostenPerUur[m.leeftijd]) !== null && _loonkostenPerUur$m$l2 !== void 0 ? _loonkostenPerUur$m$l2 : 15;\n          loonkostenPerShift[key] += uren * uurloon;\n          if (telling[entry.functie]) telling[entry.functie][key]++;\n        }\n      });\n    });\n  });\n  const body = [[\"Loonkosten\", ...kolommen.slice(1).map(key => `€ ${Math.round(loonkostenPerShift[key] || 0)}`)], [\"Bereiders\", ...kolommen.slice(1).map(key => telling.ijsbereider[key] || 0)], [\"Voorbereiders\", ...kolommen.slice(1).map(key => telling.ijsvoorbereider[key] || 0)], [\"Scheppers\", ...kolommen.slice(1).map(key => telling.schepper[key] || 0)], [\"Totaal\", ...kolommen.slice(1).map(key => {\n    const a = telling.ijsbereider[key] || 0;\n    const b = telling.ijsvoorbereider[key] || 0;\n    const c = telling.schepper[key] || 0;\n    return a + b + c;\n  })]];\n  const loonkostenTekst = `Totale loonkosten deze week: €${totaalLoonkosten.toFixed(2)}`;\n  doc.setFontSize(12);\n  doc.setTextColor(40);\n  doc.setFont(undefined, \"bold\");\n  const yNaHoofdtabel = ((_doc$lastAutoTable$fi2 = (_doc$lastAutoTable2 = doc.lastAutoTable) === null || _doc$lastAutoTable2 === void 0 ? void 0 : _doc$lastAutoTable2.finalY) !== null && _doc$lastAutoTable$fi2 !== void 0 ? _doc$lastAutoTable$fi2 : 30) + 10;\n  doc.text(loonkostenTekst, 14, yNaHoofdtabel);\n  const startY = doc.lastAutoTable.finalY + 20;\n  autoTable(doc, {\n    startY,\n    head: [kolommen],\n    body,\n    styles: {\n      fontSize: 8,\n      halign: 'center',\n      valign: 'middle',\n      cellPadding: 2,\n      lineWidth: 0.1,\n      lineColor: [0, 0, 0]\n    },\n    headStyles: {\n      fillColor: [100, 149, 237],\n      textColor: 255\n    },\n    columnStyles: {\n      0: {\n        fontStyle: 'bold',\n        halign: 'left'\n      }\n    }\n  });\n}\nfunction addLegenda(doc) {\n  var _doc$lastAutoTable3;\n  const functies = [[{\n    kleur: [30, 58, 138],\n    label: \"Bereider\"\n  }, {\n    kleur: [96, 165, 250],\n    label: \"Bereider(s)\"\n  }, {\n    kleur: [167, 139, 250],\n    label: \"Bereider(l)\"\n  }], [{\n    kleur: [191, 219, 254],\n    label: \"Prep\"\n  }, {\n    kleur: [219, 234, 254],\n    label: \"Prep(s)\"\n  }, {\n    kleur: [196, 181, 253],\n    label: \"Prep(l)\"\n  }], [{\n    kleur: [250, 204, 21],\n    label: \"Schep\"\n  }, {\n    kleur: [254, 240, 138],\n    label: \"Schep(s)\"\n  }, {\n    kleur: [243, 244, 246],\n    label: \"Schep(l)\"\n  }]];\n  const beschikbaar = {\n    kleur: [144, 238, 144],\n    label: \"Beschikbaar\"\n  };\n  const kolombreedte = 70;\n  const rijenPerKolom = functies[0].length;\n  const totaalHoogte = rijenPerKolom * 7 + 10 + 10; // legenda + kopje + beschikbaar\n\n  let startY = ((_doc$lastAutoTable3 = doc.lastAutoTable) === null || _doc$lastAutoTable3 === void 0 ? void 0 : _doc$lastAutoTable3.finalY) + 10 || 160;\n\n  // ✅ Als niet alles past, voeg een pagina toe\n  const ruimteNodig = startY + totaalHoogte;\n  if (ruimteNodig > doc.internal.pageSize.getHeight() - 20) {\n    doc.addPage();\n    startY = 20;\n  }\n  doc.setFontSize(8);\n  doc.text(\"Legenda:\", 40, startY);\n  const kolomX = [40, 40 + kolombreedte, 40 + kolombreedte * 2];\n  for (let i = 0; i < 3; i++) {\n    functies[i].forEach((item, j) => {\n      const x = kolomX[i];\n      const y = startY + 10 + j * 7;\n      doc.setFillColor(...item.kleur);\n      doc.rect(x, y - 5, 5, 5, \"F\");\n      doc.text(item.label, x + 8, y);\n    });\n  }\n  const beschikbaarY = startY + 10 + rijenPerKolom * 7 + 5;\n  doc.setFillColor(...beschikbaar.kleur);\n  doc.rect(40, beschikbaarY - 5, 5, 5, \"F\");\n  doc.text(beschikbaar.label, 48, beschikbaarY);\n  return beschikbaarY + 10; // voor volgende blok\n}\nfunction getWeekNumber(date) {\n  const temp = new Date(date.getTime());\n  temp.setHours(0, 0, 0, 0);\n  temp.setDate(temp.getDate() + 3 - (temp.getDay() + 6) % 7);\n  const week1 = new Date(temp.getFullYear(), 0, 4);\n  return 1 + Math.round(((temp.getTime() - week1.getTime()) / 86400000 - 3 + (week1.getDay() + 6) % 7) / 7);\n}\nfunction addOpmerkingenOnderLegenda(doc, medewerkers, beschikbaarheid, startY) {\n  const opmerkingen = medewerkers.map(m => {\n    var _beschikbaarheid$naam3, _beschikbaarheid$naam4;\n    const naamKey = m.naam.toLowerCase();\n    const opmerking = beschikbaarheid === null || beschikbaarheid === void 0 ? void 0 : (_beschikbaarheid$naam3 = beschikbaarheid[naamKey]) === null || _beschikbaarheid$naam3 === void 0 ? void 0 : (_beschikbaarheid$naam4 = _beschikbaarheid$naam3.opmerking) === null || _beschikbaarheid$naam4 === void 0 ? void 0 : _beschikbaarheid$naam4.trim();\n    if (opmerking) {\n      return `• ${m.naam}: ${opmerking}`;\n    }\n    return null;\n  }).filter(Boolean);\n  if (opmerkingen.length === 0) return startY;\n  const ruimteNodig = opmerkingen.length * 6 + 16;\n  if (startY + ruimteNodig > doc.internal.pageSize.getHeight() - 20) {\n    doc.addPage();\n    startY = 20;\n  }\n\n  // 🧼 Styling\n  const margeLinks = 20;\n  const regelhoogte = 6;\n  doc.setFontSize(9);\n  doc.setTextColor(33, 37, 41); // donkergrijs\n  doc.setFont(undefined, \"bold\");\n  doc.text(\"Opmerkingen:\", margeLinks, startY + 10);\n  doc.setFont(undefined, \"normal\");\n  opmerkingen.forEach((regel, i) => {\n    doc.text(regel, margeLinks + 4, startY + 16 + i * regelhoogte);\n  });\n  return startY + ruimteNodig;\n}","map":{"version":3,"names":["jsPDF","autoTable","dagMap","dagen","shifts","buildPdfBody","medewerkers","planning","beschikbaarheid","shiftCountPerMedewerker","body","forEach","m","_m$maxShifts","_m$leeftijd","naam","count","max","maxShifts","leeftijd","row","Naam","split","map","part","i","charAt","toUpperCase","slice","join","dag","shift","_planning$naam","_planning$naam$dag","_beschikbaarheid$naam","_beschikbaarheid$naam2","key","entry","naamKey","toLowerCase","beschikbaar","_labelMap$entry$funct","labelMap","schepper","vast","standby","laat","ijsbereider","ijsvoorbereider","functie","soort","push","exportToPDF","loonkostenPerUur","_doc$lastAutoTable$fi","_doc$lastAutoTable","doc","orientation","format","vandaag","Date","datumStr","toLocaleDateString","weekNr","getWeekNumber","setFontSize","text","pageWidth","internal","pageSize","getWidth","margin","tableColumn","flatMap","startY","tableWidth","columns","header","dataKey","styles","fontSize","cellPadding","halign","valign","lineWidth","lineColor","headStyles","fillColor","textColor","fontStyle","columnStyles","cellWidth","didParseCell","data","colKey","column","rawText","cell","raw","val","trim","kleuren","donkereWaarden","includes","match","parseInt","totaalLoonkosten","reduce","totaal","_loonkostenPerUur$m$l","uurloon","dagTotaal","shiftTotaal","_planning$m$naam","_planning$m$naam$dag","uren","loonkostenTekst","toFixed","yNaHoofdtabel","lastAutoTable","finalY","setTextColor","setFont","undefined","addLoonkostenTabel","laatsteY","addLegenda","addOpmerkingenOnderLegenda","getHeight","addPage","safeDatum","replace","save","_doc$lastAutoTable$fi2","_doc$lastAutoTable2","kolommen","s","loonkostenPerShift","telling","_planning$m$naam2","_planning$m$naam2$dag","_loonkostenPerUur$m$l2","Math","round","a","b","c","head","_doc$lastAutoTable3","functies","kleur","label","kolombreedte","rijenPerKolom","length","totaalHoogte","ruimteNodig","kolomX","item","j","x","y","setFillColor","rect","beschikbaarY","date","temp","getTime","setHours","setDate","getDate","getDay","week1","getFullYear","opmerkingen","_beschikbaarheid$naam3","_beschikbaarheid$naam4","opmerking","filter","Boolean","margeLinks","regelhoogte","regel"],"sources":["C:/Users/van den Akker/planner/planner-app/src/utils/exportToPDF.js"],"sourcesContent":["import jsPDF from \"jspdf\";\r\nimport autoTable from \"jspdf-autotable\";\r\nimport { dagMap } from \"./dagen\";\r\n\r\nconst dagen = [\"ma\", \"di\", \"wo\", \"do\", \"vr\", \"za\", \"zo\"];\r\nconst shifts = [1, 2];\r\n\r\nconst buildPdfBody = (medewerkers, planning, beschikbaarheid, shiftCountPerMedewerker) => {\r\n  const body = [];\r\n\r\n  medewerkers.forEach((m) => {\r\n    const naam = m.naam;\r\n    const count = shiftCountPerMedewerker[naam] || 0;\r\n    const max = m.maxShifts ?? \"?\";\r\n    const leeftijd = m.leeftijd ?? \"?\";\r\n\r\n    const row = {\r\n      Naam: `${naam.split(\" \").map((part, i) =>\r\n        i === 0 ? part : part.charAt(0).toUpperCase() + part.slice(1)\r\n      ).join(\" \")} [${leeftijd}] (${count}/${max})`\r\n    };\r\n\r\n    dagen.forEach((dag) => {\r\n      shifts.forEach((shift) => {\r\n        const key = `${dag} ${shift}`;\r\n        const entry = planning[naam]?.[dag]?.[shift];\r\n        const naamKey = naam?.toLowerCase();\r\n        const beschikbaar = beschikbaarheid?.[naamKey]?.[dagMap[dag]]?.[shift];\r\n\r\n        if (entry) {\r\n          const labelMap = {\r\n            schepper: { vast: \"schep\", standby: \"schep(s)\", laat: \"schep(l)\" },\r\n            ijsbereider: { vast: \"bereider\", standby: \"bereider(s)\", laat: \"bereider(l)\" },\r\n            ijsvoorbereider: { vast: \"prep\", standby: \"prep(s)\", laat: \"prep(l)\" },\r\n          };\r\n          row[key] = labelMap[entry.functie]?.[entry.soort] || `${entry.functie} (${entry.soort})`;\r\n        } else if (beschikbaar) {\r\n          row[key] = \"✓\";\r\n        } else {\r\n          row[key] = \"\";\r\n        }\r\n      });\r\n    });\r\n\r\n    body.push(row);\r\n  });\r\n\r\n  return body;\r\n};export const exportToPDF = ({ medewerkers, planning, beschikbaarheid, loonkostenPerUur, shiftCountPerMedewerker }) => {\r\n  const doc = new jsPDF({ orientation: \"landscape\", format: \"a4\" });\r\n  const vandaag = new Date();\r\n  const datumStr = vandaag.toLocaleDateString(\"nl-NL\");\r\n  const weekNr = getWeekNumber(vandaag);\r\n  doc.setFontSize(16);\r\n  doc.text(`Beschikbaarheid ijssalon Vincenzo – versie (${datumStr})`, 14, 12);\r\n  const pageWidth = doc.internal.pageSize.getWidth();\r\n  const margin = 20;\r\n\r\n  const tableColumn = [\"Naam\", ...dagen.flatMap((dag) => shifts.map((shift) => `${dag} ${shift}`))];\r\n  const body = buildPdfBody(medewerkers, planning, beschikbaarheid, shiftCountPerMedewerker);\r\n\r\n  autoTable(doc, {\r\n    startY: 20,\r\n    tableWidth: pageWidth - margin,\r\n    columns: tableColumn.map((key) => ({ header: key, dataKey: key })),\r\n    body,\r\n    styles: {\r\n      fontSize: 8,\r\n      cellPadding: 2,\r\n      halign: \"center\",\r\n      valign: \"middle\",\r\n      lineWidth: 0.1,\r\n      lineColor: [0, 0, 0],\r\n    },\r\n    headStyles: {\r\n      fillColor: [41, 128, 185],\r\n      textColor: [255, 255, 255],\r\n      fontStyle: \"bold\",\r\n    },\r\n    columnStyles: {\r\n      Naam: { halign: \"left\", cellWidth: 60 },\r\n    },\r\n    didParseCell(data) {\r\n      const colKey = data.column.dataKey;\r\n      const rawText = typeof data.cell.raw === \"string\" ? data.cell.raw : \"\";\r\n      const val = rawText.toLowerCase().trim();\r\n\r\n      const kleuren = {\r\n        \"bereider\": [30, 58, 138],\r\n        \"bereider(s)\": [96, 165, 250],\r\n        \"bereider(l)\": [167, 139, 250],\r\n        \"prep\": [191, 219, 254],\r\n        \"prep(s)\": [219, 234, 254],\r\n        \"prep(l)\": [196, 181, 253],\r\n        \"schep\": [250, 204, 21],\r\n        \"schep(s)\": [254, 240, 138],\r\n        \"schep(l)\": [243, 244, 246],\r\n        \"✓\": [144, 238, 144],\r\n      };\r\n\r\n      if (kleuren[val]) {\r\n        data.cell.styles.fillColor = kleuren[val];\r\n        const donkereWaarden = [\"bereider\", \"bereider(l)\"];\r\n        if (donkereWaarden.includes(val)) {\r\n          data.cell.styles.textColor = [255, 255, 255];\r\n        } else if (val === \"✓\") {\r\n          data.cell.styles.textColor = kleuren[val];\r\n        } else {\r\n          data.cell.styles.textColor = [0, 0, 0];\r\n        }\r\n      }\r\n\r\n      if (colKey === \"Naam\") {\r\n        const match = rawText.match(/\\((\\d+)[\\/](\\d+)\\)/);\r\n        if (match) {\r\n          const count = parseInt(match[1]);\r\n          const max = parseInt(match[2]);\r\n          if (count > max) {\r\n            data.cell.styles.fillColor = [254, 202, 202];\r\n          } else if (count < max) {\r\n            data.cell.styles.fillColor = [254, 243, 199];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const totaalLoonkosten = medewerkers.reduce((totaal, m) => {\r\n    const uurloon = loonkostenPerUur[m.leeftijd] ?? 15;\r\n    return totaal + dagen.reduce((dagTotaal, dag) => {\r\n      return dagTotaal + shifts.reduce((shiftTotaal, shift) => {\r\n        const entry = planning[m.naam]?.[dag]?.[shift];\r\n        if (!entry) return shiftTotaal;\r\n        let uren = 6;\r\n        if (entry.soort === \"standby\" || entry.soort === \"laat\") uren = 4;\r\n        return shiftTotaal + uren * uurloon;\r\n      }, 0);\r\n    }, 0);\r\n  }, 0);\r\n\r\n  const loonkostenTekst = `Totale loonkosten deze week: €${totaalLoonkosten.toFixed(2)}`;\r\n  const yNaHoofdtabel = (doc.lastAutoTable?.finalY ?? 30) + 10;\r\n  doc.setFontSize(12);\r\n  doc.setTextColor(40);\r\n  doc.setFont(undefined, \"bold\");\r\n  doc.text(loonkostenTekst, 14, yNaHoofdtabel);\r\n\r\n  addLoonkostenTabel(doc, medewerkers, planning, loonkostenPerUur);\r\n  let laatsteY = addLegenda(doc);\r\n  laatsteY = addOpmerkingenOnderLegenda(doc, medewerkers, beschikbaarheid, laatsteY);\r\n\r\n  if (laatsteY > doc.internal.pageSize.getHeight() - 20) {\r\n    doc.addPage();\r\n    laatsteY = 20;\r\n  }\r\n\r\n  const safeDatum = datumStr.replace(/-/g, '_');\r\n  doc.save(`planning_week_${weekNr}_${safeDatum}.pdf`);\r\n};\r\n\r\n\r\nfunction addLoonkostenTabel(doc, medewerkers, planning, loonkostenPerUur) {\r\n  const kolommen = [\"Dag\", ...dagen.flatMap(dag => shifts.map(s => `${dag} shift ${s}`))];\r\n\r\n  const loonkostenPerShift = {};\r\n  const telling = {\r\n    ijsbereider: {},\r\n    ijsvoorbereider: {},\r\n    schepper: {}\r\n  };\r\n\r\n  dagen.forEach(dag => {\r\n    shifts.forEach(shift => {\r\n      const key = `${dag} shift ${shift}`;\r\n      loonkostenPerShift[key] = 0;\r\n      telling.ijsbereider[key] = 0;\r\n      telling.ijsvoorbereider[key] = 0;\r\n      telling.schepper[key] = 0;\r\n\r\n      medewerkers.forEach(m => {\r\n        const entry = planning[m.naam]?.[dag]?.[shift];\r\n        if (entry) {\r\n            let uren = 6;\r\n            if (entry.soort === \"standby\") uren = 4;\r\n            else if (entry.soort === \"laat\") uren = 4;\r\n          const uurloon = loonkostenPerUur[m.leeftijd] ?? 15;\r\n          loonkostenPerShift[key] += uren * uurloon;\r\n          if (telling[entry.functie]) telling[entry.functie][key]++;\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  const body = [\r\n    [\"Loonkosten\", ...kolommen.slice(1).map(key => `€ ${Math.round(loonkostenPerShift[key] || 0)}`)],\r\n    [\"Bereiders\", ...kolommen.slice(1).map(key => telling.ijsbereider[key] || 0)],\r\n    [\"Voorbereiders\", ...kolommen.slice(1).map(key => telling.ijsvoorbereider[key] || 0)],\r\n    [\"Scheppers\", ...kolommen.slice(1).map(key => telling.schepper[key] || 0)],\r\n        [\"Totaal\", ...kolommen.slice(1).map(key => {\r\n      const a = telling.ijsbereider[key] || 0;\r\n      const b = telling.ijsvoorbereider[key] || 0;\r\n      const c = telling.schepper[key] || 0;\r\n      return a + b + c;\r\n    })],\r\n\r\n    \r\n  ];\r\n  const loonkostenTekst = `Totale loonkosten deze week: €${totaalLoonkosten.toFixed(2)}`;\r\n  doc.setFontSize(12);\r\n  doc.setTextColor(40);\r\n  doc.setFont(undefined, \"bold\");\r\n  const yNaHoofdtabel = (doc.lastAutoTable?.finalY ?? 30) + 10;\r\n  doc.text(loonkostenTekst, 14, yNaHoofdtabel);\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n  const startY = doc.lastAutoTable.finalY + 20;\r\n  autoTable(doc, {\r\n    startY,\r\n    head: [kolommen],\r\n    body,\r\n    styles: {\r\n      fontSize: 8,\r\n      halign: 'center',\r\n      valign: 'middle',\r\n      cellPadding: 2,\r\n      lineWidth: 0.1,\r\n      lineColor: [0, 0, 0],\r\n    },\r\n    headStyles: {\r\n      fillColor: [100, 149, 237],\r\n      textColor: 255,\r\n    },\r\n    columnStyles: { 0: { fontStyle: 'bold', halign: 'left' } },\r\n  });\r\n}\r\n\r\n\r\n\r\nfunction addLegenda(doc) {\r\n  const functies = [\r\n    [\r\n      { kleur: [30, 58, 138], label: \"Bereider\" },\r\n      { kleur: [96, 165, 250], label: \"Bereider(s)\" },\r\n      { kleur: [167, 139, 250], label: \"Bereider(l)\" },\r\n    ],\r\n    [\r\n      { kleur: [191, 219, 254], label: \"Prep\" },\r\n      { kleur: [219, 234, 254], label: \"Prep(s)\" },\r\n      { kleur: [196, 181, 253], label: \"Prep(l)\" },\r\n    ],\r\n    [\r\n      { kleur: [250, 204, 21], label: \"Schep\" },\r\n      { kleur: [254, 240, 138], label: \"Schep(s)\" },\r\n      { kleur: [243, 244, 246], label: \"Schep(l)\" },\r\n    ],\r\n  ];\r\n\r\n  const beschikbaar = { kleur: [144, 238, 144], label: \"Beschikbaar\" };\r\n\r\n  const kolombreedte = 70;\r\n  const rijenPerKolom = functies[0].length;\r\n  const totaalHoogte = rijenPerKolom * 7 + 10 + 10; // legenda + kopje + beschikbaar\r\n\r\n  let startY = doc.lastAutoTable?.finalY + 10 || 160;\r\n\r\n  // ✅ Als niet alles past, voeg een pagina toe\r\n  const ruimteNodig = startY + totaalHoogte;\r\n  if (ruimteNodig > doc.internal.pageSize.getHeight() - 20) {\r\n    doc.addPage();\r\n    startY = 20;\r\n  }\r\n\r\n  doc.setFontSize(8);\r\n  doc.text(\"Legenda:\", 40, startY);\r\n\r\n  const kolomX = [40, 40 + kolombreedte, 40 + kolombreedte * 2];\r\n\r\n  for (let i = 0; i < 3; i++) {\r\n    functies[i].forEach((item, j) => {\r\n      const x = kolomX[i];\r\n      const y = startY + 10 + j * 7;\r\n      doc.setFillColor(...item.kleur);\r\n      doc.rect(x, y - 5, 5, 5, \"F\");\r\n      doc.text(item.label, x + 8, y);\r\n    });\r\n  }\r\n\r\n  const beschikbaarY = startY + 10 + rijenPerKolom * 7 + 5;\r\n  doc.setFillColor(...beschikbaar.kleur);\r\n  doc.rect(40, beschikbaarY - 5, 5, 5, \"F\");\r\n  doc.text(beschikbaar.label, 48, beschikbaarY);\r\n\r\n  return beschikbaarY + 10; // voor volgende blok\r\n}\r\n\r\n  \r\n  function getWeekNumber(date) {\r\n    const temp = new Date(date.getTime());\r\n    temp.setHours(0, 0, 0, 0);\r\n    temp.setDate(temp.getDate() + 3 - ((temp.getDay() + 6) % 7));\r\n    const week1 = new Date(temp.getFullYear(), 0, 4);\r\n    return 1 + Math.round(((temp.getTime() - week1.getTime()) / 86400000 - 3 + ((week1.getDay() + 6) % 7)) / 7);\r\n  }\r\n  \r\n  function addOpmerkingenOnderLegenda(doc, medewerkers, beschikbaarheid, startY) {\r\n    const opmerkingen = medewerkers\r\n      .map((m) => {\r\n        const naamKey = m.naam.toLowerCase();\r\n        const opmerking = beschikbaarheid?.[naamKey]?.opmerking?.trim();\r\n        if (opmerking) {\r\n          return `• ${m.naam}: ${opmerking}`;\r\n        }\r\n        return null;\r\n      })\r\n      .filter(Boolean);\r\n  \r\n    if (opmerkingen.length === 0) return startY;\r\n  \r\n    const ruimteNodig = opmerkingen.length * 6 + 16;\r\n    if (startY + ruimteNodig > doc.internal.pageSize.getHeight() - 20) {\r\n      doc.addPage();\r\n      startY = 20;\r\n    }\r\n  \r\n    // 🧼 Styling\r\n    const margeLinks = 20;\r\n    const regelhoogte = 6;\r\n  \r\n    doc.setFontSize(9);\r\n    doc.setTextColor(33, 37, 41); // donkergrijs\r\n    doc.setFont(undefined, \"bold\");\r\n    doc.text(\"Opmerkingen:\", margeLinks, startY + 10);\r\n  \r\n    doc.setFont(undefined, \"normal\");\r\n    opmerkingen.forEach((regel, i) => {\r\n      doc.text(regel, margeLinks + 4, startY + 16 + i * regelhoogte);\r\n    });\r\n  \r\n    return startY + ruimteNodig;\r\n  }\r\n\r\n   \r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}